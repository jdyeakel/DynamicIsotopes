(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    449998,       9456]
NotebookOptionsPosition[    445382,       9300]
NotebookOutlinePosition[    445739,       9316]
CellTagsIndexPosition[    445696,       9313]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.64044035569347*^9, 3.64044035595702*^9}, {
  3.640440500206583*^9, 3.6404405050637693`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TwoAxisPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f_", ",", "g_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "x1_", ",", "x2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fgraph", ",", "ggraph", ",", "frange", ",", "grange", ",", "fticks", 
      ",", "gticks"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fgraph", ",", "ggraph"}], "}"}], "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
           RowBox[{"Axes", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{
             RowBox[{"ColorData", "[", "97", "]"}], "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", "g"}], "}"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"frange", ",", "grange"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"PlotRange", "/.", 
           RowBox[{"AbsoluteOptions", "[", 
            RowBox[{"#", ",", "PlotRange"}], "]"}]}], ")"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"fgraph", ",", "ggraph"}], "}"}]}]}], ";", 
     RowBox[{"fticks", "=", 
      RowBox[{"N", "@", 
       RowBox[{"FindDivisions", "[", 
        RowBox[{"frange", ",", "5"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gticks", "=", 
      RowBox[{"Quiet", "@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"fticks", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{"#", ",", "2"}], "]"}], ",", "StandardForm"}], "]"}], 
            "&"}], "/@", 
           RowBox[{"Rescale", "[", 
            RowBox[{"fticks", ",", "frange", ",", "grange"}], "]"}]}]}], 
         "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"fgraph", ",", 
       RowBox[{"ggraph", "/.", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"graph_", ",", "s___"}], "]"}], "\[RuleDelayed]", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"GeometricTransformation", "[", 
            RowBox[{"graph", ",", 
             RowBox[{"RescalingTransform", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", "grange"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", "frange"}], "}"}]}], 
              "]"}]}], "]"}], ",", "s"}], "]"}]}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "/@", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fticks", ",", "gticks"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6404405188697977`*^9, 3.6404405195202093`*^9}, {
  3.6404405652897863`*^9, 3.640440585156568*^9}}],

Cell["\<\
Define the expectation for a time-dependent Ornstein-Uhlenbeck process\
\>", "Text",
 CellChangeTimes->{{3.6403501864204693`*^9, 3.640350200178973*^9}, {
  3.640350953775303*^9, 3.640350954234728*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"EX", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], "*", "T"}], "]"}]}], "-", 
      RowBox[{"(", "X0", ")"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "f"}], ")"}], "*", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Mu]", "[", "t", "]"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "f"}], ")"}], "*", "t"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}]}], ")"}], "2"], 
   " ", "\[Equal]", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "f"}], ")"}], "^", "2"}], "*", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"2", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], "*", "t"}], "]"}], "*", 
       RowBox[{
        RowBox[{"\[Sigma]", "[", "t", "]"}], "^", "2"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.640350985416975*^9, 3.640351028634099*^9}, {
   3.64035109529416*^9, 3.640351229692012*^9}, 3.640351666385047*^9, {
   3.640351846808148*^9, 3.640351995120596*^9}, {3.640352113477374*^9, 
   3.640352116580511*^9}, {3.640352749168859*^9, 3.640352749784573*^9}, {
   3.640353345920516*^9, 3.640353350352303*^9}, {3.640353389774064*^9, 
   3.640353392181802*^9}, 3.6403536847004347`*^9, {3.640355883254798*^9, 
   3.640355883554941*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", 
    SuperscriptBox["EX", "2"]}], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", "X0"}], 
   "+", 
   SuperscriptBox["X0", "2"], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "T"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", "f", " ", 
    
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "T"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
   RowBox[{"2", " ", "X0", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "T"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", 
   RowBox[{"2", " ", "f", " ", "X0", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "T"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        RowBox[{"\[Mu]", "[", "t", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"], "-", 
   RowBox[{"2", " ", "f", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
         RowBox[{"\[Mu]", "[", "t", "]"}]}], 
        RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["f", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
         RowBox[{"\[Mu]", "[", "t", "]"}]}], 
        RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"]}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "T"], 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}], "-", 
   RowBox[{"2", " ", "f", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "T"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
   RowBox[{
    SuperscriptBox["f", "2"], " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "T"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}]}]}]], "Output",
 CellChangeTimes->{{3.6403512156566772`*^9, 3.6403512306941566`*^9}, 
   3.640351682062613*^9, 3.640351999979021*^9, 3.640352117541201*^9, 
   3.6403527507496557`*^9, 3.640353352951848*^9, 3.6403534008689423`*^9, 
   3.640353690049611*^9, 3.6403559086071997`*^9, 3.640438041389555*^9, 
   3.640440375039925*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ESquareXFull", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], 
       RowBox[{"\[DifferentialD]", "t"}]}]}], "-", 
     RowBox[{"2", " ", "f", " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], 
        RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
     RowBox[{
      SuperscriptBox["f", "2"], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], 
        RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", 
        "X0"}], "+", 
       SuperscriptBox["X0", "2"], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "T"], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}], 
          RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", "f", 
        " ", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "T"], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}], 
          RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
       RowBox[{"2", " ", "X0", " ", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "T"], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}], 
          RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", 
       RowBox[{"2", " ", "f", " ", "X0", " ", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "T"], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}], 
          RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox["\[Integral]", "0", "T"], 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
            RowBox[{"\[Mu]", "[", "t", "]"}]}], 
           RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"], "-", 
       RowBox[{"2", " ", "f", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", "0", "T"], 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
             RowBox[{"\[Mu]", "[", "t", "]"}]}], 
            RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["f", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", "0", "T"], 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
             RowBox[{"\[Mu]", "[", "t", "]"}]}], 
            RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"]}]}], ")"}]}], 
    ")"}], "/", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]]}]}]], "Input",
 CellChangeTimes->{{3.640352727734564*^9, 3.64035276223988*^9}, 
   3.640353385690261*^9, {3.640353416472117*^9, 3.640353499457231*^9}, {
   3.640354463749751*^9, 3.6403545291624527`*^9}, {3.6403559237606564`*^9, 
   3.640355941453431*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", "X0"}], 
    "-", 
    SuperscriptBox["X0", "2"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        RowBox[{"\[Mu]", "[", "t", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", "f", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        RowBox[{"\[Mu]", "[", "t", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", 
    RowBox[{"2", " ", "X0", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        RowBox[{"\[Mu]", "[", "t", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
    RowBox[{"2", " ", "f", " ", "X0", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        RowBox[{"\[Mu]", "[", "t", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
         RowBox[{"\[Mu]", "[", "t", "]"}]}], 
        RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"], "+", 
    RowBox[{"2", " ", "f", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "T"], 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}]}], 
         RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"]}], "-", 
    RowBox[{
     SuperscriptBox["f", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "T"], 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}]}], 
         RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"]}], "+", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "T"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}], "-", 
    RowBox[{"2", " ", "f", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
    RowBox[{
     SuperscriptBox["f", "2"], " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.640352734580675*^9, 3.640352763186661*^9}, {
   3.640353479927408*^9, 3.640353500395372*^9}, 3.6403536963034286`*^9, 
   3.640354532817504*^9, 3.640355952387203*^9, 3.640438041676475*^9, 
   3.640440375579248*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EXsol", " ", "=", "  ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", "X0", ")"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"1", "-", "f"}], ")"}]}], "*", "T"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "f"}], ")"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"1", "-", "f"}], ")"}]}], "*", "T"}], "]"}], "*", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], "*", "t"}], "]"}], "*", 
       RowBox[{"\[Mu]", "[", "t", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.640353705289662*^9, 3.640353721574069*^9}, {
  3.640354244693685*^9, 3.6403542530053587`*^9}, {3.64035579617514*^9, 
  3.640355796410225*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "f"}], ")"}], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "T"], 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
      RowBox[{"\[Mu]", "[", "t", "]"}]}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}]}]], "Output",
 CellChangeTimes->{3.640353723120668*^9, 3.6403542546570683`*^9, 
  3.6403545418454647`*^9, 3.640355958581284*^9, 3.6404380417218943`*^9, 
  3.6404403756267853`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ESquareX", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ESquareXFull", "/.", 
    RowBox[{"EX", " ", "\[Rule]", "EXsol"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640353506135201*^9, 3.640353536018524*^9}, {
  3.6403537123778133`*^9, 3.640353728018087*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"X0", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "T"], 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", "-", 
             RowBox[{"f", " ", "t"}]}]], " ", 
           RowBox[{"\[Mu]", "[", "t", "]"}]}], 
          RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}], "2"], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "t"}]], " ", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.640353523896617*^9, 3.640353536759391*^9}, 
   3.640353729199903*^9, 3.640354261383754*^9, 3.6403545422609797`*^9, 
   3.640355969787209*^9, 3.6404380419790487`*^9, 3.640440375886731*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SquareEX", " ", "=", 
  RowBox[{"FullSimplify", "[", " ", 
   RowBox[{
    RowBox[{"(", " ", "EXsol", ")"}], "^", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640351322159409*^9, 3.640351326904264*^9}, {
  3.640351362275517*^9, 3.640351376069869*^9}, {3.640353549642325*^9, 
  3.640353574933702*^9}, {3.6403537435282087`*^9, 3.640353745062092*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"X0", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", "-", 
           RowBox[{"f", " ", "t"}]}]], " ", 
         RowBox[{"\[Mu]", "[", "t", "]"}]}], 
        RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.640351364191698*^9, 3.640351376450695*^9}, 
   3.640351691344843*^9, {3.640353566713874*^9, 3.640353575261866*^9}, 
   3.640353745823534*^9, 3.640354261657751*^9, 3.6403545423120203`*^9, 
   3.640355343601145*^9, 3.640355977562107*^9, 3.64043804203548*^9, 
   3.640440375926632*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"ESquareX", "\[IndentingNewLine]", "SquareEX"}], "Input",
 CellChangeTimes->{{3.640355416076171*^9, 3.640355422415276*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"X0", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "T"], 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", "-", 
             RowBox[{"f", " ", "t"}]}]], " ", 
           RowBox[{"\[Mu]", "[", "t", "]"}]}], 
          RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}], "2"], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "t"}]], " ", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.640355423017909*^9, 3.640355983943321*^9, 
  3.640438042193325*^9, 3.640440375951709*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"X0", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", "-", 
           RowBox[{"f", " ", "t"}]}]], " ", 
         RowBox[{"\[Mu]", "[", "t", "]"}]}], 
        RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.640355423017909*^9, 3.640355983943321*^9, 
  3.640438042193325*^9, 3.640440375955521*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VarXFull", "=", 
  RowBox[{"ESquareX", "-", "SquareEX"}]}]], "Input",
 CellChangeTimes->{{3.640355432997554*^9, 3.640355465526066*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]]}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"X0", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "T"], 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"t", "-", 
            RowBox[{"f", " ", "t"}]}]], " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}]}], 
         RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"X0", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
         RowBox[{
          SubsuperscriptBox["\[Integral]", "0", "T"], 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"t", "-", 
              RowBox[{"f", " ", "t"}]}]], " ", 
            RowBox[{"\[Mu]", "[", "t", "]"}]}], 
           RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}], "2"], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "t"}]], " ", 
         SuperscriptBox[
          RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
        RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.640355443661643*^9, 3.64035546596332*^9}, 
   3.6403559983626833`*^9, 3.640438042228874*^9, 3.640440375995525*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VarX", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", "VarXFull", "]"}]}]], "Input",
 CellChangeTimes->{{3.640351380596401*^9, 3.640351413804324*^9}, {
  3.6403515017356577`*^9, 3.6403515052455807`*^9}, {3.6403535854764547`*^9, 
  3.6403535941053867`*^9}, {3.6403554704227657`*^9, 3.6403554835032797`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "T"], 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "t"}]], " ", 
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
    RowBox[{"\[DifferentialD]", "t"}]}]}]}]], "Output",
 CellChangeTimes->{{3.640351397236834*^9, 3.6403514169077787`*^9}, 
   3.64035150591124*^9, 3.640351693864361*^9, 3.640353598683385*^9, 
   3.6403537546276903`*^9, 3.640354261773975*^9, 3.640354542341868*^9, 
   3.640355349397893*^9, {3.64035547224566*^9, 3.640355484222671*^9}, 
   3.640356004322209*^9, 3.640438042272547*^9, 3.640440376045315*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EXspecific", " ", "=", " ", 
  RowBox[{"EXsol", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", "5"}], "+", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"VarXSpecific", "=", 
  RowBox[{"VarX", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", "5"}], "+", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"EXspecific", ",", "VarXSpecific"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "\[Rule]", "0.9"}], ",", 
      RowBox[{"X0", "\[Rule]", 
       RowBox[{"-", "10"}]}], ",", 
      RowBox[{"\[Mu]0", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "0", ",", "200"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.640353643309216*^9, 3.640353644166993*^9}, {
   3.64035375962079*^9, 3.640354198092341*^9}, {3.6403542865675993`*^9, 
   3.640354312871107*^9}, 3.64035438711215*^9, {3.640354549748043*^9, 
   3.640354662935585*^9}, {3.640355506737121*^9, 3.64035550747943*^9}, {
   3.640356073139987*^9, 3.640356076704564*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "f"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"5", "-", 
       RowBox[{"5", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"T", "-", 
          RowBox[{"f", " ", "T"}]}]]}]}], 
      RowBox[{"1", "-", "f"}]], "+", 
     FractionBox[
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"T", "-", 
          RowBox[{"f", " ", "T"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", "T", "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
           RowBox[{"Sin", "[", "T", "]"}]}]}], ")"}]}]}], 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "f"}], ")"}], " ", "f"}]}]]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.640353874204624*^9, 3.640353951423994*^9}, 
   3.6403540046668863`*^9, {3.6403540392191067`*^9, 3.640354098865287*^9}, 
   3.640354200697926*^9, 3.6403542633566837`*^9, {3.640354295182415*^9, 
   3.640354315382647*^9}, 3.64035438902038*^9, {3.6403545440096188`*^9, 
   3.640354603958631*^9}, 3.640355511387169*^9, {3.64035605579917*^9, 
   3.6403560788813066`*^9}, 3.640438044214923*^9, 3.640440378518671*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "f"}], ")"}], " ", "f"}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "T"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "T"}], "]"}]}]}], ")"}]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "f"}], ")"}], " ", "f"}]}], 
    ")"}]}]]], "Output",
 CellChangeTimes->{{3.640353874204624*^9, 3.640353951423994*^9}, 
   3.6403540046668863`*^9, {3.6403540392191067`*^9, 3.640354098865287*^9}, 
   3.640354200697926*^9, 3.6403542633566837`*^9, {3.640354295182415*^9, 
   3.640354315382647*^9}, 3.64035438902038*^9, {3.6403545440096188`*^9, 
   3.640354603958631*^9}, 3.640355511387169*^9, {3.64035605579917*^9, 
   3.6403560788813066`*^9}, 3.640438044214923*^9, 3.640440379455439*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
j2Zg3sUcMlNRk3MB3RtZz3YYESgiSFQnTtEFCM3D5wPwfLzPYwNaVLGOZnrn
g+fjALtRKzYtF8gVuv+DGdffLqN6irOeC7xt4j3gieuTpnrRPd/IBRCz1B5H
XL8UyUjfT6YuwLnRbvoJ17c1r2OIvJULRK4KLm3H9W/CphB+yM4FEnQVO4cw
H/Q3mGMeU1xApZ5coIL5oTE/dZzB1QVEE6qqd2C+KE42p9l6uECS+Y2+XMwf
maGi89m7XGDPAKfDVcw/0Y74S6N+LnBTw2RJBfOK/6lHkXgQ1ueteZ2wJu5q
Vuzf5wJDLCXZf/HzPnRBj4oOuMCGxHKsJtaVlItdryNdILgxWHQTXn+puHVi
S7QLbAl6OOyD+Ws0v7ioF+cCkvr0oU6Yz2eMxbeEH3eBvRLtgm8xvwcuUPnL
kl1AXDDi+h/Md+GPJ3YOp7nARIa9Qh3m/z7VGmBPd4HvH0g2XNgf1yZNOEOm
C3SpzNFx4f5B95ozOCrHBbKPbWlowP3l4qED58YK8O81alUE7kcTLYXF2665
gM/Q+Nl+7OfkiK77ZtddIErEpNhem0DogfzI7Tsu8P4pZXOOAoHYNnvNTdS4
QMjxfJNQKfx9XM/QketcQKDv8gkBEQJ9XZ6ROvbMBb7MXmcQwPnErVV+yL4H
x3P1YUbIbxLyS3uTeuK1C8xfCx1uwv349hBjXu0Qfj9+r7oCzlfjmD1IcMIF
jkke4nLC+Zz+Iuu10yTOD3W+Jj6c74O8zdMnZ/D3d8p5xdmP+32DyNbvP/F5
jKS8r+J6echCERFbdoFn/HeOmzbhevM8rkb7g++/bU1eCc9TdpVVFmfWcX63
eK0GPSShS6vvPJ7Ru8J+/63KP3F9frTZGraw2RVeqhyt78H1q5CvnyjF6gom
pkiYFfu56K/7s7E3h3veD8+V4vpv1ssvz+ByhS/ZlKYizIet6R0NzdyuwFsX
w74J88N97E/nCr8ryDGFUbowX0oUZCfkhF1hwe/cKgPmz1y8++JucVcItq2i
v4F5pd2VxpQt7QpOfXOfHuVjvyP4kK9d3hUq6rdeN8C6K2xa4a8SPm+dS5cy
1rzPyKCk7grtf3+F5GC9h8PceY+2K6g/3Mocgter2h0VdEnfFaYvMTdWYv79
rio9+gpc4XDPY2kvfB7Tf/3p/8xcgT5i2j8a8zjDcVOxmrUrcBwx41/HvB4u
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
SWigr0A+xursO8Z4zQPug1nFdxgvM908Ke83PFATXnzIFPXfkO5AssdbHiw/
sFVqHeq/ZL0lOjve8WD0i/iTP5iPrcs8ipx6kQfOvOcBmK98/RfPN33gwY41
A/0XMb+05aIeNh9xvQEHMhxXk4mFBtYDawd5sN72h3Abno/7DYtnTIZ5sKkp
3tddi0ysXnHNQOM7D3RKdkT34f4753O0hjTFg3v+8p5luD+HzjFdRH9i/aaZ
vIz9RyKuj+oGDf3hwcorAb1Gk1jviyXmvZ1Bf7IntWVHSYSzw9jlF39xv82m
O8z/jPrndkllgaAvFD+d+L6uG/Xj28uO6cK+MLefdvF0B/JE/Mj7C6K+oLZa
dOs/1Be7d9kIB4v7gnSz1cNg5GftZa0knoQvdCRl7T+G/FxcP1+XIuUL6sRF
8jPkZ7N241YrGV+4mHz7+ZJi1Gc7770zIPmC6EcNSZO7qGdjEgNU5XwhJWb+
5UTUS73FIQLSCr4QZCb1elMuiTAb8EwQVPKFeftuDm3JJhHxsuu1JpV94XOc
fHoW/3siNuplHxf7AjFUE74TeWR7QMT+taov6Ji/vM1EXqWmf+6qV/OFxv80
RZ/z3xdrer7ngYYvbDyWLR6PvHP9d+fvLS1fcAl83F+CPMw3unD+uo4v5An5
elugLUoPUj+n5ws3pIzHlqBNP+tRHKHvC3FHBe+x0C6vstx0wMAXxt98Z8/H
8WS/LulkGfnCq5PReyRwvr0qgrvdVvjCmjurWv1R79Zt/Ti9aZUvWH/mbjFE
fakWVn/GzNQXMtdn69ujXg7Lu6W6bI0vmArpH65Cnra9OVuobI7+aD0cOIE8
NRA7sEHS0heWbv5WdxN5Gmvm1v7XCvMVdsZYCXlqeUn5d5+1L7Rp+dkNlCCf
n/491WrjC66MmWTTB9g/T/WpPNnoCwYVMU8aqklExo6b1jc3+8KD3VWKufWo
v2VMT/g7+0Jph4sG/zxlgYKSz3ZfcD7Stz9tgERU7Zu+5bLDFzbHG51O+UIi
9jUSjSYevmDbcdi37QeeN3GO8tN0X7j9Wj8veiGZWFG5IneE4Qs7FmcKXcf+
5tQwybKH5QsFbzsG05Wx/9nylkbw0P8VE7epqA8uhVaP39vlC7NTxUeEUD9M
3Ew/luXnC493M2uOrSQTWfN8s2MDfKGQLTpv3Op/FZ15PFVbFMe9lG6iyCn3
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
eu/ehXogM8ujf3SUgmFii9tqzJ/+B9GS+DY=
     "]], LineBox[CompressedData["
1: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
nd06KTg/SMVvVlxPh+zMuG8PfEg0FnzrqMxGvH77o2XuOjifNtffl7Cnw+0f
hYe72oRo/8bxnklHOrTN1Nl7MEWIhhc4UPrd6HDyZc98zb8CZBqx59RXCh12
xhj8SMkRoOAvSY9a6XQI+9E88Br7zUD+52W1HDx26vmzvZSPVqjNYlf50kFI
rd1iEoJ5Jdbo4qOddAg5c6Ml3oiPbv5wf1G4hw6bL2UXH+ojUK/HoX93gulA
cBd1S9wj0PLSK2ZZ++mgqDYWPPcYgXbqVvlfCacD2XZpzNWTQJln+kTEYTrs
5YnfOLiaQF9H5evPR9NBbK5SudhiAh0sPi2/P44OXemeI5ELCDQrWsKDfpIO
Ro1X/v3v5yn2Ry5an6ED0+B6/SoFAulLjzVoJdJhKuPJn724HxS+CVKUvESH
h7I6LZPrCLQp5Tulh6DDW/tzV48ycb7w5iTXkHR4PREkOBSP16fd3Jh3hQ5x
YRIznYuw/3/bppxylQ6ZtOuh64YIdPLWK1pEFq6vq3F2oAkf3VhT+t7mLh1m
uzta1Jfx0bp/FouW3qPDwcKhtr45AvSq4jZd+gEdMtKT3uvTBajX5UpzwyM6
JK598oo6JkARCotUiyroUJwzSzhqK0RzmxMZoio6rMjKXT3/vBAJU+eQ0a/o
8IVy5MqpJiEy9I1p8a3F9dVbfoqqgv16+V81p3o67FA+zTxII5HzYChzRRMd
Zr55PCRxlkSf7veJFnykg2SJw4RZKc6nETtaf7XSwSFhqawr9ttJ1KbxsYMO
M3SFThUzReiMpCf70Ve8X/lr49Wxv6tX16Vm9NChxiZaQgb7++1Ex8/x/XTw
01fP2I75ZQOtfPHuITpsiBHFqmqKUK3aOs7WX3h+0eAqZ1kRYnfkp5mP06HR
xsLBcoREA5mGHQv/0eGY485tG9+QKGrPNe3JGV5wsDb6/I9rJJpnpsFrl/CC
2FNBnz/uw/3gd3LGMykvWH8z2PvNGhKtLJvXmS3jBe5lrVFZuL89iTmx5Kyc
F4iVGXa75+M84zjDd5+iFzAmDj39sFOIghuGutaqewFt7YqaphoBmiEI0NPU
8oJw7wRdQZQAJbI7d4jpeoHCL0eifKUAaekyM78t9QLjLHeniC98lNfz7tsr
Qy/Mw3MOfCcwr951WXp3pRfwl65RXbKNj+r3V/lfNPeCvN25DZbzsd+vQ9lh
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
IA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 200}, {-9.999997959183258, 0.027487580128577487`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.640353874204624*^9, 3.640353951423994*^9}, 
   3.6403540046668863`*^9, {3.6403540392191067`*^9, 3.640354098865287*^9}, 
   3.640354200697926*^9, 3.6403542633566837`*^9, {3.640354295182415*^9, 
   3.640354315382647*^9}, 3.64035438902038*^9, {3.6403545440096188`*^9, 
   3.640354603958631*^9}, 3.640355511387169*^9, {3.64035605579917*^9, 
   3.6403560788813066`*^9}, 3.640438044214923*^9, 3.640440379979887*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ExpVar", " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EXspecific", " ", "=", " ", "EXsol"}], ",", 
     RowBox[{"VarXSpecific", "=", "VarXFull"}]}], "}"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"Sin", "[", "t", "]"}]}]}]}], ",", 
     RowBox[{"f", "\[Rule]", "0.99"}], ",", 
     RowBox[{"X0", "\[Rule]", 
      RowBox[{"-", "10"}]}], ",", 
     RowBox[{"\[Mu]0", "\[Rule]", "0.5"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"ExpVar", ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "1000", ",", "1100"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6403546906355352`*^9, 3.6403546988689117`*^9}, {
  3.640354738222794*^9, 3.640354803666709*^9}, {3.640356128176557*^9, 
  3.640356158291285*^9}, {3.640356215523508*^9, 3.640356247900648*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "10"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.010000000000000009`"}], " ", "T"}]]}], "+", 
    RowBox[{"0.010000000000000009`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.010000000000000009`"}], " ", "T"}]], " ", 
     RowBox[{"(", 
      RowBox[{"100.99990000999891`", "\[VeryThinSpace]", "-", 
       RowBox[{"99.99999999999991`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"0.010000000000000009`", " ", "T"}]]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"0.010000000000000009`", " ", "T"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.9999000099990001`"}], " ", 
           RowBox[{"Cos", "[", "T", "]"}]}], "+", 
          RowBox[{"0.009999000099990009`", " ", 
           RowBox[{"Sin", "[", "T", "]"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "0.020000000000000018`"}], " ", "T"}]]}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "10"}], "+", 
        RowBox[{"0.010000000000000009`", " ", 
         RowBox[{"(", 
          RowBox[{"100.99990000999891`", "\[VeryThinSpace]", "-", 
           RowBox[{"99.99999999999991`", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"0.010000000000000009`", " ", "T"}]]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"0.010000000000000009`", " ", "T"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "0.9999000099990001`"}], " ", 
               RowBox[{"Cos", "[", "T", "]"}]}], "+", 
              RowBox[{"0.009999000099990009`", " ", 
               RowBox[{"Sin", "[", "T", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.020000000000000018`"}], " ", "T"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "10"}], "+", 
          RowBox[{"0.010000000000000009`", " ", 
           RowBox[{"(", 
            RowBox[{"100.99990000999891`", "\[VeryThinSpace]", "-", 
             RowBox[{"99.99999999999991`", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"0.010000000000000009`", " ", "T"}]]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"0.010000000000000009`", " ", "T"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "0.9999000099990001`"}], " ", 
                 RowBox[{"Cos", "[", "T", "]"}]}], "+", 
                RowBox[{"0.009999000099990009`", " ", 
                 RowBox[{"Sin", "[", "T", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}], "2"], "+", 
       RowBox[{"0.0004000000000000007`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "72.9982999301029`"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"0.020000000000000018`", " ", "T"}]], " ", 
           RowBox[{"(", 
            RowBox[{"74.99999999999994`", "\[VeryThinSpace]", "-", 
             RowBox[{"1.9992003198720512`", " ", 
              RowBox[{"Cos", "[", "T", "]"}]}], "-", 
             RowBox[{"0.0024997500249975026`", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2.`", " ", "T"}], "]"}]}], "+", 
             RowBox[{"0.03998400639744106`", " ", 
              RowBox[{"Sin", "[", "T", "]"}]}], "-", 
             RowBox[{"0.24997500249975002`", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2.`", " ", "T"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.64035467765793*^9, {3.64035473518906*^9, 3.640354804572804*^9}, 
   3.6403560919266872`*^9, {3.640356132018661*^9, 3.640356159065797*^9}, {
   3.640356218278343*^9, 3.640356248711719*^9}, 3.640438046074416*^9, 
   3.6404403804576073`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
YZs=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
7AQLDqko9iL/3ut4ZHiUsuPLwV7kZyObWrWrlO2y26ZBH5WVqoZGKItbREj2
wR9xL3SqHsXxfc55P4Mejn4ue8ahvO1+Pd2PDbIvuukF5vrtEIyjv/eszC+L
oex7dkEo9GWd6tHsU7T9U59x9P3k3di06Ac0LrpMRgJ6ZNiXENRD45eCFRZB
r4odD26SzKHvqy7eYqBvitX7LHVyqP9UzLcDJ6rv0ltD+bjKLOo3RxK3q4ZQ
Xld4IQIcNLBlQiaYxahEDoPb/vP6dZnGl1WevIvx19527mii8cCTM5tw/BrN
9fV/6fGiE+4vwnz101Zfm5ZL16d75Rvo+6nfK08tA3Odnsyn5zvVfXm6ey6t
h8ObJaGHh+4tiTxA45ok5ijWa0hb378wl+6/x5Ag6OG2LO0NtbT9kxdf0+D3
343MNvtM42ZzbMd+5ZPbj5SUtfLA8zbI3sD101s0RdQOzMnNkJ4I/SvKkxwI
ovxN/f0J+MlDW8ceXqQse2nhSdwvQw1/Lr8AcwNi30tPRb22eODELzpe88yr
11UYslrs054lx8BWCb5NmgwRBL3zdTlGr0+2hNkChix81bQ2ksaXj+3/bIB6
7GTd3BoaT/a83WzOkDdm519bHwdbrZgp6sWQLZF7jf/Lp3r9jlWBevR57+sP
4ZT3rW+9f4Yhps6LU3Ly6f7FxIttFQyZsvhnRxOYfUfAyNXi+fselLyBQXtt
6XfzP0GvPZ4Y7qJ8ul9Gpo8hGfVa7VkM/V7OUev9II53usvgJeWmZeoG0Msp
vl7vHXj0/dDkN9tpPf1ckBAKZv+yq/bUhP4sn6GfwaPfW+/zmruAR26qth56
Bm6bNxyna8IjmoeXLBqg/St3Jwegfs8Yznkry0f/yrzNoVbwl83r9dby6X79
up52+MvnlhWtwWCB2OnxK+AvTS9Pjk8D8yvq3wS6YT7pT988pTxjpsRE+MtI
lk7cNz59327btA/62RWUrDvpBI4/fbzDOfiRm7bWsavB/DmHr61D/p17rXhB
0Am6v79Mtwb5OVNTtOXwCfq91YLN35C//2X7xJwFcxUNh14jv28VuaPzhPZ/
Kn/qAPL/i9CZr3tp/zpN6076e9eOqIOSBTifTx0dYvBfpWveac+nLMzJ6KT7
s7dMmm0L6PdPynnRdL9T+1h0ALjtwpYN1G/2HPs7P4ny+q0rBqFfjhOcmsrA
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
WHd2YX1irWWW0H5u7qDFRSxvP6plAL/vf8ljDHg=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1000., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{343.890625, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{1000, 1100}, {-1.0103865509568497`, 0.030825853232095968`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.64035467765793*^9, {3.64035473518906*^9, 3.640354804572804*^9}, 
   3.6403560919266872`*^9, {3.640356132018661*^9, 3.640356159065797*^9}, {
   3.640356218278343*^9, 3.640356248711719*^9}, 3.640438046074416*^9, 
   3.640440380554069*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"EXsol", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"2", "*", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{"f", "\[Rule]", "0.5"}], ",", 
     RowBox[{"X0", "\[Rule]", 
      RowBox[{"-", "10"}]}], ",", 
     RowBox[{"\[Mu]0", "\[Rule]", "0.5"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{3.640355007679688*^9, 3.640355164636673*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "10"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.5`"}], " ", "T"}]]}], "+", 
  RowBox[{"0.5`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.5`"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{"2.8000000000000003`", "\[VeryThinSpace]", "-", 
     RowBox[{"2.`", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"0.5`", " ", "T"}]]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"0.5`", " ", "T"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.8000000000000002`"}], " ", 
         RowBox[{"Cos", "[", "T", "]"}]}], "+", 
        RowBox[{"0.4000000000000001`", " ", 
         RowBox[{"Sin", "[", "T", "]"}]}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.640355009350977*^9, 3.6403551650236692`*^9, 
  3.640438046263968*^9, 3.640440380658553*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6403550149067583`*^9, 3.64035501711982*^9}, {
  3.640355118056534*^9, 3.640355120679105*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.`"}], "-", 
  RowBox[{"8.6`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.5`"}], " ", "T"}]]}], "-", 
  RowBox[{"0.4000000000000001`", " ", 
   RowBox[{"Cos", "[", "T", "]"}]}], "+", 
  RowBox[{"0.20000000000000004`", " ", 
   RowBox[{"Sin", "[", "T", "]"}]}]}]], "Output",
 CellChangeTimes->{3.640355121305162*^9, 3.640355168731557*^9, 
  3.640438046395708*^9, 3.640440380825274*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"EXsol", "\[IndentingNewLine]", "VarX"}], "Input",
 CellChangeTimes->{{3.640366313170547*^9, 3.640366324824087*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "f"}], ")"}], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "T"], 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
      RowBox[{"\[Mu]", "[", "t", "]"}]}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}]}]], "Output",
 CellChangeTimes->{{3.64036631439857*^9, 3.640366325869956*^9}, 
   3.64043804641751*^9, 3.6404403808523073`*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "T"], 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "t"}]], " ", 
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
    RowBox[{"\[DifferentialD]", "t"}]}]}]}]], "Output",
 CellChangeTimes->{{3.64036631439857*^9, 3.640366325869956*^9}, 
   3.64043804641751*^9, 3.640440380890766*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a1", "+", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", "b1"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a1", "\[Rule]", "0.5"}], ",", 
        RowBox[{"b1", "\[Rule]", "1"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "1"}], ",", "6"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a1", "+", 
       FractionBox["1", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "k", "*", 
           RowBox[{"(", 
            RowBox[{"t", "-", "b1"}], ")"}]}], "]"}]}]]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "\[Rule]", "2"}], ",", 
        RowBox[{"a1", "\[Rule]", "0.5"}], ",", 
        RowBox[{"b1", "\[Rule]", "1"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "1"}], ",", "6"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.640440080744582*^9, 3.640440116330461*^9}, {
  3.640441089364717*^9, 3.6404410896787357`*^9}, {3.640448428475284*^9, 
  3.640448587907173*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxFz2tMknEUBvC3V4lS8ULaa1AQ6dTK6SpsrplgtMKlLm8zvLRGUKMPkmlk
I506x4hYE42ZfpCWuqbVJtpFY5Woa83mAl1YmJbmWEuZQYUoE7osz/9sz579
Pj07LKE0R4xjGJb2J3+bNZ3Z5/MtvcT+3WeO5bnJyh6zg1VtufiF1gXw4bfS
gRiLDawf+WAaFM6BY2leriTwI7j6+uWeX03j4B7/MOPVa8Pg+rl40cVbYvBs
Nl4ilQ1x1h29K7Fq2mcGj6T0yGdqp8AO22gxdd8cWFNcNzylsoG/CqOGcngL
4F6/TA3zih1c1SE7s9i9BA69EdfKMCPfLbNOnFxGlvUK3GzS9/92c2jxrxTG
YOQXnfsjsiKRzzJ17VYWsouUPR3ER1Yu4gSnFPnhwDlV+zPkccXoGpnsAG9n
Nc6bdMhig+BNS7ITnEK37tGKfoDD5YWqhoafYOEpdkvkoAsc6MUrlhkr4Dxj
d9v5fA/YnXFcm2BYAzcSXwrmAzDuuiuJEMpq1AawWp4UZ8jDwdJS/sLRMj9w
szqDm6z0By8Gn/BYnpDAYTsPnk41bwSLtPTYbL9NYE+Ss3YscTNYKH5cT+UH
gF3uS3a8MhBcSN/hNTQFgXFJ/52ZLgr4PS2r68FkMLi6yCTgOULAu2ti+o9o
QtH+tiLiNTMM/Zeu5NTdR17t7qVReVSwPXciXWFCXk5w7DVJtoDbdeTJLCwc
/LQg3KJXI8+mMZTfoiPA5eWMm+Q+5HuHiBJB6law8wDlU8075M6KlUdqIQGO
vq3PP6ZH7jBIXD4f8m+oDkLb
      "]]}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Oevxz/8DIB8sfA==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.45},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 6}, {0.5, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.640448485549535*^9, 3.640448520099327*^9}, {
  3.640448555179368*^9, 3.640448588624199*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EXHeavy", " ", "=", " ", 
  RowBox[{"EXsol", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a1", "+", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", "b1"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a2", "+", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", "b2"}], "]"}]}]}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"VarXHeavy", "=", 
  RowBox[{"VarX", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a1", "+", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", "b1"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a2", "+", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", "b2"}], "]"}]}]}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"EXLogistic", " ", "=", " ", 
  RowBox[{"EXsol", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a1", "+", 
       FractionBox["1", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "k", "*", 
           RowBox[{"(", 
            RowBox[{"t", "-", "b1"}], ")"}]}], "]"}]}]]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a2", "+", 
       FractionBox["1", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "k", "*", 
           RowBox[{"(", 
            RowBox[{"t", "-", "b2"}], ")"}]}], "]"}]}]]}]}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"VarXLogistic", "=", 
  RowBox[{"VarX", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a1", "+", 
       FractionBox["1", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "k", "*", 
           RowBox[{"(", 
            RowBox[{"t", "-", "b1"}], ")"}]}], "]"}]}]]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a2", "+", 
       FractionBox["1", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "k", "*", 
           RowBox[{"(", 
            RowBox[{"t", "-", "b2"}], ")"}]}], "]"}]}]]}]}]}], 
    "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.6404390928289824`*^9, 3.640439169462989*^9}, {
   3.640439213779895*^9, 3.6404392185505466`*^9}, {3.640439677497706*^9, 
   3.640439713857039*^9}, {3.640439750017734*^9, 3.640439827701027*^9}, {
   3.640440032214239*^9, 3.640440036013897*^9}, 3.6404401230359707`*^9, {
   3.640440155067474*^9, 3.640440171264535*^9}, {3.64044860909046*^9, 
   3.640448650839891*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "f"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"a1", "-", 
          RowBox[{"a1", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"T", "-", 
             RowBox[{"f", " ", "T"}]}]]}]}], 
         RowBox[{"1", "-", "f"}]]}], "+", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}]], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "f"}], " ", 
           RowBox[{"(", 
            RowBox[{"b1", "+", "T"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"b1", " ", "f"}], "+", "T"}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]]}], ")"}]}], " ", 
            RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
            RowBox[{"HeavisideTheta", "[", 
             RowBox[{
              RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"HeavisideTheta", "[", 
             RowBox[{"-", "b1"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"f", " ", 
                   RowBox[{"(", 
                    RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"b1", "+", 
                   RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
               RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{
                 RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"-", "T"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"f", " ", 
                   RowBox[{"(", 
                    RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"b1", "+", 
                   RowBox[{"f", " ", "T"}]}]], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"b1", "+", 
                    RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
                  RowBox[{"HeavisideTheta", "[", 
                   RowBox[{
                    RowBox[{"-", "b1"}], "+", "T"}], "]"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}]}]}], ")"}]}]}], ",", 
   RowBox[{"T", "\[Element]", "Reals"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6404392227306147`*^9, 3.640439691800839*^9, {3.640439766689419*^9, 
   3.6404397786056433`*^9}, {3.640439808853301*^9, 3.640439831076838*^9}, 
   3.640440047236329*^9, 3.64044013217498*^9, 3.6404401803786507`*^9, 
   3.640440388089737*^9, 3.640442664796854*^9, 3.640448667074944*^9}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "b2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["a2", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "b2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}]}]], "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"b2", "-", "T"}], ")"}]}]]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "a2"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"b2", "-", "T"}], ")"}]}]]}], ")"}], " ", 
       RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{
         RowBox[{"-", "b2"}], "+", "T"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "a2"}]}], ")"}], " ", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"-", "b2"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "b2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "f"}], ")"}]}]]}], ")"}], " ", 
          RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{
            RowBox[{"-", "b2"}], "+", "T"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{"-", "T"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "b2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "f"}], ")"}]}]], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"b2", "-", "T"}], ")"}]}]]}], ")"}], " ", 
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{
               RowBox[{"-", "b2"}], "+", "T"}], "]"}]}]}], ")"}]}]}], 
        ")"}]}]}], ")"}]}], ",", 
   RowBox[{"T", "\[Element]", "Reals"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6404392227306147`*^9, 3.640439691800839*^9, {3.640439766689419*^9, 
   3.6404397786056433`*^9}, {3.640439808853301*^9, 3.640439831076838*^9}, 
   3.640440047236329*^9, 3.64044013217498*^9, 3.6404401803786507`*^9, 
   3.640440388089737*^9, 3.640442664796854*^9, 3.640448675077735*^9}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "f"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"a1", "-", 
          RowBox[{"a1", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"T", "-", 
             RowBox[{"f", " ", "T"}]}]]}]}], 
         RowBox[{"1", "-", "f"}]]}], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Hypergeometric2F1", "[", 
          RowBox[{"1", ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", "f"}], 
             RowBox[{"2", " ", "k"}]]}], ",", 
           FractionBox[
            RowBox[{"1", "-", "f", "+", 
             RowBox[{"2", " ", "k"}]}], 
            RowBox[{"2", " ", "k"}]], ",", 
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", "b1", " ", "k"}]]}]}], "]"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}]], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"T", "-", 
           RowBox[{"f", " ", "T"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"Hypergeometric2F1", "[", 
            RowBox[{"1", ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", "f"}], 
               RowBox[{"2", " ", "k"}]]}], ",", 
             FractionBox[
              RowBox[{"1", "-", "f", "+", 
               RowBox[{"2", " ", "k"}]}], 
              RowBox[{"2", " ", "k"}]], ",", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "k", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "b1"}], "+", "T"}], ")"}]}]]}]}], "]"}]}], 
          ")"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}]]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "b1", " ", "k"}]], "\[GreaterEqual]", 
     RowBox[{"-", "1"}]}], "&&", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "k", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "b1"}], "+", "T"}], ")"}]}]], "\[GreaterEqual]", 
     RowBox[{"-", "1"}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6404392227306147`*^9, 3.640439691800839*^9, {3.640439766689419*^9, 
   3.6404397786056433`*^9}, {3.640439808853301*^9, 3.640439831076838*^9}, 
   3.640440047236329*^9, 3.64044013217498*^9, 3.6404401803786507`*^9, 
   3.640440388089737*^9, 3.640442664796854*^9, 3.640448705191936*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.6404392227306147`*^9, 3.640439691800839*^9, {3.640439766689419*^9, 
   3.6404397786056433`*^9}, {3.640439808853301*^9, 3.640439831076838*^9}, 
   3.640440047236329*^9, 3.64044013217498*^9, 3.6404401803786507`*^9, 
   3.640440388089737*^9, 3.640442664796854*^9, 3.6404487752961197`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TwoAxisPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"EXHeavy", ",", "VarXHeavy"}], "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f", "\[Rule]", "0.95"}], ",", 
        RowBox[{"X0", "\[Rule]", "0"}], ",", 
        RowBox[{"a1", "\[Rule]", "0"}], ",", 
        RowBox[{"b1", "\[Rule]", "50"}], ",", 
        RowBox[{"a2", "\[Rule]", "0"}], ",", 
        RowBox[{"b2", "\[Rule]", "50"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "0", ",", "150"}], "}"}]}], "]"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Time\>\"", ",", "\"\<Expectation\>\"", ",", "\"\<\>\"", ",", 
      "\"\<Variance\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6404392582245207`*^9, 3.640439329511879*^9}, {
   3.640439635038745*^9, 3.6404396355205097`*^9}, {3.640439717605083*^9, 
   3.640439732071233*^9}, {3.640439839704679*^9, 3.640440002004251*^9}, {
   3.640440056084621*^9, 3.640440056172989*^9}, {3.640440196342503*^9, 
   3.640440269930141*^9}, {3.64044033243985*^9, 3.640440336003808*^9}, {
   3.640440399378749*^9, 3.640440415129579*^9}, {3.6404404533236647`*^9, 
   3.640440481874926*^9}, {3.640440540492999*^9, 3.640440540803371*^9}, {
   3.640440618255535*^9, 3.640440701617073*^9}, {3.6404407411757708`*^9, 
   3.640440985555708*^9}, {3.640441018478963*^9, 3.64044105665663*^9}, {
   3.640441102412554*^9, 3.640441172673229*^9}, {3.6404416291124353`*^9, 
   3.640441656147627*^9}, {3.64044169226064*^9, 3.640441750292639*^9}, 
   3.640445720080771*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
8Nak7Ngjpf8FK1DNPQ==
      "]]}}, GeometricTransformationBox[{{}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF13k4VN//AHCkSEVZylJoUZY2kjXOG2ULMTPMYIaZoVKKSKQiSiL7NjNX
CGlTWhRRtiIq1cdSQoRoEUWSLcvveJ7fV/ef+7yec55z3ud9zz3LarY3aa8A
Hx/fQ34+vtn3fYfJPz/yXhjy/f8zmmxQYxd7Df3P09dZnvKxD+cscP9oqWBs
zZwFi059GY15P+dzevwnf8V8nfOzkya7fsaMznlvmntuf4wQ/M+BugJT56Kk
52xZ/bCyVH/NnPsOnAh7IaE8559JJvbZBzf/c1HeIq6qxpyX95X4mbhun7O5
bKLzWJjOnL0viz4O99Ofc413bPbJy4ZzFql14ld6A3MuoNsdWWpiPOfxOIu1
d96bzFnnSEqint2uOYsNfdoV+N10zp6+Ejo7TpnPWfHs65HlZ/65Kel8wa/z
/wwFfzWuJf3z8rHuTeI3/7ki6MHaby3/7B/r9elpxz+rXVLOSv/8z5yKNHny
r3/eXe/Qvmn0n/k+LU0TnvrnwqGXTt0CFhC19+Gg34UlyHPeOZkyYQvYlzrP
Zp7NeqQoiZp5ohZAq7lQMpWkgZrWjXOOSloAsXZwsfWYLgLTw5IqihZQVT/w
I5y8Ey2PtBdL1rYAPk2SSfR+O/SKEHvjZWABedXiIkXqZBSa+yLawsQCjlXJ
J74ap6D+WgORGRsLUMtnXS8+S0NPRNfPP7jPAq4uDsn4GuyKDiWPTKAUC4iN
SgojX9iHnl7ifukbsoBPkVt/+tz3QdOFLN9d4xaQasPcXCbvi/TeqE1nzFiA
x6lDoWcifdG9yXIp0mJLkG+Yv9SfcRRlOn7bWaRkCeEm27zlZvxQsITu5TCa
JRgcUjr+S+U40jvf6rqqzBLuqHy01FgTjPwzcvr8qyzhsVsStywoGOUXeAXU
vbQEgZMd35uag5FKj0Dc2feWYNyxaTAv5jSSNlIr6x20hHPN7bcEAkPQyMTJ
lYVrd0NORZpuX0Mouue1qsUmcjdwj9r1drmEocy3zSt2xO2GLI7RYerZMBSv
l+ygkrIbKnJsGrOuhaEjCxa9nZe1G3pVA5cVDoShzRljb4qKdkOXqsCHrqBz
6Nbrxqo133ZDkMk+Yd/EcHR144W7I6ZW8Kypb3NVegTiJO4a6Laygh3dHlTN
0gh0boxvcz3JCt5lSpFOt0Ug96qAmzddrGAs6sbhq7KRaC1971WmvxUsAWk+
w5RIlBkFaS+vWIFPxuWph2cvoIvfR85nCFrDOHUiZsw0GolTnyaJLLKG3hMH
Pzu4R6OIyphL/susYX7j3rS40Gjkl7buoY28NZyNT+6NfxyNrGxIX6a1rWHp
6yDt5k0xaPJe3k5XT2v48+JAfPaiWEQPdOdXbLCGqG+R11h5cajh85Yl0c3W
QMQ+futeHYfMSX+lxz5aQ3+W1ohZRxzSVEvcWtdnDX8pQgyqcDxa3F7uGjLf
BhbpTTnx68ajEpAr69SxAdM/d/KOcuPRKuGGE1mXbGDTjaf8NIsEFMtHcAeu
2EDnD4r6a3ICmh5zfWBwywZkojR1t7skoI+9P360FNlAjP6YxEffBJRRu5Al
3mADvEN15ckXE5B8nJHZWcE9MGLYOHP5ewJSXH5PYu+BPbDm5vKowtOJKF70
+Nb73ntgF73Z5kpEIuITQtb8/ntARWtBU0RCIuocfRWefmYP0G/L7998ORFl
tXwbf3dxDwx/ypP78ywRrUlX7DR9sweWmx+vO7UwCYmLmzsky9jCiY3G8xoi
klDO9nWG51baws634pGDcUlIy5Fvvb+CLXgSlfcXcJOQU2bRH6qSLaR3DMvL
XklC2ZtVUuTUbaFtP5P+sSIJaewWeZttbgu7Hma86hlJQqSwV3b3AmzhlHfC
YlVGMuq5dl03+4QtMN8rUPe4JSP/2rDVSUG2UGcu5Xn4QDJKFTf45XfWFpZ0
CC9LPpaMPmXmxevE2cIhkXwUHZOMfEtj/yu/agsL+xcytpQko6QRW+s372zh
dLa5zXHJFOSxquDidLMt2J3hnteRTUGGO2W+b26zhQVlNd6/FFLQt4Su8LhP
tqCqNuVjrZaCdmzyrbAdsAVN0WB0xygFfXFL2tYobAfzXrZ8WX04BenVv5Np
1reDF8f9aXzlKUhsTNdDGNlBdNp34mtlCuqRzyjUMbaDga9WGc+fp6C4Q/vI
hLkdqBckiB1vwOVCo9FO9nZwPq/LO+ZzCooxlOZr97ID36PkzzwRDuq86fSl
K8sO6j4XEftsOUjshLZoW44dZJVJCttQOMjQXFKr6ZodSFDmNW6lcVB6z+tz
L/PsoNQqPfmbKwc5rTJSul9sB8U5Aa6rvTmoMXaDe1i9Hf7+1lUl0RxU7TPc
tZ6fBEUqKkLlVRz0B9UvXC1IAiNSnN7K5xy0TvS2upwQCQ7GVXodq+WgM7n7
Q8WWkOCzWVy/XAMHoe5WxTFpElzRNn+i28FBRZQnri+2kqAsrKSlZIyDbmrH
tnsySbB1oTUfnwoXNdd+W0J1I8F886Ho92pcJMg0MTTeRwJ2p8LLm5u5iB4x
liF9iASqeqf2Wmpy0eIWNvNZAAnIIyuimIiLvE5od8vHkSBktWPrbwoXqZd2
fqsvJYH2yEzff0Fc5GKnL1NaQYIZs2W3d4Zw0YXPKRbXK0mwfmFZUuEZLvq0
ZHdu8AsSPNiv9z7hPBcluhR4qr0jwaCE7MX1CVw0PBP5M6yfBCdUG/prL3PR
Q+Ntw9pyZFAJuXFdroaL1rdKRbHlybBLK1j4wAsu4viMrY5ZTYbKzPzT92u5
yC+zdM+nDWRYIdT7FNVxkca02c1oTTKsirYR0GrhotvFdHaXNRlip9aGpX3n
opyt4XUXQsiwR+7SlQOLeEjyucf+grNkGJegFjOX8NBZ193THeFkyCT729mL
8RA7dunG7TFk+PHCV05bgocU+lPPdxBkeJCLDrfL8lDqtTuGmvfJIA/W+Q9V
eChevuVW+2cyTI7nWj/cxUNODM1VDd/IUNyxXcbcjIfWpsXFVPeR4WDw6sXv
zXmoUMbU684vMtzIeH1kYDcPfZC8vyV0igx3aa99REg8tH5RTP46KQoIzqvZ
2MfgoZJRKPLcSQE9n4Ute/14KFwrTZlpRoFbqnRe+TEe2nNslEexpMAW0nj5
igAe+jSUF2hgSwHDN0l7KgN5SOinrL4YnQIqhpQcodM8ROoZLs0/SgHecZ1S
00ge+lp3vXI8mwKTiW5CN9N4aFg8OnXTVQqk+mfp/kznIT57bx/WDQq8DOx5
s+USD8m2bFd4cYcCfGKFqrezeMiq6+kJXgkFnvGndnKv8tDdX23q2k0UCKo8
M3/1XR46Lr4s02+hPQgXBtxb8ZSHwijD/tcX24PdswvL1Cp5KIHz3rpNzB5a
JkuXGVTxUK5sxl+T5fbguD5ynF7NQ21r1KgSa+3BXZ7MjX7JQ7Btl2j+Dnsg
eZ2LvNXAQwspgacGvO0h4ip/zUQXD4nTW50lj9pDM8d3TdcnHlrprq+v628P
4/Jf6NXdPLTVb2r8zCl7ILsG+cV85iGH5NAAfMaB9BM59qK9PJT9NtLXINse
vH62S7QN8NAO+1SPqLf2oCyRUXN3kodMGX/N7r63B4V9KZnHpnD+99I3vGu1
h28mxBndaTx/jsl/ke+yBz6HtH1lMzwUkZLtlv/DHo5sk6grESDQu3e5Li0L
HCDl5NSWGGECeTk8pmzQdQD34LplYRIEapifsmT5DgeoHsmdUpQk0PYCr2pB
5AAbz3aol2JPSqzR+bTTAYoT7vn/liLQhfoIuXRbB+h+axBJlSbQNSuHT+Ie
DtBSORAxvZJAnca/vKc5DjCpbxP4WolAO4deKv8gcP1FntOU9bh+Vk7XhzQH
EK7/0fMB24uPRi7OdgCz9yItXzfg/krLtPxuOwD51SOfMRUCSetGT/U+c4Br
3SMCU5sIZLdlQ9S7YQfYLx9xkLedQGNdEbnzxhyA1apiu0KLQBnJ31+o/3WA
jG3VySnY/eN5wrH8VPhvnoJhvDaBwqs0w01FqSCScnBDsC6BShyNQx9uoIKc
zDC/gQGBlMMYAYQTFTy4OUutdhLoP61yTg2DCvMqIm2KsP17FQv/MKlgfUZq
3rpdBKq06Rm220+FjzItDePYLjKeviJ+VHhP+65wyYxAybePHz4ZQwX5sB2C
9ZYEmmlOcmNUUKHxdvXBJlsC8W3zottXUmHBl3MZG+2wY8ztraup8NNG6dAZ
bAGjKVODV1Q4IvOtaSOJQII39qmuaqZCgyRn9BSZQCKBur/aBqggdPrCKxEH
AknJdATTFWiwruZ8Z4cTgZYfLQ6grKFBH1dnq6oz9uukI1ZKNLj7vWODH7Z0
qDl7hxoN6mrzlwrRCSTbe2/XSm0aNEXfb1RmEEixOGxxmw0NfHu7A+iuBFJz
VE11DqbBtPbgl3A3nK/AMxd3htLAP2PHg2fY64nWtE1hNMhw5+kIuhNoTcuF
SzORNNCKrNsfgi3t2JdzOYUGtiu8DxzbS6AFjrfu9N2iweDV80ak/QT6RNv8
7OQHGpQ/GPdtOYjn0/HwavePNBjYrVAu5kmgj7yPNdZdNHjSrvlqF3ZLc+xL
ha80CEymqN7DrqMN/Fc5RINxRJkOO0SgMtrd1kUijnDYON9ktReBCJrG4EUd
R7jMr7F+sw+BWk+K06r0HUFzr44kC1v20lB5v6EjLEwSf5qEnfY5P85glyMo
U8+5jGFn+m7b0mHnCLG8tZfLfAl0PVrTa42nI7jB8CXkR6DCCq3+6+mO4MlJ
CZQKINBo93JKfaYj/P1kPQrYOkKjj8cvO0Kyj67hIexH1g+jLHMdQXhrmfJT
7NJWbbX+QkdIQSMBnscJVDWsc3BLnSPkHn2h+yCQQI3K+t8KBJzAz9RGTPEU
/n9+J6lcn+8EckTAQ2Ns4bL+g6nCTtD5uVNrL7YhOeNHsKgTSH/UKLmBnRvE
/9tM1gmKpQS/bA0iUGhDzVSLuhN8ub+uQzuYQFtOUSSmmU7gr3Q5WyWEQC9N
8yiDbk5QuyM0ygzbfdkCzqd9TmC2U9NuL3bq1YfSNYecYNKp7Ggm9oJ6Wfn4
407AS2yTkQolULtSl/KaeCeIXui3ZAw76r/DhqblTnAVrcu+cpZAB9NtvgQ8
dYICAtKeYJt7bom98cwJ0sMLfNuxBYV+tS9+5QRul1wKJMMIdMrQL6ix2Qny
2rmcUOxDeSdKmENOICFgMEA5RyDrqPN6J5WcQTOhbE13OIE2Onp8uqXsDMlv
Hv+dwBbZYHHho5ozbGygFIqfJ1D1U5FWIw1n2PV1uM4I23AiJlAYOUPcjVWZ
GdibDyQXpdCcYdnIn2pSBIHEzLK07kY5w8RCc82rkTjekomHN2Od4UYwbWsx
dog6RfdagjOcCa6TeoU9KCe0I4PrDNREdvov7LrBQ0bRl53BZPtYlv4FAsWn
6lh5PHaGjJJabi320p//sRT7nKFb4/OXD1G4fTeVbrmfzqBqk2vUjx3SfMZ9
xS9nyNszFjGJPfh0+37RUWcoTolqXxmN2+dePDQpQIcDK5dl0bHjjfYHNMvS
wazB5koz9tKU6eh4SzqoM77qVcYQaFfdu+VB1nR4tnHVonrsE4vyMg/Y0iH+
tGbtR+yeUOcHxg50MGkiyU1gF3kVfRhm0WFJEnVqSyyBWOa+qo6BdNgxEdbM
w87/+7lm9XU6hH812u8aR6CvWqV2ojfp8HJrsIMn9krf5A8TeXQQgdfaAdjh
34wHGu/TYc2lnrpYbOd3l5aHl9NBpfKRSym24B3Hvd+b6MAsaB1ZEU8ge/Zr
gfvzGfBdv+dsJfabzI2/PwozwLOcl/8G27QjqltkMQNk/dc3tmBr0S2r2OIM
IC2U+j6AvcKh5py4AgPO5m32kUvA64fFE2FfHQbcMb/w2xuboV4gqu7JgAkr
NUOxRAI1eUvO0L0YsMZy2QtpbJvbRwcifBhgVtFttgbbUE2jrjOAAd5KUau3
Yyso3UmID2NAP1+UqRN2l/QNycF0BvCDpXs29l6+dNk7dQwIZLWRVJPwevDF
ryenkQF0gzf96tgir6xupzbh8dg/C9LFvs2dNApvY8DLiz/CzLFHNtMPML4x
oNHXSmUfdgRDrmgRnwtEhlg2XsK+9Yiw99jiAk4PRIcWJxMoONNHwUXDBWpT
LUMksG3DLXrJ213AdKpmgSz2H7vxU0jfBZ+fbk6uxzbspeUsN3OBwXeSMYD9
3wrp31UuLrCVrGXuiz3kx4lfHesC1LZutzpsYZeRCocEF3h/QjisCXuVmcOv
qGQXcF7okNaGbS6znDSS6gLvFicXfMPOKE2RqL3mAs9O34viSyGQxYIUjt8T
F+h2HX2zGTuTm5RWM+wCKVsdf5/DLgz5/Wpy1AWE2leqRWHXHiBPqf91gZ2f
Nejx2CP6Ei5p/K5wd/Px3FTs3Z2JCj6irqBuRRm7PVuunJgtq+wK+WXJzCZs
60fx1w87u8LnNKWLihwCMQ94dSW5uMK9heZj67B9pa1kH7FcQSbn5x4VbI6/
UPQCD1eY19v9Ux27UyPY+5KfK4yFb+o3xva76alVH+MKJU0rvrthp6aZVmlW
uMLLZi/FbOxbu9dNOVW6gsC3N61XsMsn+LVCq13h3c3T8Tewe2il116/cgVK
0/cfd7E3S2lG7WtxBY2SCz7l2E9iVpN4Q64wovEr88Nsf2h6IEicCZMD36uX
cvF6flBl/I8EE2S2ppVLYHemUAS8pJgQz6l/sBzbuj9X0kWaCZrKLckrubP7
M1XXUJ4JoXGv1JSx3w/dPTOtwoTIqLIiQ2y9q25Sp42YYOh598AB7CP1sfKj
xkwYSvKf8MS+Olm8wXsnE0aK9CK8sCXIS/VczZiwUKw29Sh2/0yJC7LG8Vw5
nBaEneG4/PoMjQns6UeSCdj8S17ohRxhAiP65mABdrOuzugKXyZMLPKgFmHf
3Xft/p2jTLiyfcXjR9jMinMbO/yZELKAEViOXXHUWN4wiAnPhYbqn2MHtz7m
n4zE9ceiR1qxJ67dfh5wmQlLoX/9FHbD21XnxK4w4UC/0raZ2Xzxxxhdu8qE
bdbPdvDzCOTo7Pmo6QYTtrgZm8/HLhJVvrX9LhOuBSbAEuyAY1lxv0uYEJBA
Kl6JPWyc7ODdxASpBuEuXezAyvKZvvdMYPkfO6OPPW3Sd92jBY/n/tBqA2yh
XcZ/WW1MKNyANyFsWbPBS5RPuP+UskJTbNht1av7kwn1H2MkydgxZMFTggtY
MHSqLvAgtvjbLUqhQizoosZ3eWJzKM5vpoRZIIKumB3GzrTPVxxdxAJZ2SbR
I9gPqMxnvctYsKftQuQx7FbnEtH/VrHA79mAegj2ene/LGI7C/zNbjonY9+o
+fhGVJsFIYlZUSnYG9UsJs/qsOCohtYjDva2oVVUL30W0NpBgpiNN6RmsYkR
C956ChekYzunyR7vt2LBTG1Z0VXs+LcVNsidBZ2/GLUPsSV01E492MsCfnGZ
hqLZ+C+m3FDZzwKXkOz3xdjp7IOCkgdZcP6tUsdj7NxBiUffvFlwuF2ysxy7
avF+pcSTLOi1qMytwR7fuWSyJ5EFUW7nDzVhy+c+bgtMZsEORjv7Pbax2MFS
UQ4LFL0nqc3Y0S3VwToEC75OXDRsxVb0CuGPvsSC0nVRU+3Y5tzfC7bdYkGB
dIDJ59n4eluWhT5jgevjuPEh7Mc2EUNSNSwIa2ir/Y3deV+rMfc5C0pOKaYP
Y6sGJyW/rWXBg6r4HSPYpeLWK5QbWLDKVdd7HLtHv2Llfx9ZEEGqyZnB1oi9
umHVGAtyfDwcFxF4fzNb9oczzoLTvFG+xdhNMyefLv3Lgnzmk2uzPuFjxxCc
ZoHOMeHfS7CfUCYT++ax4UlrUMhSbFs50nSxGBuEA2sDpLC9rk+9ddjAhqSo
vnZ5bGB5ZNcps/F9LMhLAVtcttHbUpUN27Ldp2ddGHVdxHATG9be0165GnvK
iwxK29iQFi9ouxY7evuNm78N2UAs7eFtwM59SjkT78CGyCddD7Zg5z9RBy0a
G57dloKt2MUVotMfHNlwNyPx5ayflz0P3MBgg4KZZ7s69udHO3zK3NhQX3Jv
Yhu24v11zP4jbDAmu0rqYHMuDxuYR7EhxJf5EmFnZNf//RHNhgP53gDYV7Ju
FyfFskGyortg1g8ueWzvSGDDIr+pDCPs+ottG/15bOi1WnLQBHtxcpVczhU2
OLbu7jHFlkzKarG4xgYmbb6dGbZcYjB34DobGnq3lM5aNV5HQv8Wjnf7hyRz
bPPoWyIN+Th/pRl6lrP5jop8HvCADQmb/mTPmnphX/iqQjb0+D0V2Y29L0JR
4EAxGzKcqppnffj8VLnoYza0u0wYWmH7hbcGPShhg8eC3JxZnzr3UN+pjA0z
/G8XWmOfDUsenylnw2r+QK9Z/x/ag0Fn
       "]]}}, {{{1., 0.}, {0., 
     39.73228592232603}}, {0., 0.}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"Time\"", TraditionalForm], 
    FormBox["\"Expectation\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm], 
    FormBox["\"Variance\"", TraditionalForm]},
  FrameStyle->{{
     RGBColor[0.368417, 0.506779, 0.709798], 
     RGBColor[0.880722, 0.611041, 0.142051]}, {Automatic, Automatic}},
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm]}, {0.2, 
       FormBox["0.2`", TraditionalForm]}, {0.4, 
       FormBox["0.4`", TraditionalForm]}, {0.6, 
       FormBox["0.6`", TraditionalForm]}, {0.8, 
       FormBox["0.8`", TraditionalForm]}, {1., 
       FormBox["1.`", TraditionalForm]}}, {{0., 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"0.\\\\\\\"\\\", 0.`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], 2]]]\\)\"", 
        TraditionalForm]}, {0.2, 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"0.005\\\\\\\"\\\", \
0.005033689740152043`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
2]]]\\)\"", TraditionalForm]}, {0.4, 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"0.01\\\\\\\"\\\", \
0.010067379480304086`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
2]]]\\)\"", TraditionalForm]}, {0.6, 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"0.015\\\\\\\"\\\", \
0.015101069220456127`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
2]]]\\)\"", TraditionalForm]}, {0.8, 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"0.02\\\\\\\"\\\", \
0.020134758960608172`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
2]]]\\)\"", TraditionalForm]}, {1., 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"0.025\\\\\\\"\\\", \
0.025168448700760213`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
2]]]\\)\"", TraditionalForm]}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{550.03125, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 150}, {0., 0.9932620519695907}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.640440826590241*^9, {3.64044087461204*^9, 3.640440986081884*^9}, {
   3.6404410230500507`*^9, 3.640441057230773*^9}, {3.640441102748703*^9, 
   3.640441173482963*^9}, {3.6404416326312428`*^9, 3.6404416567250423`*^9}, {
   3.6404416933532953`*^9, 3.6404417511406727`*^9}, 3.640445720614482*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "f"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"a1", "-", 
          RowBox[{"a1", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"T", "-", 
             RowBox[{"f", " ", "T"}]}]]}]}], 
         RowBox[{"1", "-", "f"}]]}], "+", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}]], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "f"}], " ", 
          RowBox[{"(", 
           RowBox[{"b1", "+", "T"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"b1", " ", "f"}], "+", "T"}]], "-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"b1", "+", 
                RowBox[{"f", " ", "T"}]}]]}], ")"}]}], " ", 
           RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
           RowBox[{"HeavisideTheta", "[", 
            RowBox[{
             RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"HeavisideTheta", "[", 
            RowBox[{"-", "b1"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"f", " ", 
                  RowBox[{"(", 
                   RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"b1", "+", 
                  RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
              RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
              RowBox[{"HeavisideTheta", "[", 
               RowBox[{
                RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"HeavisideTheta", "[", 
               RowBox[{"-", "T"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"f", " ", 
                  RowBox[{"(", 
                   RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"b1", "+", 
                  RowBox[{"f", " ", "T"}]}]], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"b1", "+", 
                    RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
                 RowBox[{"HeavisideTheta", "[", 
                  RowBox[{
                   RowBox[{"-", "b1"}], "+", "T"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", "T"}], "]"}]], "Input",
 CellChangeTimes->{{3.640448745248166*^9, 3.6404487510346193`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "X0"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "f"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"a1", "-", 
        RowBox[{"a1", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"T", "-", 
           RowBox[{"f", " ", "T"}]}]]}]}], 
       RowBox[{"1", "-", "f"}]]}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}]], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "f"}], " ", 
         RowBox[{"(", 
          RowBox[{"b1", "+", "T"}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"b1", "+", 
              RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
          RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{
            RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{"-", "b1"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"f", " ", 
                 RowBox[{"(", 
                  RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
             RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{
               RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{"-", "T"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"f", " ", 
                 RowBox[{"(", 
                  RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"b1", "+", 
                    RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
                RowBox[{"HeavisideTheta", "[", 
                 RowBox[{
                  RowBox[{"-", "b1"}], "+", "T"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "f"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a1", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"T", "-", 
        RowBox[{"f", " ", "T"}]}]]}], "-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}]], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "f"}], " ", 
         RowBox[{"(", 
          RowBox[{"b1", "+", "T"}], ")"}]}]], " ", "f", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"b1", "+", 
              RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
          RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{
            RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{"-", "b1"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"f", " ", 
                 RowBox[{"(", 
                  RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
             RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{
               RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{"-", "T"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"f", " ", 
                 RowBox[{"(", 
                  RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"b1", "+", 
                    RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
                RowBox[{"HeavisideTheta", "[", 
                 RowBox[{
                  RowBox[{"-", "b1"}], "+", "T"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}]}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}]], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "f"}], " ", 
         RowBox[{"(", 
          RowBox[{"b1", "+", "T"}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"b1", "+", 
              RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
          RowBox[{"DiracDelta", "[", 
           RowBox[{
            RowBox[{"-", "b1"}], "+", "T"}], "]"}], " ", 
          RowBox[{"HeavisideTheta", "[", "T", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"b1", "+", 
              RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
          RowBox[{"DiracDelta", "[", "T", "]"}], " ", 
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{
            RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"b1", "+", 
               RowBox[{"f", " ", "T"}]}]], " ", "f"}]}], ")"}], " ", 
          RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{
            RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{"-", "b1"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"f", " ", 
                 RowBox[{"(", 
                  RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "b1"}], "+", "T"}], "]"}], " ", 
             RowBox[{"HeavisideTheta", "[", "T", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"f", " ", 
                 RowBox[{"(", 
                  RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
             RowBox[{"DiracDelta", "[", "T", "]"}], " ", 
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{
               RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"f", " ", 
                  RowBox[{"(", 
                   RowBox[{"b1", "+", "T"}], ")"}]}]], " ", "f"}], "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"b1", "+", 
                  RowBox[{"f", " ", "T"}]}]], " ", "f"}]}], ")"}], " ", 
             RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{
               RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"DiracDelta", "[", "T", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"f", " ", 
                 RowBox[{"(", 
                  RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"b1", "+", 
                    RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
                RowBox[{"HeavisideTheta", "[", 
                 RowBox[{
                  RowBox[{"-", "b1"}], "+", "T"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{"-", "T"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"f", " ", 
                  RowBox[{"(", 
                   RowBox[{"b1", "+", "T"}], ")"}]}]], " ", "f"}], "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"b1", "+", 
                  RowBox[{"f", " ", "T"}]}]], " ", "f"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"b1", "+", 
                    RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
                RowBox[{"DiracDelta", "[", 
                 RowBox[{
                  RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"b1", "+", 
                    RowBox[{"f", " ", "T"}]}]], " ", "f"}]}], ")"}], " ", 
                RowBox[{"HeavisideTheta", "[", 
                 RowBox[{
                  RowBox[{"-", "b1"}], "+", "T"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.64044877945693*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"%218", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"X0", "\[Rule]", "0"}], ",", 
      RowBox[{"a1", "\[Rule]", "0"}], ",", 
      RowBox[{"b1", "\[Rule]", "50"}], ",", 
      RowBox[{"f", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "0", ",", "150"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6404426065106287`*^9, 3.640442621756166*^9}, {
  3.640442710716194*^9, 3.640442724676084*^9}, {3.640448789650072*^9, 
  3.640448808277216*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
luqazPQU/c6fgQbpHOa+k/TQQe3vr+4y+8fpVq9viITWMOeP0ZXrZoDmM2b9
CJ2jcO+hoQ6mv9E7k8oikvuY9UP0/AtCJTtHmPkgPcDL7S3tNzP/TN9j95zt
7vz9VN5PV7c2qLcTZLqPvtS8IURwBdO99OldutvrFJl+R+/Sf8jlrsl0Nz0J
3A9vNWG6g75/QynfBmem2+grVhVejg5muoX+cVmu8Oh1phvp+yy45i9PY/oJ
vS3+8OT2TJbrBOU6buQx/ZSewZNxdVc50/X05YZsF/zuMV1Hjwuz9cmuZuXB
nFJ7/z5iupY+o3tWX7GBVe957v0mi6es84YfAoVzz1n1h2jXxQpbmC6ia372
/JT5irU/d7PR7cQOpqvot6/ObAntYfnnOuuj+wdZ/Rf2i1csoh2gnEPPv5ew
58j6A//ycc8r0dJRTNNoO+5F5xy3OvjPnmju+2lBm3+ex9ukFeDG8oR2nLlr
B8tyDp5pCWq2//xLl3fmUwzLKlFZqyWmWc6rMwuKNrf75zsPN2DqlixX1vLN
vd3LcuODRt/V+1keuEc/8cCeZam7K22G3Vi+kjEB9MJZTklv/fMtguWbabcr
Y6NYLrlxRO3DZZZbk3qUTl5jmSeuXjzzJsvCsWld+tksi8ecufo9h2WFaE2h
zfks60Xkc7fdYdk4PKzRu4Rli4uOoRJlLDtekGI7Wsny8fOzNXz3WfYM7T5d
UsWyf0j55n0PWD4XHPfrbw3L/wPLWY7N
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.640442625417368*^9, 3.6404426800841217`*^9, 3.6404427256956863`*^9, {
   3.6404487946088867`*^9, 3.640448809574274*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"EXHeavy", ",", "T"}], "]"}], "\[Equal]", "0"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"X0", "\[Rule]", "0"}], ",", 
      RowBox[{"a1", "\[Rule]", "0"}], ",", 
      RowBox[{"b1", "\[Rule]", "50"}], ",", 
      RowBox[{"f", "\[Rule]", "0.5"}]}], "}"}]}], ",", "T"}], "]"}]], "Input",\

 CellChangeTimes->{{3.640442217485169*^9, 3.640442268539816*^9}, {
  3.6404423083666553`*^9, 3.640442352369866*^9}, {3.640442402736375*^9, 
  3.640442410913722*^9}}],

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"ConditionalExpression", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.25`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.5`"}], " ", "T"}]], " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"2.`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "0.5`"}], " ", 
             RowBox[{"(", 
              RowBox[{"50", "+", "T"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"50", "+", 
                RowBox[{"0.5`", " ", "T"}]}]]}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"25.`", "\[VeryThinSpace]", "+", "T"}]]}], ")"}], " ", 
           RowBox[{"HeavisideTheta", "[", 
            RowBox[{
             RowBox[{"-", "50"}], "+", "T"}], "]"}], " ", 
           RowBox[{"HeavisideTheta", "[", "T", "]"}]}]}], ")"}]}], "+", 
       RowBox[{"0.5`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.5`"}], " ", "T"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1.`"}], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "0.5`"}], " ", 
             RowBox[{"(", 
              RowBox[{"50", "+", "T"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"50", "+", 
                RowBox[{"0.5`", " ", "T"}]}]]}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"25.`", "\[VeryThinSpace]", "+", "T"}]]}], ")"}], " ", 
           RowBox[{"HeavisideTheta", "[", 
            RowBox[{
             RowBox[{"-", "50"}], "+", "T"}], "]"}], " ", 
           RowBox[{"HeavisideTheta", "[", "T", "]"}]}], "-", 
          RowBox[{"2.`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "0.5`"}], " ", 
             RowBox[{"(", 
              RowBox[{"50", "+", "T"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"50", "+", 
                    RowBox[{"0.5`", " ", "T"}]}]]}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"25.`", "\[VeryThinSpace]", "+", "T"}]]}], ")"}]}], 
              " ", 
              RowBox[{"DiracDelta", "[", "T", "]"}], " ", 
              RowBox[{"HeavisideTheta", "[", 
               RowBox[{
                RowBox[{"-", "50"}], "+", "T"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"50", "+", 
                   RowBox[{"0.5`", " ", "T"}]}]]}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"25.`", "\[VeryThinSpace]", "+", "T"}]]}], ")"}], 
              " ", 
              RowBox[{"DiracDelta", "[", 
               RowBox[{
                RowBox[{"-", "50"}], "+", "T"}], "]"}], " ", 
              RowBox[{"HeavisideTheta", "[", "T", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "0.5`"}], " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"50", "+", 
                   RowBox[{"0.5`", " ", "T"}]}]]}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"25.`", "\[VeryThinSpace]", "+", "T"}]]}], ")"}], 
              " ", 
              RowBox[{"HeavisideTheta", "[", 
               RowBox[{
                RowBox[{"-", "50"}], "+", "T"}], "]"}], " ", 
              RowBox[{"HeavisideTheta", "[", "T", "]"}]}]}], ")"}]}]}], 
         ")"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{"T", "\[Element]", "Reals"}]}], "]"}], ",", "T"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.64044223174127*^9, 3.6404422696907463`*^9}, {
  3.64044238654725*^9, 3.640442411843273*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EXSin", " ", "=", " ", 
  RowBox[{"EXsol", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a1", "+", 
       RowBox[{"b1", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]1", "*", "t"}], "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a2", "+", 
       RowBox[{"b2", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]2", "*", "t"}], "]"}]}]}]}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"VarXSin", "=", 
  RowBox[{"VarX", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a1", "+", 
       RowBox[{"b1", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]1", "*", "t"}], "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a2", "+", 
       RowBox[{"b2", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]2", "*", "t"}], "]"}]}]}]}]}], 
    "}"}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.640366106831115*^9, 3.640366224711183*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "f"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"a1", "-", 
        RowBox[{"a1", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"T", "-", 
           RowBox[{"f", " ", "T"}]}]]}]}], 
       RowBox[{"1", "-", "f"}]]}], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "f"}], " ", "T"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"b1", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"f", " ", "T"}]], " ", "\[Omega]1"}], "-", 
         RowBox[{"b1", " ", 
          SuperscriptBox["\[ExponentialE]", "T"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Omega]1", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"T", " ", "\[Omega]1"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"T", " ", "\[Omega]1"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
      
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
       SuperscriptBox["\[Omega]1", "2"]}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.640366230036812*^9, 3.640438055361491*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["a2", "2"]}], "+", 
      SuperscriptBox["b2", "2"]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["b2", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}]}], 
     RowBox[{"1", "-", 
      RowBox[{"2", " ", "f"}], "+", 
      SuperscriptBox["f", "2"], "+", 
      SuperscriptBox["\[Omega]2", "2"]}]], "+", 
    FractionBox[
     RowBox[{"8", " ", "a2", " ", "b2", " ", "\[Omega]2"}], 
     RowBox[{"4", "-", 
      RowBox[{"8", " ", "f"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["f", "2"]}], "+", 
      SuperscriptBox["\[Omega]2", "2"]}]], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["a2", "2"]}], "+", 
         SuperscriptBox["b2", "2"]}], 
        RowBox[{"1", "-", "f"}]], "-", 
       FractionBox[
        RowBox[{"8", " ", "a2", " ", "b2", " ", "\[Omega]2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], 
        RowBox[{"4", "-", 
         RowBox[{"8", " ", "f"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["f", "2"]}], "+", 
         SuperscriptBox["\[Omega]2", "2"]}]], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["b2", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "T", " ", "\[Omega]2"}], "]"}]}], 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "f"}], "+", 
         SuperscriptBox["f", "2"], "+", 
         SuperscriptBox["\[Omega]2", "2"]}]], "-", 
       FractionBox[
        RowBox[{"16", " ", "a2", " ", "b2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], 
        RowBox[{"4", "-", 
         RowBox[{"8", " ", "f"}], "+", 
         RowBox[{"4", " ", 
          SuperscriptBox["f", "2"]}], "+", 
         SuperscriptBox["\[Omega]2", "2"]}]], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["b2", "2"], " ", "\[Omega]2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "T", " ", "\[Omega]2"}], "]"}]}], 
        RowBox[{"1", "-", 
         RowBox[{"2", " ", "f"}], "+", 
         SuperscriptBox["f", "2"], "+", 
         SuperscriptBox["\[Omega]2", "2"]}]]}], ")"}]}]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.640366230036812*^9, 3.6404380600242977`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", "EXSin", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", "VarXSin", "]"}]}], "Input",
 CellChangeTimes->{{3.640366239574079*^9, 3.640366253476851*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  RowBox[{"(", 
   RowBox[{"X0", "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "f"}], " ", "T"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "b1"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"f", " ", "T"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "\[Omega]1"}], "+", 
        RowBox[{"a1", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "T"], "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"f", " ", "T"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
           SuperscriptBox["\[Omega]1", "2"]}], ")"}]}], "+", 
        RowBox[{"b1", " ", 
         SuperscriptBox["\[ExponentialE]", "T"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Omega]1", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"T", " ", "\[Omega]1"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"T", " ", "\[Omega]1"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
      SuperscriptBox["\[Omega]1", "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.640366259137096*^9, 3.640438065352482*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["a2", "2"]}], "+", 
      SuperscriptBox["b2", "2"]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["b2", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
      SuperscriptBox["\[Omega]2", "2"]}]], "+", 
    FractionBox[
     RowBox[{"8", " ", "a2", " ", "b2", " ", "\[Omega]2"}], 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"]}], "+", 
      SuperscriptBox["\[Omega]2", "2"]}]], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["a2", "2"]}], "+", 
         SuperscriptBox["b2", "2"]}], 
        RowBox[{"1", "-", "f"}]], "-", 
       FractionBox[
        RowBox[{"8", " ", "a2", " ", "b2", " ", "\[Omega]2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"]}], "+", 
         SuperscriptBox["\[Omega]2", "2"]}]], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["b2", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "T", " ", "\[Omega]2"}], "]"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
         SuperscriptBox["\[Omega]2", "2"]}]], "-", 
       FractionBox[
        RowBox[{"16", " ", "a2", " ", "b2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"]}], "+", 
         SuperscriptBox["\[Omega]2", "2"]}]], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["b2", "2"], " ", "\[Omega]2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "T", " ", "\[Omega]2"}], "]"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
         SuperscriptBox["\[Omega]2", "2"]}]]}], ")"}]}]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.640366259137096*^9, 3.640438100142296*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EXSinStationary", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"a1", "+", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{
       RowBox[{"-", "b1"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "f"}], ")"}], " ", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Omega]1", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"T", " ", "\[Omega]1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"T", " ", "\[Omega]1"}], "]"}]}]}], ")"}]}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
      SuperscriptBox["\[Omega]1", "2"]}]]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"VarXSinStationary", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["a2", "2"]}], "+", 
        SuperscriptBox["b2", "2"]}], 
       RowBox[{"1", "-", "f"}]], "-", 
      FractionBox[
       RowBox[{"8", " ", "a2", " ", "b2", " ", "\[Omega]2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"]}], "+", 
        SuperscriptBox["\[Omega]2", "2"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["b2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "T", " ", "\[Omega]2"}], "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
        SuperscriptBox["\[Omega]2", "2"]}]], "-", 
      FractionBox[
       RowBox[{"16", " ", "a2", " ", "b2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"]}], "+", 
        SuperscriptBox["\[Omega]2", "2"]}]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["b2", "2"], " ", "\[Omega]2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "T", " ", "\[Omega]2"}], "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
        SuperscriptBox["\[Omega]2", "2"]}]]}], ")"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.640437857830289*^9, 3.6404379425399027`*^9}, {
  3.640438914791563*^9, 3.640438925217229*^9}, {3.646160449083912*^9, 
  3.646160469811837*^9}}],

Cell[BoxData[
 RowBox[{"a1", "+", 
  FractionBox[
   RowBox[{"b1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Omega]1", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"T", " ", "\[Omega]1"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"T", " ", "\[Omega]1"}], "]"}]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
    SuperscriptBox["\[Omega]1", "2"]}]]}]], "Output",
 CellChangeTimes->{3.640437943323193*^9, 3.6404381207932463`*^9, 
  3.6404389265781717`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["a2", "2"]}], "+", 
      SuperscriptBox["b2", "2"]}], 
     RowBox[{"1", "-", "f"}]], "-", 
    FractionBox[
     RowBox[{"8", " ", "a2", " ", "b2", " ", "\[Omega]2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"]}], "+", 
      SuperscriptBox["\[Omega]2", "2"]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["b2", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "T", " ", "\[Omega]2"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
      SuperscriptBox["\[Omega]2", "2"]}]], "-", 
    FractionBox[
     RowBox[{"16", " ", "a2", " ", "b2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"]}], "+", 
      SuperscriptBox["\[Omega]2", "2"]}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["b2", "2"], " ", "\[Omega]2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "T", " ", "\[Omega]2"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
      SuperscriptBox["\[Omega]2", "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.640437943323193*^9, 3.6404381207932463`*^9, 
  3.6404389303376427`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"EXSin", ",", "EXSinStationary", ",", "\[IndentingNewLine]", 
        RowBox[{"a1", "+", 
         RowBox[{"b1", "*", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Omega]1", "*", "T"}], "]"}]}]}]}], "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a1", "\[Rule]", "1"}], ",", 
        RowBox[{"b1", "\[Rule]", "0.5"}], ",", 
        RowBox[{"X0", "\[Rule]", 
         RowBox[{"-", "10"}]}], ",", 
        RowBox[{"f", "\[Rule]", "F"}], ",", 
        RowBox[{"\[Omega]1", "\[Rule]", "Omega1"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "5500", ",", "5550"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "3"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"F", ",", "0", ",", "0.99"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Omega1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6403663611281223`*^9, 3.640366575675044*^9}, {
   3.640366624920252*^9, 3.640366632861176*^9}, {3.6403666753635693`*^9, 
   3.640366677716364*^9}, 3.640366788522066*^9, {3.640372558679709*^9, 
   3.640372589886297*^9}, {3.6403726386920757`*^9, 3.6403726392181463`*^9}, {
   3.640437997318633*^9, 3.640437998836937*^9}, {3.640438129308407*^9, 
   3.640438179247428*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`F$$ = 0.632, $CellContext`Omega1$$ = 
    3.6945129606215965`, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`F$$], 0, 0.99}, {
      Hold[$CellContext`Omega1$$], 0, 2 Pi}}, Typeset`size$$ = {
    360., {115., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`F$104060$$ = 
    0, $CellContext`Omega1$104061$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`F$$ = 0, $CellContext`Omega1$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`F$$, $CellContext`F$104060$$, 0], 
        Hold[$CellContext`Omega1$$, $CellContext`Omega1$104061$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        ReplaceAll[{$CellContext`EXSin, $CellContext`EXSinStationary, \
$CellContext`a1 + $CellContext`b1 
           Sin[$CellContext`\[Omega]1 $CellContext`T]}, {$CellContext`a1 -> 
          1, $CellContext`b1 -> 
          0.5, $CellContext`X0 -> -10, $CellContext`f -> $CellContext`F$$, \
$CellContext`\[Omega]1 -> $CellContext`Omega1$$}], {$CellContext`T, 5500, 
         5550}, PlotRange -> {-1, 3}], 
      "Specifications" :> {{$CellContext`F$$, 0, 
         0.99}, {$CellContext`Omega1$$, 0, 2 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {173., 178.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.640366415768352*^9, 3.6403664328768883`*^9}, 
   3.640366463427246*^9, {3.640366501059119*^9, 3.640366576161467*^9}, 
   3.640366636918421*^9, 3.640366678188723*^9, {3.6403667890239067`*^9, 
   3.64036679238546*^9}, 3.640372559105184*^9, 3.640372590360084*^9, 
   3.640372639592436*^9, {3.640438136496874*^9, 3.640438179613957*^9}, 
   3.640438935497764*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "EXSin", "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a1", "\[Rule]", "1"}], ",", 
        RowBox[{"b1", "\[Rule]", "1"}], ",", 
        RowBox[{"X0", "\[Rule]", 
         RowBox[{"-", "10"}]}], ",", 
        RowBox[{"f", "\[Rule]", "F"}], ",", 
        RowBox[{"\[Omega]1", "\[Rule]", "Omega1"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "90", ",", "100"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "3"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"F", ",", "0.0001", ",", "0.99"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Omega1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.640366708786172*^9, 3.640366709921515*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`F$$ = 0.44, $CellContext`Omega1$$ = 
    4.09663682028109, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`F$$], 0.0001, 0.99}, {
      Hold[$CellContext`Omega1$$], 0, 2 Pi}}, Typeset`size$$ = {
    360., {115., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`F$2219175$$ = 
    0, $CellContext`Omega1$2219176$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`F$$ = 0.0001, $CellContext`Omega1$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`F$$, $CellContext`F$2219175$$, 0], 
        Hold[$CellContext`Omega1$$, $CellContext`Omega1$2219176$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        ReplaceAll[{$CellContext`EXSin}, {$CellContext`a1 -> 
          1, $CellContext`b1 -> 
          1, $CellContext`X0 -> -10, $CellContext`f -> $CellContext`F$$, \
$CellContext`\[Omega]1 -> $CellContext`Omega1$$}], {$CellContext`T, 90, 100}, 
        PlotRange -> {-1, 3}], 
      "Specifications" :> {{$CellContext`F$$, 0.0001, 
         0.99}, {$CellContext`Omega1$$, 0, 2 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {173., 178.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.640366710393865*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "b1"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", "f"}], ")"}], "*", "w1"}], ")"}], "^", "2"}]], "Input",\

 CellChangeTimes->{{3.640529925907968*^9, 3.640529935210972*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["b1", "2"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", "f"}], ")"}], "2"], " ", 
  SuperscriptBox["w1", "2"]}]], "Output",
 CellChangeTimes->{3.640529935628449*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{"b1", "^", "2"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "f"}], ")"}], "2"], " ", 
       SuperscriptBox["w1", "2"]}]}], ")"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.640529977176545*^9, 3.640530026722138*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox["b1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
      SuperscriptBox["w1", "2"]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.640530011290501*^9, 3.640530030489539*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox["b1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
        SuperscriptBox["w1", "2"]}]}], ")"}]}]], 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"f", "-", "1"}], ")"}], "^", "2"}], "+", 
    RowBox[{"w1", "^", "2"}]}]], "]"}]], "Input",
 CellChangeTimes->{{3.640530255712913*^9, 3.640530274827202*^9}}],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{
    SuperscriptBox["b1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
       SuperscriptBox["w1", "2"]}]}], ")"}]}]], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
   SuperscriptBox["w1", "2"]}]]], "Output",
 CellChangeTimes->{3.640530275253292*^9}]
}, Open  ]],

Cell["\<\



FROM Notes...\
\>", "Text",
 CellChangeTimes->{{3.6461605097096987`*^9, 3.6461605141744347`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EXStationary", " ", "=", " ", 
   RowBox[{"a1", " ", "+", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"b1", "*", "\[Lambda]"}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[Lambda]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"\[Omega]", " ", "t"}], " ", "+", " ", 
       RowBox[{"ArcTan", "[", 
        FractionBox["\[Omega]", "\[Lambda]"], "]"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VarXStationary", " ", "=", " ", 
   RowBox[{
    RowBox[{
     FractionBox["1", "4"], "\[Lambda]", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"2", 
        SuperscriptBox["a2", "2"]}], "+", 
       SuperscriptBox["b2", "2"]}], ")"}]}], " ", "+", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"2", "a2", " ", "b2", " ", 
       SuperscriptBox["\[Lambda]", "2"]}], 
      SqrtBox[
       RowBox[{
        RowBox[{"4", 
         SuperscriptBox["\[Lambda]", "2"]}], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]], 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"\[Omega]", " ", "t"}], " ", "+", " ", 
       RowBox[{"ArcTan", "[", 
        FractionBox["\[Omega]", 
         RowBox[{"2", "\[Lambda]"}]], "]"}]}], "]"}]}], " ", "-", " ", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox["b2", "2"], " ", 
       SuperscriptBox["\[Lambda]", "2"]}], 
      RowBox[{"4", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Lambda]", "2"], "+", 
         SuperscriptBox["\[Omega]", "2"]}]]}]], 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"2", "\[Omega]", " ", "t"}], " ", "+", " ", 
       RowBox[{"ArcTan", "[", 
        FractionBox["\[Lambda]", "\[Omega]"], "]"}]}], "]"}]}]}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.646160517343978*^9, 3.646160581988695*^9}, {
  3.6461606427020597`*^9, 3.646160844554236*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ListContourPlot", "[", 
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"EXStationary", ",", 
              RowBox[{"{", 
               RowBox[{"a1", ",", "0", ",", "10", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"b1", ",", "0", ",", 
                RowBox[{"2", "Pi"}], ",", "1"}], "}"}]}], "]"}], "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Omega]", "\[Rule]", "0.2"}], ",", 
              RowBox[{"\[Lambda]", "\[Rule]", "0.05"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "100", ",", "1000", ",", "20"}], "}"}]}], "]"}],
          "]"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"ListContourPlot", "[", 
       RowBox[{
        RowBox[{"Mean", "[", 
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Table", "[", 
             RowBox[{"VarXStationary", ",", 
              RowBox[{"{", 
               RowBox[{"a2", ",", "0", ",", "10", ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"b2", ",", "0", ",", "10", ",", "1"}], "}"}]}], "]"}], 
            "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\[Omega]", "\[Rule]", "0.2"}], ",", 
              RowBox[{"\[Lambda]", "\[Rule]", "0.05"}]}], "}"}]}], ",", 
           RowBox[{"{", 
            RowBox[{"t", ",", "100", ",", "1000", ",", "20"}], "}"}]}], "]"}],
          "]"}], ",", 
        RowBox[{"PlotLegends", "\[Rule]", "True"}]}], "]"}]}], "}"}], "}"}], 
   ",", 
   RowBox[{"Spacings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.646160880351264*^9, 3.64616091620609*^9}, {
  3.646160960884996*^9, 3.646160964015606*^9}, {3.6461610267206793`*^9, 
  3.646161112433326*^9}, {3.646161155338499*^9, 3.646161168893556*^9}, {
  3.6461612189194517`*^9, 3.64616127915906*^9}, {3.646161355776079*^9, 
  3.6461613598926563`*^9}, {3.6461614222205067`*^9, 3.646161439439942*^9}, {
  3.6461614924254093`*^9, 3.646161640060956*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[
        GraphicsComplexBox[CompressedData["
1:eJxdkj1oFEEYhheb28KflVlxYAZ1ghPFVKYRxZABEUG0CRhUFCRqJ1FjMIVa
iYpVilhoE4KgIChYGY6AYhHktDCmEhJR5JRLcRpCCEYRXW92RvIsLC8PLM87
33xr+s73nF2VJMnt4v2X/pnvXpmJW8kpOAPnYAnWYPYwU3AGzsESrMGcgz3M
DJyDJViDeU+cgz3MHCzBGsw98J44B3uYEqzB3DP3wHviHOxhajD/I+6Ze+A9
cQ72MEPfFvQFTsEZOAdLsAaHvjb0BU7BGTgHS7AGh76t6AucgjNwDpZgDQ59
7egLnIIzcA6WYA1OXPvw7sXmUiX6D2+61JhpBs7cwJPHs7V64Nzd3ft1anwm
sHQv3myefDAdWLv68WPVkVol+kde6Z+Xf4no930i+qu9vd/OLIjo9/0i+j9+
Gf7cMyei359HwK+if1vLr+BX8Cv4Ffwq+l+fXntt4reJft9nov9kR8dQ57KJ
fj+fif7vCwcuPlo00e/PY+C38Fv4LfwWfgu/daMTL/vmm3+63344tfNHsd+x
Fv/P/nttdxr1dWVWyu+F6xq6Pvmp2O+tHQNXzs1tdGuO1JfeT4fvlZvt3L/9
Xa0S/Y3+p/Jqsd/R0uv7RPSPH1p/cLDY71jpD3mz9PsU0e9TwK/iuadafgW/
gl/Br+BX7n7pH9x1dPXzYr/h/L7PuAul/8TD1O5ZNvF+/HzG3Sj9+zZUu54V
+w1efx4Dv4Xfwm/ht/Bb+K37C2mDu9g=
         "], {{{
            EdgeForm[], 
            RGBColor[0.148, 0.33, 0.54], 
            GraphicsGroupBox[{
              
              PolygonBox[{{9, 1, 2}, {10, 2, 3}, {1, 9, 8}, {13, 5, 6}, {14, 
               6, 7}, {11, 3, 4}, {82, 13, 113}, {5, 13, 12}, {2, 10, 9}, {3, 
               11, 10}, {81, 12, 112}, {80, 11, 111}, {79, 10, 110}, {4, 12, 
               11}, {12, 4, 5}, {78, 9, 109}, {6, 14, 13}, {15, 8, 108}}], 
              
              PolygonBox[{{110, 10, 11, 80}, {111, 11, 12, 81}, {108, 8, 9, 
               78}, {109, 9, 10, 79}, {113, 13, 14, 83}, {112, 12, 13, 
               82}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.5857556710741527, 0.5095626959046543, 0.47473149048676005`], 
            GraphicsGroupBox[{
              
              PolygonBox[{{108, 16, 15}, {23, 15, 16}, {19, 27, 26}, {26, 18, 
               19}, {28, 20, 21}, {25, 17, 18}, {81, 19, 111}, {80, 18, 
               110}, {79, 17, 109}, {18, 26, 25}, {83, 21, 113}, {16, 24, 
               23}, {82, 20, 112}, {20, 28, 27}, {27, 19, 20}, {17, 25, 24}, {
               15, 23, 22}, {84, 23, 115}, {29, 22, 114}, {87, 26, 118}, {24, 
               16, 17}, {86, 25, 117}, {78, 16, 108}, {85, 24, 116}, {88, 27, 
               119}}], 
              
              PolygonBox[{{109, 17, 16, 78}, {110, 18, 17, 79}, {116, 24, 25, 
               86}, {117, 25, 26, 87}, {114, 22, 23, 84}, {115, 23, 24, 85}, {
               113, 21, 20, 82}, {112, 20, 19, 81}, {119, 27, 28, 89}, {111, 
               19, 18, 80}, {118, 26, 27, 88}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.8979261184569213, 0.6192711598410905, 0.2912191508112667], 
            GraphicsGroupBox[{
              
              PolygonBox[{{91, 38, 122}, {39, 31, 32}, {43, 36, 120}, {32, 40,
                39}, {33, 41, 40}, {92, 39, 123}, {34, 42, 41}, {41, 33, 
               34}, {114, 30, 29}, {38, 30, 31}, {40, 32, 33}, {42, 34, 35}, {
               31, 39, 38}, {90, 37, 121}, {37, 29, 30}, {86, 32, 116}, {85, 
               31, 115}, {30, 38, 37}, {84, 30, 114}, {88, 34, 118}, {29, 37, 
               36}, {93, 40, 124}, {89, 35, 119}, {94, 41, 125}, {87, 33, 
               117}}], 
              
              PolygonBox[{{124, 40, 41, 94}, {125, 41, 42, 95}, {116, 32, 31, 
               85}, {121, 37, 38, 91}, {122, 38, 39, 92}, {119, 35, 34, 88}, {
               123, 39, 40, 93}, {117, 33, 32, 86}, {120, 36, 37, 90}, {115, 
               31, 30, 84}, {118, 34, 33, 87}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.9495361926261485, 0.7438404815653713, 0.4435621971410604], 
            GraphicsGroupBox[{
              
              PolygonBox[{{44, 52, 51}, {99, 54, 130}, {46, 54, 53}, {94, 48, 
               124}, {100, 55, 131}, {95, 49, 125}, {97, 52, 128}, {120, 44, 
               43}, {43, 51, 50}, {45, 53, 52}, {93, 47, 123}, {90, 44, 
               120}, {91, 45, 121}, {48, 56, 55}, {55, 47, 48}, {54, 46, 
               47}, {53, 45, 46}, {92, 46, 122}, {47, 55, 54}, {57, 50, 
               126}, {98, 53, 129}, {96, 51, 127}, {56, 48, 49}, {52, 44, 
               45}, {51, 43, 44}}], 
              
              PolygonBox[{{121, 45, 44, 90}, {125, 49, 48, 94}, {130, 54, 55, 
               100}, {123, 47, 46, 92}, {129, 53, 54, 99}, {126, 50, 51, 
               96}, {131, 55, 56, 101}, {127, 51, 52, 97}, {124, 48, 47, 
               93}, {122, 46, 45, 91}, {128, 52, 53, 98}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.9994036762336196, 0.8685091905840489, 0.5981513963242204], 
            GraphicsGroupBox[{
              
              PolygonBox[{{105, 68, 136}, {60, 68, 67}, {69, 61, 62}, {67, 59,
                60}, {65, 57, 58}, {66, 58, 59}, {103, 66, 134}, {68, 60, 
               61}, {62, 70, 69}, {58, 66, 65}, {59, 67, 66}, {71, 64, 132}, {
               57, 65, 64}, {126, 58, 57}, {102, 65, 133}, {61, 69, 68}, {104,
                67, 135}, {101, 63, 131}, {106, 69, 137}, {100, 62, 130}, {70,
                62, 63}, {99, 61, 129}, {97, 59, 127}, {98, 60, 128}, {96, 58,
                126}}], 
              
              PolygonBox[{{130, 62, 61, 99}, {128, 60, 59, 97}, {131, 63, 62, 
               100}, {133, 65, 66, 103}, {132, 64, 65, 102}, {127, 59, 58, 
               96}, {134, 66, 67, 104}, {135, 67, 68, 105}, {136, 68, 69, 
               106}, {137, 69, 70, 107}, {129, 61, 60, 98}}]}]}, {
            EdgeForm[], 
            RGBColor[1., 0.9499999999999998, 0.7499999999999998], 
            GraphicsGroupBox[{
              
              PolygonBox[{{103, 73, 133}, {106, 76, 136}, {132, 72, 71}, {107,
                77, 137}, {104, 74, 134}, {105, 75, 135}, {102, 72, 132}}], 
              
              PolygonBox[{{137, 77, 76, 106}, {136, 76, 75, 105}, {134, 74, 
               73, 103}, {135, 75, 74, 104}, {133, 73, 72, 102}}]}]}}, {{}, 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{71, 132, 102, 133, 103, 134, 104, 135, 105, 136, 106, 
               137, 107}]}, "10"], Annotation[#, 10, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{57, 126, 96, 127, 97, 128, 98, 129, 99, 130, 100, 131, 
               101}]}, "8"], Annotation[#, 8, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{43, 120, 90, 121, 91, 122, 92, 123, 93, 124, 94, 125, 
               95}]}, "6"], Annotation[#, 6, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{29, 114, 84, 115, 85, 116, 86, 117, 87, 118, 88, 119, 
               89}]}, "4"], Annotation[#, 4, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{15, 108, 78, 109, 79, 110, 80, 111, 81, 112, 82, 113, 
               83}]}, "2"], Annotation[#, 2, "Tooltip"]& ], {}, {}}}], {
        DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
         Identity, Frame -> True, FrameLabel -> {None, None}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"DefaultBoundaryStyle" -> Automatic}, 
         PlotRange -> {{1., 7.}, {1., 11.}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{
                 
                 RasterBox[{{{0.148, 0.33, 0.54}}, {{0.5857556710741527, 
                  0.5095626959046543, 0.47473149048676005`}}, {{
                  0.8979261184569213, 0.6192711598410905, 
                  0.2912191508112667}}, {{0.9495361926261485, 
                  0.7438404815653714, 0.4435621971410605}}, {{
                  0.9994036762336196, 0.8685091905840489, 
                  0.5981513963242204}}, {{1., 0.95, 0.75}}}, {{
                    Rational[-15, 2], -75}, {
                    Rational[15, 2], 75}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -75}, {
                    Rational[-15, 2], -75}, {
                    Rational[-15, 2], 75}, {
                    Rational[15, 2], 75}}, {{
                    7.5, -75}, {-7.5, -75}, {-7.5, 75}, {7.5, 75}}]]}, {
                  CapForm[None], {{
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -50.}, {
                    Rational[15, 2], -50.}}, {{-7.5, -50.}, {7.5, -50.}}]]}, {
                   
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -25.}, {
                    Rational[15, 2], -25.}}, {{-7.5, -25.}, {7.5, -25.}}]]}, {
                   
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -1.4210854715202004`*^-14}, {
                    Rational[
                    15, 2], -1.4210854715202004`*^-14}}, {{-7.5, \
-1.4210854715202004`*^-14}, {7.5, -1.4210854715202004`*^-14}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 25.}, {
                    Rational[15, 2], 25.}}, {{-7.5, 25.}, {7.5, 25.}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 50.}, {
                    Rational[15, 2], 50.}}, {{-7.5, 50.}, {7.5, 50.}}]]}}}, {
                 Antialiasing -> False, 
                  StyleBox[
                   LineBox[{{7.5, -75.}, {7.5, 75.}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -50.}, 
                    Offset[{4., 0}, {7.5, -50.}]}, {{7.5, -25.}, 
                    Offset[{4., 0}, {7.5, -25.}]}, {{
                    7.5, -1.1338553032935808`*^-14}, 
                    Offset[{4., 0}, {7.5, -1.1338553032935808`*^-14}]}, {{7.5,
                     24.99999999999999}, 
                    Offset[{4., 0}, {7.5, 24.99999999999999}]}, {{7.5, 
                    49.99999999999999}, 
                    Offset[{4., 0}, {7.5, 49.99999999999999}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -50.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -25.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.5, -1.1338553032935808`*^-14}], {-1, 
                    0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 24.99999999999999}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 49.99999999999999}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 150}, BaseStyle -> {}], Alignment -> 
               Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.026573707542992`"}], "}"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"4.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"6.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"8.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"10.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[
        GraphicsComplexBox[CompressedData["
1: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
h2DL6N/To4dt
         "], {{{
            EdgeForm[], 
            RGBColor[0.148, 0.33, 0.54], 
            GraphicsGroupBox[{
              
              PolygonBox[{{13, 1, 2}, {18, 6, 7}, {14, 2, 3}, {15, 3, 4}, {
               201, 7, 122}, {142, 47, 218}, {140, 46, 217}, {141, 45, 216}, {
               24, 12, 13}, {25, 13, 14}, {17, 5, 6}, {16, 4, 5}, {27, 15, 
               16}, {26, 14, 15}, {207, 28, 127}, {2, 14, 13}, {38, 26, 27}, {
               204, 18, 123}, {133, 37, 211}, {135, 38, 212}, {36, 24, 25}, {
               28, 16, 17}, {37, 25, 26}, {35, 23, 24}, {3, 15, 14}, {14, 26, 
               25}, {4, 16, 15}, {34, 46, 45}, {12, 24, 23}, {15, 27, 26}, {
               26, 38, 37}, {218, 47, 134}, {47, 35, 36}, {46, 34, 35}, {129, 
               28, 207}, {212, 38, 130}, {6, 18, 17}, {25, 37, 36}, {5, 17, 
               16}, {13, 25, 24}, {126, 18, 204}, {35, 47, 46}, {1, 13, 12}, {
               23, 35, 34}, {16, 28, 27}, {24, 36, 35}}], 
              
              PolygonBox[{{127, 28, 17, 203}, {216, 45, 46, 140}, {206, 27, 
               28, 129}, {123, 18, 7, 201}, {130, 38, 27, 206}, {211, 37, 38, 
               135}, {134, 47, 36, 210}, {210, 36, 37, 133}, {217, 46, 47, 
               142}, {203, 17, 18, 126}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.4271277598641472, 0.4538148676838856, 0.567982403146955], 
            GraphicsGroupBox[{
              
              PolygonBox[{{29, 41, 40}, {143, 51, 220}, {226, 61, 144}, {214, 
               41, 132}, {57, 69, 68}, {56, 68, 67}, {126, 29, 203}, {142, 58,
                217}, {133, 48, 210}, {129, 39, 206}, {60, 48, 49}, {48, 60, 
               59}, {51, 39, 40}, {220, 51, 137}, {41, 29, 30}, {68, 56, 
               57}, {205, 20, 125}, {31, 19, 20}, {20, 8, 9}, {69, 57, 58}, {
               233, 69, 148}, {209, 31, 128}, {202, 9, 124}, {61, 49, 50}, {
               135, 49, 211}, {49, 61, 60}, {149, 60, 225}, {150, 61, 226}, {
               39, 51, 50}, {157, 67, 231}, {203, 29, 127}, {210, 48, 134}, {
               8, 20, 19}, {206, 39, 130}, {19, 31, 30}, {201, 19, 123}, {156,
                68, 232}, {147, 59, 224}, {140, 57, 216}, {158, 69, 233}, {
               136, 41, 214}, {131, 31, 209}}], 
              
              PolygonBox[{{134, 48, 59, 218}, {144, 61, 50, 219}, {208, 30, 
               31, 131}, {204, 30, 29, 126}, {148, 69, 58, 223}, {218, 59, 58,
                142}, {216, 57, 56, 141}, {123, 19, 30, 204}, {207, 40, 39, 
               129}, {217, 58, 57, 140}, {132, 41, 30, 208}, {232, 68, 69, 
               158}, {225, 60, 61, 150}, {219, 50, 51, 143}, {128, 31, 20, 
               205}, {127, 29, 40, 207}, {130, 39, 50, 212}, {223, 58, 59, 
               147}, {125, 20, 9, 202}, {213, 40, 41, 136}, {137, 51, 40, 
               213}, {211, 49, 48, 133}, {231, 67, 68, 156}, {224, 59, 60, 
               149}, {212, 50, 49, 135}, {122, 8, 19, 201}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.6335462664402454, 0.526358112806476, 0.4466373385782583], 
            GraphicsGroupBox[{
              
              PolygonBox[{{170, 81, 244}, {213, 52, 137}, {136, 52, 213}, {
               131, 42, 208}, {153, 64, 229}, {151, 63, 228}, {10, 22, 21}, {
               64, 52, 53}, {222, 54, 139}, {245, 82, 160}, {21, 33, 32}, {
               208, 42, 132}, {205, 32, 128}, {158, 80, 232}, {147, 70, 
               223}, {42, 54, 53}, {236, 73, 152}, {149, 71, 224}, {150, 72, 
               225}, {32, 44, 43}, {156, 79, 231}, {202, 21, 125}, {159, 72, 
               235}, {145, 54, 222}, {167, 79, 242}, {229, 64, 146}, {161, 73,
                236}, {223, 70, 148}, {169, 80, 243}, {171, 82, 245}, {70, 82,
                81}, {52, 64, 63}, {143, 62, 219}, {22, 10, 11}, {219, 62, 
               144}, {54, 42, 43}, {168, 78, 241}, {82, 70, 71}, {44, 32, 
               33}, {33, 21, 22}}], 
              
              PolygonBox[{{234, 71, 72, 159}, {214, 53, 52, 136}, {144, 62, 
               73, 226}, {224, 71, 70, 147}, {228, 63, 64, 153}, {220, 63, 62,
                143}, {241, 78, 79, 167}, {128, 32, 43, 209}, {244, 81, 82, 
               171}, {137, 52, 63, 220}, {152, 73, 62, 227}, {231, 79, 78, 
               157}, {232, 80, 79, 156}, {125, 21, 32, 205}, {132, 42, 53, 
               214}, {215, 43, 44, 138}, {124, 10, 21, 202}, {233, 81, 80, 
               158}, {148, 70, 81, 233}, {146, 64, 53, 221}, {221, 53, 54, 
               145}, {242, 79, 80, 169}, {226, 73, 72, 150}, {209, 43, 42, 
               131}, {243, 80, 81, 170}, {225, 72, 71, 149}, {139, 54, 43, 
               215}, {160, 82, 71, 234}, {227, 62, 63, 151}, {235, 72, 73, 
               161}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.8399647730163434, 0.5989013579290664, 0.3252922740095617], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtzjkOgWEUheGLZaisQq1FZSiMhQWwDyoa5C+MiRgT41ZUKioSYkhIjO+N
Wzz5iu/k3OPLFSJ5t4h44YG4RLI8Y0wQxwMjxHDHSv4Zzc54EniigSj2WMOP
EroI42R/mmligTQ+2CCAit3Tux1sEUQNS2TwRcv2HKxX+x20EcIRRdugW3pI
4oyB3b2iav16p2wbdMscKbxRt84dptbzwtD23NC3/AU/77My9A==
               "]], 
              
              PolygonBox[{{222, 66, 65, 145}, {235, 84, 83, 159}, {252, 90, 
               91, 179}, {247, 84, 85, 174}, {255, 93, 94, 182}, {244, 93, 92,
                170}, {236, 85, 84, 161}, {238, 75, 76, 164}, {251, 89, 90, 
               177}, {237, 74, 75, 162}, {230, 65, 66, 154}, {253, 91, 92, 
               180}, {243, 92, 91, 169}, {246, 83, 84, 172}, {173, 94, 83, 
               246}, {139, 55, 66, 222}, {163, 85, 74, 237}, {152, 74, 85, 
               236}, {146, 65, 76, 229}, {155, 76, 65, 230}, {254, 92, 93, 
               181}, {242, 91, 90, 167}, {245, 94, 93, 171}, {241, 90, 89, 
               168}, {228, 75, 74, 151}, {229, 76, 75, 153}, {160, 83, 94, 
               245}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.9233839104780258, 0.6784597761950646, 0.36249012248188], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJwtz7kOQVEUheGDxPwEOg+kUVAaYi7c96FDVMaYC+PD6ChJzP+OVXxZ697c
s8++yaKXbvqdcwkEMEAON+xQQdjn3JYsI0Q/kQ3E6Qeyhih9T1YRoR/JOmL0
pfpXc23+EAud/WCmu14YI4sHPJQQZE6HzOBiu/JcICfaw/ZZo6ezV8y1zxtn
pNDWeZvTxVT/9cTG/Wfa7Ja+t3Mr5OHn/Uj9rv3srj5+jL8sFg==
               "]], 
              PolygonBox[CompressedData["
1:eJwt0DcSwjAUhGHJwxB7eq5EASVhiC7gTtCSMwXxQLTAEP832uIbW5a0K7lQ
7xd7kXMujwR+6KKDNWaooYQnnHcu1poNdi6MKzbF3JtnC03M8dD+Kib4KruN
FXI+ZFnGFSkf9lrGUZ3WXcYUkQ9ZlrlXZ0X5WyQZN9R/wEddlrdE1od+67wg
48O8fTtjrLvEumvah7225oS7umzNCC91WecCN53VzjzAUO81/Ys/9RotUA==

               "]], 
              
              PolygonBox[{{166, 87, 164, 239, 240}, {240, 239, 155, 77, 
               165}}]}]}, {
            EdgeForm[], 
            RGBColor[0.956358112806476, 0.76089528201619, 0.4647101497000756], 
            GraphicsGroupBox[{
              
              PolygonBox[{{193, 116, 266}, {183, 107, 257}, {197, 108, 271}, {
               185, 108, 258}, {240, 88, 166}, {257, 107, 184}, {262, 112, 
               111}, {249, 98, 176}, {175, 98, 249}, {195, 107, 270}, {194, 
               117, 267}, {191, 114, 264}, {192, 115, 265}, {189, 112, 262}, {
               190, 113, 263}, {165, 88, 240}, {271, 108, 187}, {186, 98, 
               261}}], 
              
              PolygonBox[{{265, 115, 114, 191}, {250, 99, 98, 175}, {266, 116,
                115, 192}, {258, 108, 107, 183}, {264, 114, 113, 190}, {166, 
               88, 99, 250}, {267, 117, 116, 193}, {270, 107, 108, 197}, {261,
                98, 99, 188}, {263, 113, 112, 189}}], 
              
              PolygonBox[{{269, 268, 184, 107, 195}, {260, 259, 176, 98, 
               186}, {187, 108, 185, 259, 260}, {196, 117, 194, 268, 
               269}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.9893323151349263, 0.8433307878373155, 0.5669301769182712], 
            GraphicsGroupBox[{
              
              PolygonBox[{{195, 118, 269}, {188, 110, 261}, {186, 109, 260}, {
               260, 109, 187}, {198, 109, 273}, {197, 119, 270}, {269, 118, 
               196}}], 
              
              PolygonBox[{{273, 109, 110, 200}, {261, 110, 109, 186}, {270, 
               119, 118, 195}}], 
              
              PolygonBox[{{199, 119, 197, 271, 272}, {272, 271, 187, 109, 
               198}}]}]}, {
            EdgeForm[], 
            RGBColor[1., 0.95, 0.75], 
            GraphicsGroupBox[{
              PolygonBox[{{198, 120, 272}, {200, 121, 273}, {272, 120, 199}}], 
              PolygonBox[{{273, 121, 120, 198}}]}]}}, {{}, 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{199, 272, 198, 273, 200}]}, "3.5`"], 
            Annotation[#, 3.5, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{188, 261, 186, 260, 187, 271, 197, 270, 195, 269, 
               196}]}, "3"], Annotation[#, 3, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{165, 240, 166, 250, 175, 249, 176, 259, 185, 258, 183, 
               257, 184, 268, 194, 267, 193, 266, 192, 265, 191, 264, 190, 
               263, 189, 262, 111}]}, "2.5`"], 
            Annotation[#, 2.5, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{154, 230, 155, 239, 164, 238, 162, 237, 163, 248, 174, 
               247, 172, 246, 173, 256, 182, 255, 181, 254, 180, 253, 179, 
               252, 177, 251, 178}]}, "2"], Annotation[#, 2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{138, 215, 139, 222, 145, 221, 146, 229, 153, 228, 151, 
               227, 152, 236, 161, 235, 159, 234, 160, 245, 171, 244, 170, 
               243, 169, 242, 167, 241, 168}]}, "1.5`"], 
            Annotation[#, 1.5, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{124, 202, 125, 205, 128, 209, 131, 208, 132, 214, 136, 
               213, 137, 220, 143, 219, 144, 226, 150, 225, 149, 224, 147, 
               223, 148, 233, 158, 232, 156, 231, 157}]}, "1"], 
            Annotation[#, 1, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{122, 201, 123, 204, 126, 203, 127, 207, 129, 206, 130, 
               212, 135, 211, 133, 210, 134, 218, 142, 217, 140, 216, 141}]}, 
             "0.5`"], Annotation[#, 0.5, "Tooltip"]& ], {}, {}}}], {
        DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
         Identity, Frame -> True, FrameLabel -> {None, None}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"DefaultBoundaryStyle" -> Automatic}, 
         PlotRange -> {{1., 11.}, {1., 11.}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{
                 
                 RasterBox[{{{0.148, 0.33, 0.54}}, {{0.4271277598641472, 
                  0.4538148676838856, 0.567982403146955}}, {{
                  0.6335462664402454, 0.526358112806476, 
                  0.4466373385782583}}, {{0.8399647730163434, 
                  0.5989013579290664, 0.3252922740095617}}, {{
                  0.9233839104780258, 0.6784597761950646, 
                  0.36249012248188}}, {{0.956358112806476, 0.7608952820161899,
                   0.4647101497000755}}, {{0.9893323151349263, 
                  0.8433307878373155, 0.5669301769182712}}, {{1., 0.95, 
                  0.75}}}, {{
                    Rational[-15, 2], -100}, {
                    Rational[15, 2], 100}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -100}, {
                    Rational[-15, 2], -100}, {
                    Rational[-15, 2], 100}, {
                    Rational[15, 2], 100}}, {{
                    7.5, -100}, {-7.5, -100}, {-7.5, 100}, {7.5, 100}}]]}, {
                  CapForm[None], {{
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -75.}, {
                    Rational[15, 2], -75.}}, {{-7.5, -75.}, {7.5, -75.}}]]}, {
                   
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -50.}, {
                    Rational[15, 2], -50.}}, {{-7.5, -50.}, {7.5, -50.}}]]}, {
                   
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -24.999999999999986`}, {
                    Rational[
                    15, 2], -24.999999999999986`}}, {{-7.5, \
-24.999999999999986`}, {7.5, -24.999999999999986`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 0.}, {
                    Rational[15, 2], 0.}}, {{-7.5, 0.}, {7.5, 0.}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 25.}, {
                    Rational[15, 2], 25.}}, {{-7.5, 25.}, {7.5, 25.}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 50.}, {
                    Rational[15, 2], 50.}}, {{-7.5, 50.}, {7.5, 50.}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 75.00000000000003}, {
                    Rational[15, 2], 75.00000000000003}}, {{-7.5, 
                    75.00000000000003}, {7.5, 75.00000000000003}}]]}}}, {
                 Antialiasing -> False, 
                  StyleBox[
                   LineBox[{{7.5, -100.}, {7.5, 100.}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -75.}, 
                    Offset[{4., 0}, {7.5, -75.}]}, {{7.5, -25.}, 
                    Offset[{4., 0}, {7.5, -25.}]}, {{7.5, 
                    24.999999999999986`}, 
                    Offset[{4., 0}, {7.5, 24.999999999999986`}]}, {{7.5, 
                    75.00000000000001}, 
                    Offset[{4., 0}, {7.5, 75.00000000000001}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.5\"", 0.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -75.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"1.5\"", 1.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -25.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"2.5\"", 2.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 24.999999999999986`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"3.5\"", 3.5, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 1}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 75.00000000000001}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 200}, BaseStyle -> {}], Alignment -> 
               Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0.`", ",", "3.7908422698113258`"}], "}"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0.5`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"1.5`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"2.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"2.5`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"3.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"3.5`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.646160889724284*^9, 3.6461609190092897`*^9}, 
   3.646161169544157*^9, {3.646161220722341*^9, 3.6461612380070477`*^9}, 
   3.646161280178245*^9, 3.646161360541744*^9, 3.6461614404515133`*^9, {
   3.6461614939240923`*^9, 3.646161610613244*^9}, 3.646161641331835*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Rdat1", " ", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", " ", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"3", "*", 
             RowBox[{"Sin", "[", "t", "]"}]}], "-", "20"}], ",", "2"}], "]"}],
          ",", "1"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{"4", "Pi"}], ",", "0.1"}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Rdat2", " ", "=", 
   RowBox[{"Flatten", "[", 
    RowBox[{
     RowBox[{"Table", "[", " ", 
      RowBox[{
       RowBox[{"RandomVariate", "[", 
        RowBox[{
         RowBox[{"NormalDistribution", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"4", "*", 
             RowBox[{"Sin", "[", "t", "]"}]}], "-", "20"}], ",", 
           RowBox[{"0.1", "+", 
            RowBox[{"2", "*", 
             RowBox[{"Abs", "[", 
              RowBox[{"Sin", "[", 
               RowBox[{"2", "t"}], "]"}], "]"}]}]}]}], "]"}], ",", "1"}], 
        "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", "0", ",", 
         RowBox[{"4", "Pi"}], ",", "0.01"}], "}"}]}], "]"}], ",", "1"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "[", 
  RowBox[{"{", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"ListPlot", "[", 
      RowBox[{"Rdat1", ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Time\>\"", ",", 
          "\"\<\!\(\*SuperscriptBox[\(\[Delta]\), \(13\)]\)C\>\""}], "}"}]}], 
       ",", 
       RowBox[{"ColorFunction", "\[Rule]", 
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "1"}], "]"}]}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ListPlot", "[", 
      RowBox[{"Rdat2", ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameLabel", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
         "\"\<Time\>\"", ",", 
          "\"\<\!\(\*SuperscriptBox[\(\[Delta]\), \(13\)]\)C\>\""}], "}"}]}], 
       ",", 
       RowBox[{"ColorFunction", "\[Rule]", 
        RowBox[{"ColorData", "[", 
         RowBox[{"97", ",", "1"}], "]"}]}]}], "]"}]}], "}"}], "}"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.646161704232288*^9, 3.6461619887331953`*^9}, {
   3.646162031094203*^9, 3.646162097749358*^9}, {3.646162139795846*^9, 
   3.646162176448099*^9}, {3.646162382534637*^9, 3.646162444272753*^9}, {
   3.646162501394779*^9, 3.6461630714503107`*^9}, {3.6461714292489033`*^9, 
   3.646171452793044*^9}, 3.646171539096343*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.01388888888888889], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1:eJw1VA1QzHkY7sNndGprDcL5SLdsJZtq81GPtLEr2d3a79rYcOlinUsk3NIR
mZvVoeREjZpRGjGdj3LpXyjnIxpyQ6biOjvhyFHRJefmfu9/Zuc/7z7v8z7v
53+yyaxc5WBnZ7f98++/9/9PV2h5XOuOE60ijv0B50+TXM/s9GP2MPT3//Qt
v4RwFxRVt3qNsp/FbHeobhysiHYg/zG4nuVdwxvlz+zxWH3d/qLCm/iTMGLR
UOkwMeFT8N2nsO6bZwn3ROc9zbJYG8X3gkvuEL47R7gAJVel2lfthM9AJh81
LRzZ3jid0PmVeQ7l4wthzoKd3QOE+6FfUqUddUXI7FmwybZ4d5hmM1uEhOG8
k3x74vsj0dCQPf4P0p8NN82UQ2OnUbwATE1Mtd4vIP9A7OlLaivTz2R2EAbS
WvJupQYwWwwnCKobV1K8YGT/ONYxt4f6MQcbXj24vOQ98efiwbWO04Yu0puH
yrb0tDs24s9HZg0sUQOkH4IQa0SjfhjFC8Ukzfl3wU8JB5K2uSXUrmd8C2B/
cHKvz0iqfwGaLpqm9VQwf8sCyENSXjsZKF4Yzi1vc75xk/lbwnAiQOXF3031
LcTXI6T6ljyKvxB5jzsfHtxL/HCUZt+2vnEifjgK/j6ZeiI9iOESODSNTrnQ
HchwCYqSE87LdYRHIKE462GWB+ERKKg+VS00k/4inDG75Wx+Q/giCFzKlHfX
Er4YuyNfZKi0YoYvxoEd9s8KvmH+dlI8v6Tb/NGO+FLwjL8MmhNPfBkG1fYV
tRwnvgwe6yKzvPcEM3wJNtk8nvW8o/qWwN85Lb3OleJHojhxZUVpPKvHEom7
Vs3w7A2EL8Wx771yazJYvyxLIdu3yU0gIP0opJcmha5bTngU/NI1gfqzNL9l
cHzRa/ytn/q/DO48n8D2HuLL0dl4udIkYTjkqHLJX1w/luEWOQQpK/pXBzGc
k2PvxKcrDCsovgLWuZeHNjewfYQConGO5d1y0lMg5mx5o3462x9OAf+QHOOa
dNpfJRwKZLbsDoZDicM3XR8dL2O4RYmc00ed1ddIXwkfbaNjfgXtezS8m4RX
q1JZ/YhGWP56v4cydi+WaPzu62w5ImbxuGhElnRt4c+n/Y/B08FTjc1yVi9i
sHD7ocq1H2jeMXimO6SUerJ4XAy2pr7fJc0ifRXKN8nrFa99GV+FeZY2q/g5
3YsKlUmvpu/IYflxn/2rk8XN04ivxvjQwhlNh1k/ocbaui366EDqnxrfrw7Z
f+cI8dXw+CtPLZ5P89NAFrVX9LiO+q9B/ttL49Q22jcNikWFXqsymD+nwcTa
gS+7RXR/Wni233M9+ivpa/Gn2+SZdzS0j1o0Je77OeIJ6WshyKz7oqOV7k+H
lRXBrib6vkKH7A8bg55cp/np8ENt7gVFKOnrsLHtdT+vl+avx5B/RlccmzCX
8fWQFSfrhGHsfix6FHnOCDAZWX6cHidHfhJuSKL7MOBUqW3r/XqanwHtJaaJ
L/fT/howqz29arAvy5czQF/IxTYHUP6xSBl564WQx/QQizHhvYKtS0k/FoYr
ZhX/JenHgtfX8PFYJunH4UBZeFNaIfHjILH6frh0l/oXh0LJ/i6lB9Ufh9vP
93n5pBDfiPxy9wyelfpvhKQ3uU82nPI3YkjK49G76B45IyacC5S8fUT7E489
Eb2ea8qp//GoHLrNbG6g70E8nArr/aOEIu5fJN1RWg==
          "]]}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, -13.21924014255509},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(\\*SuperscriptBox[\\(\[Delta]\\), \\(13\\)]\\)C\"", 
          TraditionalForm], None}, {
         FormBox["\"Time\"", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      ImageSize->{606.23046875, Automatic},
      Method->{},
      PlotRange->{{0., 126.}, {-27.11570281325387, -13.880976460207414`}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}},
      Ticks->{Automatic, Automatic}], 
     GraphicsBox[{{}, {{}, 
        {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
         0.006944444444444445], AbsoluteThickness[1.6], 
         PointBox[CompressedData["
1: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
PeyuftTLZG4i3ok2G9y6xmReIlx0gp6/nMf6ZyXiRdjKl6oXCP9E3Bbxn1Rw
kMn5iVDpko91/N97VSJ+N+b7exDfryQRayQmyajJMn5FeSLMns5xrVRh81+Z
iMOpm19JZdB7ZiKcP5zeojuU8E9E8YxIk6vE/2hMhMn1+/c3mbP+bYlQ2Lrc
XMqY2e9MxILyIa+ciE/Rk4jekOa5Nl2EfxICl/GU/Lex8Ykl4ZDYvhWLx1P+
J2Ez53vlJ+JnSSXhUb3+toXN9D6YhKgdTs88tjFZLgmVIQuvFYfTe3ESVIbX
BGjJMFkjCV9yZII+ET8HScho2vyytpfyPwkXa0rcLzUS/klo7//T7+XA8LVI
Qsy30CXWevT9H5S9yxaNHmDryyUJSrtTj/t1M9lnUHbf7798IusfkgSTFzsl
7QaIv5ME3oHWE8N2Uv4nQXle/Yp15J+XhL4Bsf8EO5i9rCS8mF3zR+E54Z+E
6GUljat5hH8SGif7y38IZfNVmISpME3eJEr5nwT4Bnu4T6b8T8KM/iUH3Xcz
fWUSzPh3n9cfYf2rk3BUqnHpE+LP1SVBWyEqUESV8E/Cv0k9VeOWEP5JGPPS
pOLQKKbvTEKwZ7ze7R4WX88gXj/PeMsLiX/Bxefu+um3DNl8iHEx5YGO9zcL
yn8usrxT5g1TpP2fi4cHVCcpGhI/gIsehV8Dp+2YLMfFEW298j4jyn8uqrvP
xczdxsanwUXIk2zxB7cIfy52+s5L+KBF+HMhKhbvMIv4TiZcnNy4dP7VASZb
cMHJNCq1pnyw5UKiXPXa282U/1yMkYw4YCtN+c9Fh9u++FLiq4VwYZh28cBx
OeJPcDFSIv+xqoDZ53LhJlX3cpw+4c/FpGrp/0Y5M30WF1t7rfVrzxI/gQv9
qQ+T99N48rnYZ7oseFQ14c/FlSHS3x7XMrmEC/VVs148IT5VORcuJVrK1qD8
5wICJbu3usxeNRciqpae/1YzfR0XH1O2JcmeJz4LF5Keqj+cTxH+XMip6c8+
UM/w7eTieqD+YxWKv4cL3X/7ZjtZEP8yGbWz5U339tL+nwyTi5JhGacI/2SU
9ybl7Phf/idjhUjX9S5Zwj8ZKdOzzj6dy+zJJSPezX6TDe0Pismwy3u7aRrx
GzWSB8fXbiCeTHzjZMRs6snmdzJZPxnqEcsrC/II/2RYGl9aYbqJ9v9kfFyk
8PPbHsI/GQN8vav3iI/kkoyHmssv5BEf3ycZv9VjVeUKGP8mJBlWv6q0Fsxn
MicZTrs6dTbR9447GP9Ji8vP+pg9XjJSN06c4JFJ3/9kCCMTr30ifmJuMtzU
ei1aDen+l4z5s8t1Pq1i+2nhYHzXTD54O7L5KUlGRJ/F/PnElyxPhkLXmfnW
xOepTMYCGcf2q5RP1cm4kX3DHMQXqUvGGpfC5odLiE+WDIc820BH4v+1JSMr
YW/PF+LLdCbDeLZH9uEkuf+Te5LxQma4680bxP9JQYn0YcVpxZT/KWg2jjvk
Ykv7fwo+Xc2MECG+nFQKxCH15QXxZ2RSsOnJt8puwkcuBSKiUzdE036vmILx
w/veH1On+9+gP7GA9IkDlP8peJoZ9MhpHfOvn4JvN9fNLad6rUkKTKWvGq7b
wsZjkQJzkdvua12ID5eC3OJ3l4OIn+ySgtdaU3TW+BLfJAXrRvw9uSeI9v8U
XGwa8C3Qo/xPwd2doYYutB9xU7Dl9buxEk2EfwoEfCPdUY8J/xREClu8axro
/jcYj/NZR3UNps9Pwc7wPd3xdH4vTME43QsHjdwI/xSMNJy6kPOS3q9T4Jb+
6bcth/BPQVFfx8C/cqr/pMBzVN7jMjrf1KVgx0fuybxNxCdLAd/V9YuAft/Q
loLtq9JON9H5rjMFNaNPWGRMo/N/ChbHjE8e8ZfwT4WdX1z/uHzCPxXbOpbq
nFaj/E/FijuLqoMPM71UKi5yR1nusaX7fyoO8Oe2GGgS/qk4OauoYCCY+DKp
CHn0NONkNX3/U1Gw7HaXqTWd/1PxSP/Z07WtzJ5+KhRPKLtq7GX+TFIRa6h1
un4d5X8qeL+uupeOYPHbpkLfyyBZpY7F65KK4D7lYAlXyv9UnLreJH2R1ltI
Kty4USJmp+j8l4pbHJMQv3o6/6VCrfT9qGX0HsobjPdbpPTTpfT9HxzPH0Ol
jHbK/1QcHdWW2Erfr/xU9EnmaBcX0PkvFSMfZgdKudP5LxVFG/Yc4h0i/FPh
YO304zPVDypTMVH8WPRY4sdVp6KiSTx2dQnlfyq807bvO25J9d9U5L7NaKhb
ytq3pWKucmf4su+EfypCI3V+7Kffp/WkQvbntsBZlN8iafhlt+pfXAHhn4bb
Tbqzr/2h+l8a7JVG1z+h3/NIpUFTvGfviot0/0+D7Wr3s3OJDyOXhmm9boEr
FhD+aZg+/8jXmCTK/zS82rpT9CjdR5CGso4St8dc5k8/DSdEK46fpvuySRp+
vjQxyLak+38aTnv261tNpfN/GvzUO/xUP9L9b1BuH/eqJYLwT8OxRzv/Cuj3
WCGD47lQed9Ni+o/g/qZLt1+lL/cNFz7MGll4nuGNy8NfdbvDIuJv5GVBtUJ
Ni07KoiflAaT7Kufhv6i/T8NvTtLm/xq6P6fhhmm9flGdB8sGZRDU5MKiH9R
nobq4So3W2l+K9Nwq6f8e14V3f/ScH38NMfAVDbeujT0jxwd2dtJ9780zJdP
XCd9jfBPwztBUVlRP+Gfhiqty8j83/1/cL6Ty3U0yon/lw5njRPyrcep/pOO
tiMdnirEN5VMh+iVIx+6o6j+k44qi+8nHsoQ/ulQe5PSPTmdyXLpWGO3ePzZ
UYR/Oo40l22MeUT3/3T0t0pdGZ1A/JF0iO/9q3xvEtX/0rHszrsIaaqnmKTj
uKN9XjXxDy3SsbnowWhdqp/apsPD3d3qJ9XTXAbHb37/x0Wqv/mkI6WsqmYz
tQ9Jx8OxVtrH7xP/IB1eqidVdKg+z02HvLacw8K/lP/piHoRv7yY6oFZ6fBv
d3E1Xk/7fzq+5I4okgmh+k86miN91y6j9V2YjsI92hvbtlL9Px06918XDM+m
+k862rWbnzVPpvpvOmIejdzrvJ3wH4ynL1+l5DLhn44VWze3WFL9qDEdYZLa
IjH36P6fjsx3ztkGZL8zHUVnLjguKCf805G/qyFryv/qvxloVf2nN2IY8y+W
gZPDflgbqBAfKgNe/Vecfv9gslQGtn5c+mMaaP/PwJMcT/twqrfKZaDS8/2c
ghdU/8nAsq1a7qY3qP6fgRFPT325S/sZMrByRsndc7ep/pcBl6L5B5R3Ep8s
A8Kxt7TXUr3VIgPyGrbxU2cSvywDcRHKy7aPJfwzUKV32rEon95/MpA1bYi4
ghazF5IB372HCkvoe8nJwM5d2tYpHwn/DEjJrQmY10fvsRlQXOefaEbvQ1kZ
OHK2Jda+jsm5GZCbuH/WjE+EfwZ2a/Q8KFtE79UZSB8hNcNOib03lWTA+K5m
SW0H4Z+BFUujH/QZEf4Z+Lftr6rDJXrPzcD87Res71gS/hn4FSY9UEffu8YM
bD57tLVDkt7/MiARbHthnQ29d2fgeN7lyll/mf2eDAhiSq6uUCL8M+H8ZWTi
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
mqFS/v8AE0YRdg==
          "]]}, {}}, {}},
      AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
      Axes->{True, True},
      AxesLabel->{None, None},
      AxesOrigin->{0, 0},
      DisplayFunction->Identity,
      Frame->{{True, True}, {True, True}},
      FrameLabel->{{
         FormBox[
         "\"\\!\\(\\*SuperscriptBox[\\(\[Delta]\\), \\(13\\)]\\)C\"", 
          TraditionalForm], None}, {
         FormBox["\"Time\"", TraditionalForm], None}},
      FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
      GridLines->{None, None},
      GridLinesStyle->Directive[
        GrayLevel[0.5, 0.4]],
      Method->{},
      PlotRange->{{0., 1257.}, {-28.260829609921704`, 0}},
      PlotRangeClipping->True,
      PlotRangePadding->{{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.02]}},
      Ticks->{Automatic, Automatic}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.646161781101145*^9, 3.646161866949799*^9}, {
   3.6461619202838717`*^9, 3.646161954945731*^9}, {3.646162044706922*^9, 
   3.646162098412566*^9}, {3.646162141426835*^9, 3.646162177798066*^9}, 
   3.646162388017359*^9, {3.646162418406723*^9, 3.646162445559908*^9}, {
   3.646162642153219*^9, 3.646162675601288*^9}, {3.6461627087833557`*^9, 
   3.646163072182681*^9}, {3.6461714302641573`*^9, 3.646171453631546*^9}, 
   3.646171539725943*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["Rdat"], "Input",
 CellChangeTimes->{{3.646162402695252*^9, 3.646162403838593*^9}}],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", 
          TemplateBox[{"1"},
           "OutputSizeLimit`Skeleton",
           DisplayFunction->(FrameBox[
             RowBox[{"\" \[CenterEllipsis]\"", #, "\"\[CenterEllipsis] \""}], 
             Background -> GrayLevel[0.75], 
             BaseStyle -> {
              "Deploy", FontColor -> GrayLevel[1], FontSize -> Smaller, 
               ShowStringCharacters -> False}, BaselinePosition -> Baseline, 
             ContentPadding -> False, FrameMargins -> 1, FrameStyle -> 
             GrayLevel[0.75], RoundingRadius -> 7]& )], "}"}],
         Short[#, 40]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{58., {2., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarCategory",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{51., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 78, 18961918476278637064, 40/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{56., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 78, 18961918476278637064, 40 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{42., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            Identity, 78, 18961918476278637064, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{73., {0., 8.}}],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "SuggestionsBarControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Evaluation"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    Background->RGBColor[0.9657, 0.9753, 0.9802],
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Out[78]]], "Output",
 CellChangeTimes->{3.646162404618054*^9}]
}, Open  ]]
},
WindowSize->{1436, 855},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 189, 3, 28, "Input"],
Cell[592, 18, 3911, 106, 114, "Input"],
Cell[4506, 126, 211, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[4742, 134, 1728, 48, 35, "Input"],
Cell[6473, 184, 5001, 149, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11511, 338, 5287, 144, 105, "Input"],
Cell[16801, 484, 5019, 146, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21857, 635, 979, 30, 28, "Input"],
Cell[22839, 667, 912, 28, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23788, 700, 289, 6, 28, "Input"],
Cell[24080, 708, 1529, 45, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25646, 758, 375, 7, 28, "Input"],
Cell[26024, 767, 986, 27, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27047, 799, 137, 1, 46, "Input"],
Cell[27187, 802, 1430, 44, 48, "Output"],
Cell[28620, 848, 792, 24, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29449, 877, 159, 3, 28, "Input"],
Cell[29611, 882, 2219, 68, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31867, 955, 330, 5, 28, "Input"],
Cell[32200, 962, 1038, 28, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33275, 995, 1591, 43, 80, "Input"],
Cell[34869, 1040, 1718, 50, 54, "Output"],
Cell[36590, 1092, 1485, 44, 54, "Output"],
Cell[38078, 1138, 110886, 1828, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149001, 2971, 1121, 29, 46, "Input"],
Cell[150125, 3002, 4302, 106, 60, "Output"],
Cell[154430, 3110, 71754, 1189, 216, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[226221, 4304, 630, 18, 28, "Input"],
Cell[226854, 4324, 963, 27, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[227854, 4356, 181, 3, 28, "Input"],
Cell[228038, 4361, 460, 12, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228535, 4378, 130, 1, 46, "Input"],
Cell[228668, 4381, 860, 27, 47, "Output"],
Cell[229531, 4410, 800, 25, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230368, 4440, 1323, 39, 126, "Input"],
Cell[231694, 4481, 14142, 244, 253, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245873, 4730, 2958, 86, 129, "Input"],
Cell[248834, 4818, 3990, 104, 97, "Output"],
Cell[252827, 4924, 3814, 107, 76, "Output"],
Cell[256644, 5033, 3225, 93, 62, "Output"],
Cell[259872, 5128, 345, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260254, 5138, 1646, 34, 46, "Input"],
Cell[261903, 5174, 13755, 245, 358, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[275695, 5424, 3612, 98, 226, "Input"],
Cell[279310, 5524, 13372, 358, 252, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[292719, 5887, 594, 15, 28, "Input"],
Cell[293316, 5904, 13945, 240, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[307298, 6149, 580, 16, 28, "Input"],
Cell[307881, 6167, 4473, 112, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[312391, 6284, 1175, 35, 63, "Input"],
Cell[313569, 6321, 1799, 56, 56, "Output"],
Cell[315371, 6379, 3199, 96, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[318607, 6480, 209, 3, 46, "Input"],
Cell[318819, 6485, 1961, 58, 56, "Output"],
Cell[320783, 6545, 3440, 108, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[324260, 6658, 3192, 95, 98, "Input"],
Cell[327455, 6755, 772, 25, 51, "Output"],
Cell[328230, 6782, 2069, 66, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[330336, 6853, 1517, 37, 80, "Input"],
Cell[331856, 6892, 2570, 49, 368, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334463, 6946, 977, 27, 63, "Input"],
Cell[335443, 6975, 2118, 42, 368, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[337598, 7022, 247, 8, 28, "Input"],
Cell[337848, 7032, 225, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338110, 7044, 408, 12, 35, "Input"],
Cell[338521, 7058, 368, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338926, 7075, 576, 19, 61, "Input"],
Cell[339505, 7096, 522, 19, 61, "Output"]
}, Open  ]],
Cell[340042, 7118, 110, 6, 87, "Text"],
Cell[340155, 7126, 1928, 59, 118, "Input"],
Cell[CellGroupData[{
Cell[342108, 7189, 2388, 58, 80, "Input"],
Cell[344499, 7249, 68626, 1377, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413162, 8631, 2792, 76, 129, "Input"],
Cell[415957, 8709, 21627, 381, 435, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[437621, 9095, 96, 1, 28, "Input"],
Cell[437720, 9098, 7646, 199, 90, "Output"]
}, Open  ]]
}
]
*)

