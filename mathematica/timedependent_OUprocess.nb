(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    937251,      17977]
NotebookOptionsPosition[    931482,      17785]
NotebookOutlinePosition[    931842,      17801]
CellTagsIndexPosition[    931799,      17798]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"Remove", "[", "\"\<Global`*\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.64044035569347*^9, 3.64044035595702*^9}, {
  3.640440500206583*^9, 3.6404405050637693`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TwoAxisPlot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"f_", ",", "g_"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x_", ",", "x1_", ",", "x2_"}], "}"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "fgraph", ",", "ggraph", ",", "frange", ",", "grange", ",", "fticks", 
      ",", "gticks"}], "}"}], ",", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"fgraph", ",", "ggraph"}], "}"}], "=", 
      RowBox[{"MapIndexed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Plot", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", "x1", ",", "x2"}], "}"}], ",", 
           RowBox[{"Axes", "\[Rule]", "True"}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", 
            RowBox[{
             RowBox[{"ColorData", "[", "97", "]"}], "[", 
             RowBox[{"#2", "[", 
              RowBox[{"[", "1", "]"}], "]"}], "]"}]}]}], "]"}], "&"}], ",", 
        RowBox[{"{", 
         RowBox[{"f", ",", "g"}], "}"}]}], "]"}]}], ";", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"frange", ",", "grange"}], "}"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"PlotRange", "/.", 
           RowBox[{"AbsoluteOptions", "[", 
            RowBox[{"#", ",", "PlotRange"}], "]"}]}], ")"}], "[", 
         RowBox[{"[", "2", "]"}], "]"}], "&"}], "/@", 
       RowBox[{"{", 
        RowBox[{"fgraph", ",", "ggraph"}], "}"}]}]}], ";", 
     RowBox[{"fticks", "=", 
      RowBox[{"N", "@", 
       RowBox[{"FindDivisions", "[", 
        RowBox[{"frange", ",", "5"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"gticks", "=", 
      RowBox[{"Quiet", "@", 
       RowBox[{"Transpose", "@", 
        RowBox[{"{", 
         RowBox[{"fticks", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"ToString", "[", 
             RowBox[{
              RowBox[{"NumberForm", "[", 
               RowBox[{"#", ",", "2"}], "]"}], ",", "StandardForm"}], "]"}], 
            "&"}], "/@", 
           RowBox[{"Rescale", "[", 
            RowBox[{"fticks", ",", "frange", ",", "grange"}], "]"}]}]}], 
         "}"}]}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Show", "[", 
      RowBox[{"fgraph", ",", 
       RowBox[{"ggraph", "/.", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"graph_", ",", "s___"}], "]"}], "\[RuleDelayed]", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"GeometricTransformation", "[", 
            RowBox[{"graph", ",", 
             RowBox[{"RescalingTransform", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", "grange"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", "1"}], "}"}], ",", "frange"}], "}"}]}], 
              "]"}]}], "]"}], ",", "s"}], "]"}]}]}], ",", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Frame", "\[Rule]", "True"}], ",", 
       RowBox[{"FrameStyle", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"ColorData", "[", "97", "]"}], "/@", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], ",", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
       RowBox[{"FrameTicks", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"fticks", ",", "gticks"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], "}"}]}]}], 
      "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6404405188697977`*^9, 3.6404405195202093`*^9}, {
  3.6404405652897863`*^9, 3.640440585156568*^9}}],

Cell["\<\
Define the expectation for a time-dependent Ornstein-Uhlenbeck process\
\>", "Text",
 CellChangeTimes->{{3.6403501864204693`*^9, 3.640350200178973*^9}, {
  3.640350953775303*^9, 3.640350954234728*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", " ", 
     RowBox[{
      RowBox[{"EX", "*", 
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], "*", "T"}], "]"}]}], "-", 
      RowBox[{"(", "X0", ")"}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "f"}], ")"}], "*", 
       RowBox[{"Integrate", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Mu]", "[", "t", "]"}], "*", 
          RowBox[{"Exp", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "f"}], ")"}], "*", "t"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}]}], ")"}], "2"], 
   " ", "\[Equal]", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", "f"}], ")"}], "^", "2"}], "*", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"2", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], "*", "t"}], "]"}], "*", 
       RowBox[{
        RowBox[{"\[Sigma]", "[", "t", "]"}], "^", "2"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.640350985416975*^9, 3.640351028634099*^9}, {
   3.64035109529416*^9, 3.640351229692012*^9}, 3.640351666385047*^9, {
   3.640351846808148*^9, 3.640351995120596*^9}, {3.640352113477374*^9, 
   3.640352116580511*^9}, {3.640352749168859*^9, 3.640352749784573*^9}, {
   3.640353345920516*^9, 3.640353350352303*^9}, {3.640353389774064*^9, 
   3.640353392181802*^9}, 3.6403536847004347`*^9, {3.640355883254798*^9, 
   3.640355883554941*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", 
    SuperscriptBox["EX", "2"]}], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", "X0"}], 
   "+", 
   SuperscriptBox["X0", "2"], "-", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "T"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
   RowBox[{"2", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", "f", " ", 
    
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "T"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
   RowBox[{"2", " ", "X0", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "T"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", 
   RowBox[{"2", " ", "f", " ", "X0", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "T"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       RowBox[{"\[Mu]", "[", "t", "]"}]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        RowBox[{"\[Mu]", "[", "t", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"], "-", 
   RowBox[{"2", " ", "f", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
         RowBox[{"\[Mu]", "[", "t", "]"}]}], 
        RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"]}], "+", 
   RowBox[{
    SuperscriptBox["f", "2"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
         RowBox[{"\[Mu]", "[", "t", "]"}]}], 
        RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"]}]}], "\[Equal]", 
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "T"], 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
      SuperscriptBox[
       RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}], "-", 
   RowBox[{"2", " ", "f", " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "T"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
   RowBox[{
    SuperscriptBox["f", "2"], " ", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "T"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}]}]}]}]], "Output",
 CellChangeTimes->{{3.6403512156566772`*^9, 3.6403512306941566`*^9}, 
   3.640351682062613*^9, 3.640351999979021*^9, 3.640352117541201*^9, 
   3.6403527507496557`*^9, 3.640353352951848*^9, 3.6403534008689423`*^9, 
   3.640353690049611*^9, 3.6403559086071997`*^9, 3.640438041389555*^9, 
   3.640440375039925*^9, 3.65081056224472*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ESquareXFull", "=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], 
       RowBox[{"\[DifferentialD]", "t"}]}]}], "-", 
     RowBox[{"2", " ", "f", " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], 
        RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
     RowBox[{
      SuperscriptBox["f", "2"], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"], 
        RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", 
        "X0"}], "+", 
       SuperscriptBox["X0", "2"], "-", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "T"], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}], 
          RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", "f", 
        " ", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "T"], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}], 
          RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
       RowBox[{"2", " ", "X0", " ", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "T"], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}], 
          RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", 
       RowBox[{"2", " ", "f", " ", "X0", " ", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "T"], 
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}], 
          RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SubsuperscriptBox["\[Integral]", "0", "T"], 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
            RowBox[{"\[Mu]", "[", "t", "]"}]}], 
           RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"], "-", 
       RowBox[{"2", " ", "f", " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", "0", "T"], 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
             RowBox[{"\[Mu]", "[", "t", "]"}]}], 
            RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"]}], "+", 
       RowBox[{
        SuperscriptBox["f", "2"], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SubsuperscriptBox["\[Integral]", "0", "T"], 
           RowBox[{
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
             RowBox[{"\[Mu]", "[", "t", "]"}]}], 
            RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"]}]}], ")"}]}], 
    ")"}], "/", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]]}]}]], "Input",
 CellChangeTimes->{{3.640352727734564*^9, 3.64035276223988*^9}, 
   3.640353385690261*^9, {3.640353416472117*^9, 3.640353499457231*^9}, {
   3.640354463749751*^9, 3.6403545291624527`*^9}, {3.6403559237606564`*^9, 
   3.640355941453431*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "2"}], " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", "X0"}], 
    "-", 
    SuperscriptBox["X0", "2"], "+", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        RowBox[{"\[Mu]", "[", "t", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", 
    RowBox[{"2", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "f"}], ")"}], " ", "T"}]], " ", "EX", " ", "f", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        RowBox[{"\[Mu]", "[", "t", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", 
    RowBox[{"2", " ", "X0", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        RowBox[{"\[Mu]", "[", "t", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
    RowBox[{"2", " ", "f", " ", "X0", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        RowBox[{"\[Mu]", "[", "t", "]"}]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}], "-", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
         RowBox[{"\[Mu]", "[", "t", "]"}]}], 
        RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"], "+", 
    RowBox[{"2", " ", "f", " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "T"], 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}]}], 
         RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"]}], "-", 
    RowBox[{
     SuperscriptBox["f", "2"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "T"], 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}]}], 
         RowBox[{"\[DifferentialD]", "t"}]}]}], ")"}], "2"]}], "+", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "T"], 
     RowBox[{
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
       SuperscriptBox[
        RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
      RowBox[{"\[DifferentialD]", "t"}]}]}], "-", 
    RowBox[{"2", " ", "f", " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}], "+", 
    RowBox[{
     SuperscriptBox["f", "2"], " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", 
          RowBox[{"(", 
           RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.640352734580675*^9, 3.640352763186661*^9}, {
   3.640353479927408*^9, 3.640353500395372*^9}, 3.6403536963034286`*^9, 
   3.640354532817504*^9, 3.640355952387203*^9, 3.640438041676475*^9, 
   3.640440375579248*^9, 3.650810562701275*^9, 3.65082380072018*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EXsol", " ", "=", "  ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", "X0", ")"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"1", "-", "f"}], ")"}]}], "*", "T"}], "]"}]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", "f"}], ")"}], "*", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"1", "-", "f"}], ")"}]}], "*", "T"}], "]"}], "*", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "f"}], ")"}], "*", "t"}], "]"}], "*", 
       RowBox[{"\[Mu]", "[", "t", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", "T"}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.640353705289662*^9, 3.640353721574069*^9}, {
  3.640354244693685*^9, 3.6403542530053587`*^9}, {3.64035579617514*^9, 
  3.640355796410225*^9}, {3.650823737629649*^9, 3.650823776119529*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "f"}], ")"}], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "T"], 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
      RowBox[{"\[Mu]", "[", "t", "]"}]}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}]}]], "Output",
 CellChangeTimes->{3.640353723120668*^9, 3.6403542546570683`*^9, 
  3.6403545418454647`*^9, 3.640355958581284*^9, 3.6404380417218943`*^9, 
  3.6404403756267853`*^9, 3.6508105627512217`*^9, 3.650823780331244*^9, 
  3.65082381057355*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ESquareX", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ESquareXFull", "/.", 
    RowBox[{"EX", " ", "\[Rule]", "EXsol"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640353506135201*^9, 3.640353536018524*^9}, {
  3.6403537123778133`*^9, 3.640353728018087*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"X0", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "T"], 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", "-", 
             RowBox[{"f", " ", "t"}]}]], " ", 
           RowBox[{"\[Mu]", "[", "t", "]"}]}], 
          RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}], "2"], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "t"}]], " ", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.640353523896617*^9, 3.640353536759391*^9}, 
   3.640353729199903*^9, 3.640354261383754*^9, 3.6403545422609797`*^9, 
   3.640355969787209*^9, 3.6404380419790487`*^9, 3.640440375886731*^9, 
   3.6508105629610243`*^9, 3.650823814751326*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"SquareEX", " ", "=", 
  RowBox[{"FullSimplify", "[", " ", 
   RowBox[{
    RowBox[{"(", " ", "EXsol", ")"}], "^", "2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.640351322159409*^9, 3.640351326904264*^9}, {
  3.640351362275517*^9, 3.640351376069869*^9}, {3.640353549642325*^9, 
  3.640353574933702*^9}, {3.6403537435282087`*^9, 3.640353745062092*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"X0", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", "-", 
           RowBox[{"f", " ", "t"}]}]], " ", 
         RowBox[{"\[Mu]", "[", "t", "]"}]}], 
        RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{{3.640351364191698*^9, 3.640351376450695*^9}, 
   3.640351691344843*^9, {3.640353566713874*^9, 3.640353575261866*^9}, 
   3.640353745823534*^9, 3.640354261657751*^9, 3.6403545423120203`*^9, 
   3.640355343601145*^9, 3.640355977562107*^9, 3.64043804203548*^9, 
   3.640440375926632*^9, 3.650810562984065*^9, 3.6508238178723803`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"ESquareX", "\[IndentingNewLine]", "SquareEX"}], "Input",
 CellChangeTimes->{{3.640355416076171*^9, 3.640355422415276*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"X0", "-", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
        RowBox[{
         SubsuperscriptBox["\[Integral]", "0", "T"], 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"t", "-", 
             RowBox[{"f", " ", "t"}]}]], " ", 
           RowBox[{"\[Mu]", "[", "t", "]"}]}], 
          RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}], "2"], "+", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "T"], 
      RowBox[{
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "t"}]], " ", 
        SuperscriptBox[
         RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
       RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}]}]], "Output",
 CellChangeTimes->{3.640355423017909*^9, 3.640355983943321*^9, 
  3.640438042193325*^9, 3.640440375951709*^9, 3.650810563025908*^9, 
  3.65082382023726*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"X0", "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"t", "-", 
           RowBox[{"f", " ", "t"}]}]], " ", 
         RowBox[{"\[Mu]", "[", "t", "]"}]}], 
        RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.640355423017909*^9, 3.640355983943321*^9, 
  3.640438042193325*^9, 3.640440375951709*^9, 3.650810563025908*^9, 
  3.650823820242119*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VarXFull", "=", 
  RowBox[{"ESquareX", "-", "SquareEX"}]}]], "Input",
 CellChangeTimes->{{3.640355432997554*^9, 3.640355465526066*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]]}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"X0", "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
       RowBox[{
        SubsuperscriptBox["\[Integral]", "0", "T"], 
        RowBox[{
         RowBox[{
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"t", "-", 
            RowBox[{"f", " ", "t"}]}]], " ", 
          RowBox[{"\[Mu]", "[", "t", "]"}]}], 
         RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}], "2"]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"X0", "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
         RowBox[{
          SubsuperscriptBox["\[Integral]", "0", "T"], 
          RowBox[{
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"t", "-", 
              RowBox[{"f", " ", "t"}]}]], " ", 
            RowBox[{"\[Mu]", "[", "t", "]"}]}], 
           RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}], "2"], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
      RowBox[{
       SubsuperscriptBox["\[Integral]", "0", "T"], 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "t"}]], " ", 
         SuperscriptBox[
          RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
        RowBox[{"\[DifferentialD]", "t"}]}]}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{{3.640355443661643*^9, 3.64035546596332*^9}, 
   3.6403559983626833`*^9, 3.640438042228874*^9, 3.640440375995525*^9, 
   3.650810563079802*^9, 3.6508238248487787`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VarX", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", "VarXFull", "]"}]}]], "Input",
 CellChangeTimes->{{3.640351380596401*^9, 3.640351413804324*^9}, {
  3.6403515017356577`*^9, 3.6403515052455807`*^9}, {3.6403535854764547`*^9, 
  3.6403535941053867`*^9}, {3.6403554704227657`*^9, 3.6403554835032797`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "T"], 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "t"}]], " ", 
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
    RowBox[{"\[DifferentialD]", "t"}]}]}]}]], "Output",
 CellChangeTimes->{{3.640351397236834*^9, 3.6403514169077787`*^9}, 
   3.64035150591124*^9, 3.640351693864361*^9, 3.640353598683385*^9, 
   3.6403537546276903`*^9, 3.640354261773975*^9, 3.640354542341868*^9, 
   3.640355349397893*^9, {3.64035547224566*^9, 3.640355484222671*^9}, 
   3.640356004322209*^9, 3.640438042272547*^9, 3.640440376045315*^9, 
   3.650810563130055*^9, 3.6508238271886377`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VarXv", " ", "=", " ", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"2", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "T"], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "t"}]], " ", 
     RowBox[{"v", "[", "t", "]"}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}]}]], "Input",
 CellChangeTimes->{{3.65082561457097*^9, 3.650825625421557*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "T"], 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "t"}]], " ", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "[", "t", "]"}]}], 
    
    RowBox[{"\[DifferentialD]", "t"}]}]}]}]], "Output",
 CellChangeTimes->{3.650825631911296*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EXspecific", " ", "=", " ", 
  RowBox[{"EXsol", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", "5"}], "+", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"VarXSpecific", "=", 
  RowBox[{"VarX", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", "5"}], "+", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"Sin", "[", "t", "]"}]}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"EXspecific", ",", "VarXSpecific"}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"f", "\[Rule]", "0.9"}], ",", 
      RowBox[{"X0", "\[Rule]", 
       RowBox[{"-", "10"}]}], ",", 
      RowBox[{"\[Mu]0", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "0", ",", "200"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.640353643309216*^9, 3.640353644166993*^9}, {
   3.64035375962079*^9, 3.640354198092341*^9}, {3.6403542865675993`*^9, 
   3.640354312871107*^9}, 3.64035438711215*^9, {3.640354549748043*^9, 
   3.640354662935585*^9}, {3.640355506737121*^9, 3.64035550747943*^9}, {
   3.640356073139987*^9, 3.640356076704564*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "f"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     FractionBox[
      RowBox[{"5", "-", 
       RowBox[{"5", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"T", "-", 
          RowBox[{"f", " ", "T"}]}]]}]}], 
      RowBox[{"1", "-", "f"}]], "+", 
     FractionBox[
      RowBox[{"1", "-", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"T", "-", 
          RowBox[{"f", " ", "T"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", "T", "]"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
           RowBox[{"Sin", "[", "T", "]"}]}]}], ")"}]}]}], 
      RowBox[{"2", "+", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "2"}], "+", "f"}], ")"}], " ", "f"}]}]]}], 
    ")"}]}]}]], "Output",
 CellChangeTimes->{{3.640353874204624*^9, 3.640353951423994*^9}, 
   3.6403540046668863`*^9, {3.6403540392191067`*^9, 3.640354098865287*^9}, 
   3.640354200697926*^9, 3.6403542633566837`*^9, {3.640354295182415*^9, 
   3.640354315382647*^9}, 3.64035438902038*^9, {3.6403545440096188`*^9, 
   3.640354603958631*^9}, 3.640355511387169*^9, {3.64035605579917*^9, 
   3.6403560788813066`*^9}, 3.640438044214923*^9, 3.640440378518671*^9, 
   3.650810645664843*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "f"}], ")"}], " ", "f"}], "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "T"}], "]"}]}], "-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "T"}], "]"}]}]}], ")"}]}], 
  RowBox[{"4", " ", 
   RowBox[{"(", 
    RowBox[{"2", "+", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "+", "f"}], ")"}], " ", "f"}]}], 
    ")"}]}]]], "Output",
 CellChangeTimes->{{3.640353874204624*^9, 3.640353951423994*^9}, 
   3.6403540046668863`*^9, {3.6403540392191067`*^9, 3.640354098865287*^9}, 
   3.640354200697926*^9, 3.6403542633566837`*^9, {3.640354295182415*^9, 
   3.640354315382647*^9}, 3.64035438902038*^9, {3.6403545440096188`*^9, 
   3.640354603958631*^9}, 3.640355511387169*^9, {3.64035605579917*^9, 
   3.6403560788813066`*^9}, 3.640438044214923*^9, 3.640440378518671*^9, 
   3.650810646372716*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
j2Zg3sUcMlNRk3MB3RtZz3YYESgiSFQnTtEFCM3D5wPwfLzPYwNaVLGOZnrn
g+fjALtRKzYtF8gVuv+DGdffLqN6irOeC7xt4j3gieuTpnrRPd/IBRCz1B5H
XL8UyUjfT6YuwLnRbvoJ17c1r2OIvJULRK4KLm3H9W/CphB+yM4FEnQVO4cw
H/Q3mGMeU1xApZ5coIL5oTE/dZzB1QVEE6qqd2C+KE42p9l6uECS+Y2+XMwf
maGi89m7XGDPAKfDVcw/0Y74S6N+LnBTw2RJBfOK/6lHkXgQ1ueteZ2wJu5q
Vuzf5wJDLCXZf/HzPnRBj4oOuMCGxHKsJtaVlItdryNdILgxWHQTXn+puHVi
S7QLbAl6OOyD+Ws0v7ioF+cCkvr0oU6Yz2eMxbeEH3eBvRLtgm8xvwcuUPnL
kl1AXDDi+h/Md+GPJ3YOp7nARIa9Qh3m/z7VGmBPd4HvH0g2XNgf1yZNOEOm
C3SpzNFx4f5B95ozOCrHBbKPbWlowP3l4qED58YK8O81alUE7kcTLYXF2665
gM/Q+Nl+7OfkiK77ZtddIErEpNhem0DogfzI7Tsu8P4pZXOOAoHYNnvNTdS4
QMjxfJNQKfx9XM/QketcQKDv8gkBEQJ9XZ6ROvbMBb7MXmcQwPnErVV+yL4H
x3P1YUbIbxLyS3uTeuK1C8xfCx1uwv349hBjXu0Qfj9+r7oCzlfjmD1IcMIF
jkke4nLC+Zz+Iuu10yTOD3W+Jj6c74O8zdMnZ/D3d8p5xdmP+32DyNbvP/F5
jKS8r+J6echCERFbdoFn/HeOmzbhevM8rkb7g++/bU1eCc9TdpVVFmfWcX63
eK0GPSShS6vvPJ7Ru8J+/63KP3F9frTZGraw2RVeqhyt78H1q5CvnyjF6gom
pkiYFfu56K/7s7E3h3veD8+V4vpv1ssvz+ByhS/ZlKYizIet6R0NzdyuwFsX
w74J88N97E/nCr8ryDGFUbowX0oUZCfkhF1hwe/cKgPmz1y8++JucVcItq2i
v4F5pd2VxpQt7QpOfXOfHuVjvyP4kK9d3hUq6rdeN8C6K2xa4a8SPm+dS5cy
1rzPyKCk7grtf3+F5GC9h8PceY+2K6g/3Mocgter2h0VdEnfFaYvMTdWYv79
rio9+gpc4XDPY2kvfB7Tf/3p/8xcgT5i2j8a8zjDcVOxmrUrcBwx41/HvB4u
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
SWigr0A+xursO8Z4zQPug1nFdxgvM908Ke83PFATXnzIFPXfkO5AssdbHiw/
sFVqHeq/ZL0lOjve8WD0i/iTP5iPrcs8ipx6kQfOvOcBmK98/RfPN33gwY41
A/0XMb+05aIeNh9xvQEHMhxXk4mFBtYDawd5sN72h3Abno/7DYtnTIZ5sKkp
3tddi0ysXnHNQOM7D3RKdkT34f4753O0hjTFg3v+8p5luD+HzjFdRH9i/aaZ
vIz9RyKuj+oGDf3hwcorAb1Gk1jviyXmvZ1Bf7IntWVHSYSzw9jlF39xv82m
O8z/jPrndkllgaAvFD+d+L6uG/Xj28uO6cK+MLefdvF0B/JE/Mj7C6K+oLZa
dOs/1Be7d9kIB4v7gnSz1cNg5GftZa0knoQvdCRl7T+G/FxcP1+XIuUL6sRF
8jPkZ7N241YrGV+4mHz7+ZJi1Gc7770zIPmC6EcNSZO7qGdjEgNU5XwhJWb+
5UTUS73FIQLSCr4QZCb1elMuiTAb8EwQVPKFeftuDm3JJhHxsuu1JpV94XOc
fHoW/3siNuplHxf7AjFUE74TeWR7QMT+taov6Ji/vM1EXqWmf+6qV/OFxv80
RZ/z3xdrer7ngYYvbDyWLR6PvHP9d+fvLS1fcAl83F+CPMw3unD+uo4v5An5
elugLUoPUj+n5ws3pIzHlqBNP+tRHKHvC3FHBe+x0C6vstx0wMAXxt98Z8/H
8WS/LulkGfnCq5PReyRwvr0qgrvdVvjCmjurWv1R79Zt/Ti9aZUvWH/mbjFE
fakWVn/GzNQXMtdn69ujXg7Lu6W6bI0vmArpH65Cnra9OVuobI7+aD0cOIE8
NRA7sEHS0heWbv5WdxN5Gmvm1v7XCvMVdsZYCXlqeUn5d5+1L7Rp+dkNlCCf
n/491WrjC66MmWTTB9g/T/WpPNnoCwYVMU8aqklExo6b1jc3+8KD3VWKufWo
v2VMT/g7+0Jph4sG/zxlgYKSz3ZfcD7Stz9tgERU7Zu+5bLDFzbHG51O+UIi
9jUSjSYevmDbcdi37QeeN3GO8tN0X7j9Wj8veiGZWFG5IneE4Qs7FmcKXcf+
5tQwybKH5QsFbzsG05Wx/9nylkbw0P8VE7epqA8uhVaP39vlC7NTxUeEUD9M
3Ew/luXnC493M2uOrSQTWfN8s2MDfKGQLTpv3Op/FZ15PFVbFMe9lG6iyCn3
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
eu/ehXogM8ujf3SUgmFii9tqzJ/+B9GS+DY=
     "]], LineBox[CompressedData["
1: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
nd06KTg/SMVvVlxPh+zMuG8PfEg0FnzrqMxGvH77o2XuOjifNtffl7Cnw+0f
hYe72oRo/8bxnklHOrTN1Nl7MEWIhhc4UPrd6HDyZc98zb8CZBqx59RXCh12
xhj8SMkRoOAvSY9a6XQI+9E88Br7zUD+52W1HDx26vmzvZSPVqjNYlf50kFI
rd1iEoJ5Jdbo4qOddAg5c6Ml3oiPbv5wf1G4hw6bL2UXH+ojUK/HoX93gulA
cBd1S9wj0PLSK2ZZ++mgqDYWPPcYgXbqVvlfCacD2XZpzNWTQJln+kTEYTrs
5YnfOLiaQF9H5evPR9NBbK5SudhiAh0sPi2/P44OXemeI5ELCDQrWsKDfpIO
Ro1X/v3v5yn2Ry5an6ED0+B6/SoFAulLjzVoJdJhKuPJn724HxS+CVKUvESH
h7I6LZPrCLQp5Tulh6DDW/tzV48ycb7w5iTXkHR4PREkOBSP16fd3Jh3hQ5x
YRIznYuw/3/bppxylQ6ZtOuh64YIdPLWK1pEFq6vq3F2oAkf3VhT+t7mLh1m
uzta1Jfx0bp/FouW3qPDwcKhtr45AvSq4jZd+gEdMtKT3uvTBajX5UpzwyM6
JK598oo6JkARCotUiyroUJwzSzhqK0RzmxMZoio6rMjKXT3/vBAJU+eQ0a/o
8IVy5MqpJiEy9I1p8a3F9dVbfoqqgv16+V81p3o67FA+zTxII5HzYChzRRMd
Zr55PCRxlkSf7veJFnykg2SJw4RZKc6nETtaf7XSwSFhqawr9ttJ1KbxsYMO
M3SFThUzReiMpCf70Ve8X/lr49Wxv6tX16Vm9NChxiZaQgb7++1Ex8/x/XTw
01fP2I75ZQOtfPHuITpsiBHFqmqKUK3aOs7WX3h+0eAqZ1kRYnfkp5mP06HR
xsLBcoREA5mGHQv/0eGY485tG9+QKGrPNe3JGV5wsDb6/I9rJJpnpsFrl/CC
2FNBnz/uw/3gd3LGMykvWH8z2PvNGhKtLJvXmS3jBe5lrVFZuL89iTmx5Kyc
F4iVGXa75+M84zjDd5+iFzAmDj39sFOIghuGutaqewFt7YqaphoBmiEI0NPU
8oJw7wRdQZQAJbI7d4jpeoHCL0eifKUAaekyM78t9QLjLHeniC98lNfz7tsr
Qy/Mw3MOfCcwr951WXp3pRfwl65RXbKNj+r3V/lfNPeCvN25DZbzsd+vQ9lh
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
IA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 200}, {-9.999997959183258, 0.027487580128577487`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.640353874204624*^9, 3.640353951423994*^9}, 
   3.6403540046668863`*^9, {3.6403540392191067`*^9, 3.640354098865287*^9}, 
   3.640354200697926*^9, 3.6403542633566837`*^9, {3.640354295182415*^9, 
   3.640354315382647*^9}, 3.64035438902038*^9, {3.6403545440096188`*^9, 
   3.640354603958631*^9}, 3.640355511387169*^9, {3.64035605579917*^9, 
   3.6403560788813066`*^9}, 3.640438044214923*^9, 3.640440378518671*^9, 
   3.650810646833274*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ExpVar", " ", "=", " ", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"EXspecific", " ", "=", " ", "EXsol"}], ",", 
     RowBox[{"VarXSpecific", "=", "VarXFull"}]}], "}"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"2", "+", 
       RowBox[{"2", "*", 
        RowBox[{"Sin", "[", "t", "]"}]}]}]}], ",", 
     RowBox[{"f", "\[Rule]", "0.99"}], ",", 
     RowBox[{"X0", "\[Rule]", 
      RowBox[{"-", "10"}]}], ",", 
     RowBox[{"\[Mu]0", "\[Rule]", "0.5"}]}], "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{"ExpVar", ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "1000", ",", "1100"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.6403546906355352`*^9, 3.6403546988689117`*^9}, {
  3.640354738222794*^9, 3.640354803666709*^9}, {3.640356128176557*^9, 
  3.640356158291285*^9}, {3.640356215523508*^9, 3.640356247900648*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "10"}], " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.010000000000000009`"}], " ", "T"}]]}], "+", 
    RowBox[{"0.010000000000000009`", " ", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.010000000000000009`"}], " ", "T"}]], " ", 
     RowBox[{"(", 
      RowBox[{"100.99990000999891`", "\[VeryThinSpace]", "-", 
       RowBox[{"99.99999999999991`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"0.010000000000000009`", " ", "T"}]]}], "+", 
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"0.010000000000000009`", " ", "T"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.9999000099990001`"}], " ", 
           RowBox[{"Cos", "[", "T", "]"}]}], "+", 
          RowBox[{"0.009999000099990009`", " ", 
           RowBox[{"Sin", "[", "T", "]"}]}]}], ")"}]}]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "0.020000000000000018`"}], " ", "T"}]]}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "10"}], "+", 
        RowBox[{"0.010000000000000009`", " ", 
         RowBox[{"(", 
          RowBox[{"100.99990000999891`", "\[VeryThinSpace]", "-", 
           RowBox[{"99.99999999999991`", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"0.010000000000000009`", " ", "T"}]]}], "+", 
           RowBox[{
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"0.010000000000000009`", " ", "T"}]], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "0.9999000099990001`"}], " ", 
               RowBox[{"Cos", "[", "T", "]"}]}], "+", 
              RowBox[{"0.009999000099990009`", " ", 
               RowBox[{"Sin", "[", "T", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
       ")"}], "2"]}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "0.020000000000000018`"}], " ", "T"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "10"}], "+", 
          RowBox[{"0.010000000000000009`", " ", 
           RowBox[{"(", 
            RowBox[{"100.99990000999891`", "\[VeryThinSpace]", "-", 
             RowBox[{"99.99999999999991`", " ", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"0.010000000000000009`", " ", "T"}]]}], "+", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"0.010000000000000009`", " ", "T"}]], " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "0.9999000099990001`"}], " ", 
                 RowBox[{"Cos", "[", "T", "]"}]}], "+", 
                RowBox[{"0.009999000099990009`", " ", 
                 RowBox[{"Sin", "[", "T", "]"}]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}], "2"], "+", 
       RowBox[{"0.0004000000000000007`", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "72.9982999301029`"}], "+", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"0.020000000000000018`", " ", "T"}]], " ", 
           RowBox[{"(", 
            RowBox[{"74.99999999999994`", "\[VeryThinSpace]", "-", 
             RowBox[{"1.9992003198720512`", " ", 
              RowBox[{"Cos", "[", "T", "]"}]}], "-", 
             RowBox[{"0.0024997500249975026`", " ", 
              RowBox[{"Cos", "[", 
               RowBox[{"2.`", " ", "T"}], "]"}]}], "+", 
             RowBox[{"0.03998400639744106`", " ", 
              RowBox[{"Sin", "[", "T", "]"}]}], "-", 
             RowBox[{"0.24997500249975002`", " ", 
              RowBox[{"Sin", "[", 
               RowBox[{"2.`", " ", "T"}], "]"}]}]}], ")"}]}]}], ")"}]}]}], 
      ")"}]}]}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.64035467765793*^9, {3.64035473518906*^9, 3.640354804572804*^9}, 
   3.6403560919266872`*^9, {3.640356132018661*^9, 3.640356159065797*^9}, {
   3.640356218278343*^9, 3.640356248711719*^9}, 3.640438046074416*^9, 
   3.6404403804576073`*^9, 3.650810662127565*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
YZs=
     "]]}, 
   {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
7AQLDqko9iL/3ut4ZHiUsuPLwV7kZyObWrWrlO2y26ZBH5WVqoZGKItbREj2
wR9xL3SqHsXxfc55P4Mejn4ue8ahvO1+Pd2PDbIvuukF5vrtEIyjv/eszC+L
oex7dkEo9GWd6tHsU7T9U59x9P3k3di06Ac0LrpMRgJ6ZNiXENRD45eCFRZB
r4odD26SzKHvqy7eYqBvitX7LHVyqP9UzLcDJ6rv0ltD+bjKLOo3RxK3q4ZQ
Xld4IQIcNLBlQiaYxahEDoPb/vP6dZnGl1WevIvx19527mii8cCTM5tw/BrN
9fV/6fGiE+4vwnz101Zfm5ZL16d75Rvo+6nfK08tA3Odnsyn5zvVfXm6ey6t
h8ObJaGHh+4tiTxA45ok5ijWa0hb378wl+6/x5Ag6OG2LO0NtbT9kxdf0+D3
343MNvtM42ZzbMd+5ZPbj5SUtfLA8zbI3sD101s0RdQOzMnNkJ4I/SvKkxwI
ovxN/f0J+MlDW8ceXqQse2nhSdwvQw1/Lr8AcwNi30tPRb22eODELzpe88yr
11UYslrs054lx8BWCb5NmgwRBL3zdTlGr0+2hNkChix81bQ2ksaXj+3/bIB6
7GTd3BoaT/a83WzOkDdm519bHwdbrZgp6sWQLZF7jf/Lp3r9jlWBevR57+sP
4ZT3rW+9f4Yhps6LU3Ly6f7FxIttFQyZsvhnRxOYfUfAyNXi+fselLyBQXtt
6XfzP0GvPZ4Y7qJ8ul9Gpo8hGfVa7VkM/V7OUev9II53usvgJeWmZeoG0Msp
vl7vHXj0/dDkN9tpPf1ckBAKZv+yq/bUhP4sn6GfwaPfW+/zmruAR26qth56
Bm6bNxyna8IjmoeXLBqg/St3Jwegfs8Yznkry0f/yrzNoVbwl83r9dby6X79
up52+MvnlhWtwWCB2OnxK+AvTS9Pjk8D8yvq3wS6YT7pT988pTxjpsRE+MtI
lk7cNz59327btA/62RWUrDvpBI4/fbzDOfiRm7bWsavB/DmHr61D/p17rXhB
0Am6v79Mtwb5OVNTtOXwCfq91YLN35C//2X7xJwFcxUNh14jv28VuaPzhPZ/
Kn/qAPL/i9CZr3tp/zpN6076e9eOqIOSBTifTx0dYvBfpWveac+nLMzJ6KT7
s7dMmm0L6PdPynnRdL9T+1h0ALjtwpYN1G/2HPs7P4ny+q0rBqFfjhOcmsrA
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
WHd2YX1irWWW0H5u7qDFRSxvP6plAL/vf8ljDHg=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{1000., 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{343.890625, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{1000, 1100}, {-1.0103865509568497`, 0.030825853232095968`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.64035467765793*^9, {3.64035473518906*^9, 3.640354804572804*^9}, 
   3.6403560919266872`*^9, {3.640356132018661*^9, 3.640356159065797*^9}, {
   3.640356218278343*^9, 3.640356248711719*^9}, 3.640438046074416*^9, 
   3.6404403804576073`*^9, 3.650810662208156*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"EXsol", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"2", "*", 
       RowBox[{"Sin", "[", "t", "]"}]}]}], ",", 
     RowBox[{"f", "\[Rule]", "0.5"}], ",", 
     RowBox[{"X0", "\[Rule]", 
      RowBox[{"-", "10"}]}], ",", 
     RowBox[{"\[Mu]0", "\[Rule]", "0.5"}]}], "}"}]}]}]], "Input",
 CellChangeTimes->{3.640355007679688*^9, 3.640355164636673*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "10"}], " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.5`"}], " ", "T"}]]}], "+", 
  RowBox[{"0.5`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.5`"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{"2.8000000000000003`", "\[VeryThinSpace]", "-", 
     RowBox[{"2.`", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"0.5`", " ", "T"}]]}], "+", 
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"0.5`", " ", "T"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "0.8000000000000002`"}], " ", 
         RowBox[{"Cos", "[", "T", "]"}]}], "+", 
        RowBox[{"0.4000000000000001`", " ", 
         RowBox[{"Sin", "[", "T", "]"}]}]}], ")"}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.640355009350977*^9, 3.6403551650236692`*^9, 
  3.640438046263968*^9, 3.640440380658553*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", "%", "]"}]], "Input",
 CellChangeTimes->{{3.6403550149067583`*^9, 3.64035501711982*^9}, {
  3.640355118056534*^9, 3.640355120679105*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1.`"}], "-", 
  RowBox[{"8.6`", " ", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "0.5`"}], " ", "T"}]]}], "-", 
  RowBox[{"0.4000000000000001`", " ", 
   RowBox[{"Cos", "[", "T", "]"}]}], "+", 
  RowBox[{"0.20000000000000004`", " ", 
   RowBox[{"Sin", "[", "T", "]"}]}]}]], "Output",
 CellChangeTimes->{3.640355121305162*^9, 3.640355168731557*^9, 
  3.640438046395708*^9, 3.640440380825274*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{"EXsol", "\[IndentingNewLine]", "VarX"}], "Input",
 CellChangeTimes->{{3.640366313170547*^9, 3.640366324824087*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "f"}], ")"}], " ", 
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "T"], 
    RowBox[{
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "-", "f"}], ")"}], " ", "t"}]], " ", 
      RowBox[{"\[Mu]", "[", "t", "]"}]}], 
     RowBox[{"\[DifferentialD]", "t"}]}]}]}]}]], "Output",
 CellChangeTimes->{{3.64036631439857*^9, 3.640366325869956*^9}, 
   3.64043804641751*^9, 3.6404403808523073`*^9}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
  RowBox[{
   SubsuperscriptBox["\[Integral]", "0", "T"], 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "t"}]], " ", 
     SuperscriptBox[
      RowBox[{"\[Sigma]", "[", "t", "]"}], "2"]}], 
    RowBox[{"\[DifferentialD]", "t"}]}]}]}]], "Output",
 CellChangeTimes->{{3.64036631439857*^9, 3.640366325869956*^9}, 
   3.64043804641751*^9, 3.640440380890766*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a1", "+", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", "b1"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a1", "\[Rule]", "0.5"}], ",", 
        RowBox[{"b1", "\[Rule]", "1"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "1"}], ",", "6"}], "}"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"a1", "+", 
       FractionBox["1", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "k", "*", 
           RowBox[{"(", 
            RowBox[{"t", "-", "b1"}], ")"}]}], "]"}]}]]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"k", "\[Rule]", "2"}], ",", 
        RowBox[{"a1", "\[Rule]", "0.5"}], ",", 
        RowBox[{"b1", "\[Rule]", "1"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", "1"}], ",", "6"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.640440080744582*^9, 3.640440116330461*^9}, {
  3.640441089364717*^9, 3.6404410896787357`*^9}, {3.640448428475284*^9, 
  3.640448587907173*^9}}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1:eJxFz2tMknEUBvC3V4lS8ULaa1AQ6dTK6SpsrplgtMKlLm8zvLRGUKMPkmlk
I506x4hYE42ZfpCWuqbVJtpFY5Woa83mAl1YmJbmWEuZQYUoE7osz/9sz579
Pj07LKE0R4xjGJb2J3+bNZ3Z5/MtvcT+3WeO5bnJyh6zg1VtufiF1gXw4bfS
gRiLDawf+WAaFM6BY2leriTwI7j6+uWeX03j4B7/MOPVa8Pg+rl40cVbYvBs
Nl4ilQ1x1h29K7Fq2mcGj6T0yGdqp8AO22gxdd8cWFNcNzylsoG/CqOGcngL
4F6/TA3zih1c1SE7s9i9BA69EdfKMCPfLbNOnFxGlvUK3GzS9/92c2jxrxTG
YOQXnfsjsiKRzzJ17VYWsouUPR3ER1Yu4gSnFPnhwDlV+zPkccXoGpnsAG9n
Nc6bdMhig+BNS7ITnEK37tGKfoDD5YWqhoafYOEpdkvkoAsc6MUrlhkr4Dxj
d9v5fA/YnXFcm2BYAzcSXwrmAzDuuiuJEMpq1AawWp4UZ8jDwdJS/sLRMj9w
szqDm6z0By8Gn/BYnpDAYTsPnk41bwSLtPTYbL9NYE+Ss3YscTNYKH5cT+UH
gF3uS3a8MhBcSN/hNTQFgXFJ/52ZLgr4PS2r68FkMLi6yCTgOULAu2ti+o9o
QtH+tiLiNTMM/Zeu5NTdR17t7qVReVSwPXciXWFCXk5w7DVJtoDbdeTJLCwc
/LQg3KJXI8+mMZTfoiPA5eWMm+Q+5HuHiBJB6law8wDlU8075M6KlUdqIQGO
vq3PP6ZH7jBIXD4f8m+oDkLb
      "]]}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
Oevxz/8DIB8sfA==
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.45},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{-1, 6}, {0.5, 1.5}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.640448485549535*^9, 3.640448520099327*^9}, {
  3.640448555179368*^9, 3.640448588624199*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EXHeavy", " ", "=", " ", 
  RowBox[{"EXsol", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a1", "+", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", "b1"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a2", "+", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", "b2"}], "]"}]}]}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"VarXHeavy", "=", 
  RowBox[{"VarX", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a1", "+", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", "b1"}], "]"}]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a2", "+", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"t", "-", "b2"}], "]"}]}]}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"EXLogistic", " ", "=", " ", 
  RowBox[{"EXsol", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a1", "+", 
       FractionBox["1", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "k", "*", 
           RowBox[{"(", 
            RowBox[{"t", "-", "b1"}], ")"}]}], "]"}]}]]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a2", "+", 
       FractionBox["1", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "k", "*", 
           RowBox[{"(", 
            RowBox[{"t", "-", "b2"}], ")"}]}], "]"}]}]]}]}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"VarXLogistic", "=", 
  RowBox[{"VarX", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a1", "+", 
       FractionBox["1", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "k", "*", 
           RowBox[{"(", 
            RowBox[{"t", "-", "b1"}], ")"}]}], "]"}]}]]}]}], ",", 
     RowBox[{
      RowBox[{"\[Sigma]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a2", "+", 
       FractionBox["1", 
        RowBox[{"1", "+", 
         RowBox[{"Exp", "[", 
          RowBox[{
           RowBox[{"-", "2"}], "*", "k", "*", 
           RowBox[{"(", 
            RowBox[{"t", "-", "b2"}], ")"}]}], "]"}]}]]}]}]}], 
    "}"}]}]}]}], "Input",
 CellChangeTimes->{{3.6404390928289824`*^9, 3.640439169462989*^9}, {
   3.640439213779895*^9, 3.6404392185505466`*^9}, {3.640439677497706*^9, 
   3.640439713857039*^9}, {3.640439750017734*^9, 3.640439827701027*^9}, {
   3.640440032214239*^9, 3.640440036013897*^9}, 3.6404401230359707`*^9, {
   3.640440155067474*^9, 3.640440171264535*^9}, {3.64044860909046*^9, 
   3.640448650839891*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "f"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"a1", "-", 
          RowBox[{"a1", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"T", "-", 
             RowBox[{"f", " ", "T"}]}]]}]}], 
         RowBox[{"1", "-", "f"}]]}], "+", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}]], 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "f"}], " ", 
           RowBox[{"(", 
            RowBox[{"b1", "+", "T"}], ")"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{
                 RowBox[{"b1", " ", "f"}], "+", "T"}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]]}], ")"}]}], " ", 
            RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
            RowBox[{"HeavisideTheta", "[", 
             RowBox[{
              RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"HeavisideTheta", "[", 
             RowBox[{"-", "b1"}], "]"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"f", " ", 
                   RowBox[{"(", 
                    RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"b1", "+", 
                   RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
               RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{
                 RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"HeavisideTheta", "[", 
                RowBox[{"-", "T"}], "]"}], " ", 
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"f", " ", 
                   RowBox[{"(", 
                    RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"b1", "+", 
                   RowBox[{"f", " ", "T"}]}]], "+", 
                 RowBox[{
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"b1", "+", 
                    RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
                  RowBox[{"HeavisideTheta", "[", 
                   RowBox[{
                    RowBox[{"-", "b1"}], "+", "T"}], "]"}]}]}], ")"}]}]}], 
             ")"}]}]}], ")"}]}]}]}], ")"}]}]}], ",", 
   RowBox[{"T", "\[Element]", "Reals"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6404392227306147`*^9, 3.640439691800839*^9, {3.640439766689419*^9, 
   3.6404397786056433`*^9}, {3.640439808853301*^9, 3.640439831076838*^9}, 
   3.640440047236329*^9, 3.64044013217498*^9, 3.6404401803786507`*^9, 
   3.640440388089737*^9, 3.640442664796854*^9, 3.640448667074944*^9}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", "b2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["a2", "2"], " ", 
       RowBox[{"(", 
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", "b2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}]}]], "-", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"b2", "-", "T"}], ")"}]}]]}], ")"}]}], "-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "a2"}]}], ")"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
           RowBox[{"(", 
            RowBox[{"b2", "-", "T"}], ")"}]}]]}], ")"}], " ", 
       RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{
         RowBox[{"-", "b2"}], "+", "T"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"2", " ", "a2"}]}], ")"}], " ", 
       RowBox[{"HeavisideTheta", "[", 
        RowBox[{"-", "b2"}], "]"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "b2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "f"}], ")"}]}]]}], ")"}], " ", 
          RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{
            RowBox[{"-", "b2"}], "+", "T"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{"-", "T"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"2", " ", "b2", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "1"}], "+", "f"}], ")"}]}]], "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"2", " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
                 RowBox[{"(", 
                  RowBox[{"b2", "-", "T"}], ")"}]}]]}], ")"}], " ", 
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{
               RowBox[{"-", "b2"}], "+", "T"}], "]"}]}]}], ")"}]}]}], 
        ")"}]}]}], ")"}]}], ",", 
   RowBox[{"T", "\[Element]", "Reals"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6404392227306147`*^9, 3.640439691800839*^9, {3.640439766689419*^9, 
   3.6404397786056433`*^9}, {3.640439808853301*^9, 3.640439831076838*^9}, 
   3.640440047236329*^9, 3.64044013217498*^9, 3.6404401803786507`*^9, 
   3.640440388089737*^9, 3.640442664796854*^9, 3.640448675077735*^9}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "f"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"a1", "-", 
          RowBox[{"a1", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"T", "-", 
             RowBox[{"f", " ", "T"}]}]]}]}], 
         RowBox[{"1", "-", "f"}]]}], "-", 
       FractionBox[
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"Hypergeometric2F1", "[", 
          RowBox[{"1", ",", 
           RowBox[{"-", 
            FractionBox[
             RowBox[{
              RowBox[{"-", "1"}], "+", "f"}], 
             RowBox[{"2", " ", "k"}]]}], ",", 
           FractionBox[
            RowBox[{"1", "-", "f", "+", 
             RowBox[{"2", " ", "k"}]}], 
            RowBox[{"2", " ", "k"}]], ",", 
           RowBox[{"-", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{
              RowBox[{"-", "2"}], " ", "b1", " ", "k"}]]}]}], "]"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}]], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"T", "-", 
           RowBox[{"f", " ", "T"}]}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"Hypergeometric2F1", "[", 
            RowBox[{"1", ",", 
             RowBox[{"-", 
              FractionBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", "f"}], 
               RowBox[{"2", " ", "k"}]]}], ",", 
             FractionBox[
              RowBox[{"1", "-", "f", "+", 
               RowBox[{"2", " ", "k"}]}], 
              RowBox[{"2", " ", "k"}]], ",", 
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"2", " ", "k", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "b1"}], "+", "T"}], ")"}]}]]}]}], "]"}]}], 
          ")"}]}], 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}]]}], ")"}]}]}], ",", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "b1", " ", "k"}]], "\[GreaterEqual]", 
     RowBox[{"-", "1"}]}], "&&", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"2", " ", "k", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "b1"}], "+", "T"}], ")"}]}]], "\[GreaterEqual]", 
     RowBox[{"-", "1"}]}]}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6404392227306147`*^9, 3.640439691800839*^9, {3.640439766689419*^9, 
   3.6404397786056433`*^9}, {3.640439808853301*^9, 3.640439831076838*^9}, 
   3.640440047236329*^9, 3.64044013217498*^9, 3.6404401803786507`*^9, 
   3.640440388089737*^9, 3.640442664796854*^9, 3.640448705191936*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.6404392227306147`*^9, 3.640439691800839*^9, {3.640439766689419*^9, 
   3.6404397786056433`*^9}, {3.640439808853301*^9, 3.640439831076838*^9}, 
   3.640440047236329*^9, 3.64044013217498*^9, 3.6404401803786507`*^9, 
   3.640440388089737*^9, 3.640442664796854*^9, 3.6404487752961197`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Show", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"TwoAxisPlot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"EXHeavy", ",", "VarXHeavy"}], "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"f", "\[Rule]", "0.95"}], ",", 
        RowBox[{"X0", "\[Rule]", "0"}], ",", 
        RowBox[{"a1", "\[Rule]", "0"}], ",", 
        RowBox[{"b1", "\[Rule]", "50"}], ",", 
        RowBox[{"a2", "\[Rule]", "0"}], ",", 
        RowBox[{"b2", "\[Rule]", "50"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "0", ",", "150"}], "}"}]}], "]"}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Time\>\"", ",", "\"\<Expectation\>\"", ",", "\"\<\>\"", ",", 
      "\"\<Variance\>\""}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6404392582245207`*^9, 3.640439329511879*^9}, {
   3.640439635038745*^9, 3.6404396355205097`*^9}, {3.640439717605083*^9, 
   3.640439732071233*^9}, {3.640439839704679*^9, 3.640440002004251*^9}, {
   3.640440056084621*^9, 3.640440056172989*^9}, {3.640440196342503*^9, 
   3.640440269930141*^9}, {3.64044033243985*^9, 3.640440336003808*^9}, {
   3.640440399378749*^9, 3.640440415129579*^9}, {3.6404404533236647`*^9, 
   3.640440481874926*^9}, {3.640440540492999*^9, 3.640440540803371*^9}, {
   3.640440618255535*^9, 3.640440701617073*^9}, {3.6404407411757708`*^9, 
   3.640440985555708*^9}, {3.640441018478963*^9, 3.64044105665663*^9}, {
   3.640441102412554*^9, 3.640441172673229*^9}, {3.6404416291124353`*^9, 
   3.640441656147627*^9}, {3.64044169226064*^9, 3.640441750292639*^9}, 
   3.640445720080771*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
8Nak7Ngjpf8FK1DNPQ==
      "]]}}, GeometricTransformationBox[{{}, {}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxF13k4VN//AHCkSEVZylJoUZY2kjXOG2ULMTPMYIaZoVKKSKQiSiL7NjNX
CGlTWhRRtiIq1cdSQoRoEUWSLcvveJ7fV/ef+7yec55z3ud9zz3LarY3aa8A
Hx/fQ34+vtn3fYfJPz/yXhjy/f8zmmxQYxd7Df3P09dZnvKxD+cscP9oqWBs
zZwFi059GY15P+dzevwnf8V8nfOzkya7fsaMznlvmntuf4wQ/M+BugJT56Kk
52xZ/bCyVH/NnPsOnAh7IaE8559JJvbZBzf/c1HeIq6qxpyX95X4mbhun7O5
bKLzWJjOnL0viz4O99Ofc413bPbJy4ZzFql14ld6A3MuoNsdWWpiPOfxOIu1
d96bzFnnSEqint2uOYsNfdoV+N10zp6+Ejo7TpnPWfHs65HlZ/65Kel8wa/z
/wwFfzWuJf3z8rHuTeI3/7ki6MHaby3/7B/r9elpxz+rXVLOSv/8z5yKNHny
r3/eXe/Qvmn0n/k+LU0TnvrnwqGXTt0CFhC19+Gg34UlyHPeOZkyYQvYlzrP
Zp7NeqQoiZp5ohZAq7lQMpWkgZrWjXOOSloAsXZwsfWYLgLTw5IqihZQVT/w
I5y8Ey2PtBdL1rYAPk2SSfR+O/SKEHvjZWABedXiIkXqZBSa+yLawsQCjlXJ
J74ap6D+WgORGRsLUMtnXS8+S0NPRNfPP7jPAq4uDsn4GuyKDiWPTKAUC4iN
SgojX9iHnl7ifukbsoBPkVt/+tz3QdOFLN9d4xaQasPcXCbvi/TeqE1nzFiA
x6lDoWcifdG9yXIp0mJLkG+Yv9SfcRRlOn7bWaRkCeEm27zlZvxQsITu5TCa
JRgcUjr+S+U40jvf6rqqzBLuqHy01FgTjPwzcvr8qyzhsVsStywoGOUXeAXU
vbQEgZMd35uag5FKj0Dc2feWYNyxaTAv5jSSNlIr6x20hHPN7bcEAkPQyMTJ
lYVrd0NORZpuX0Mouue1qsUmcjdwj9r1drmEocy3zSt2xO2GLI7RYerZMBSv
l+ygkrIbKnJsGrOuhaEjCxa9nZe1G3pVA5cVDoShzRljb4qKdkOXqsCHrqBz
6Nbrxqo133ZDkMk+Yd/EcHR144W7I6ZW8Kypb3NVegTiJO4a6Laygh3dHlTN
0gh0boxvcz3JCt5lSpFOt0Ug96qAmzddrGAs6sbhq7KRaC1971WmvxUsAWk+
w5RIlBkFaS+vWIFPxuWph2cvoIvfR85nCFrDOHUiZsw0GolTnyaJLLKG3hMH
Pzu4R6OIyphL/susYX7j3rS40Gjkl7buoY28NZyNT+6NfxyNrGxIX6a1rWHp
6yDt5k0xaPJe3k5XT2v48+JAfPaiWEQPdOdXbLCGqG+R11h5cajh85Yl0c3W
QMQ+futeHYfMSX+lxz5aQ3+W1ohZRxzSVEvcWtdnDX8pQgyqcDxa3F7uGjLf
BhbpTTnx68ajEpAr69SxAdM/d/KOcuPRKuGGE1mXbGDTjaf8NIsEFMtHcAeu
2EDnD4r6a3ICmh5zfWBwywZkojR1t7skoI+9P360FNlAjP6YxEffBJRRu5Al
3mADvEN15ckXE5B8nJHZWcE9MGLYOHP5ewJSXH5PYu+BPbDm5vKowtOJKF70
+Nb73ntgF73Z5kpEIuITQtb8/ntARWtBU0RCIuocfRWefmYP0G/L7998ORFl
tXwbf3dxDwx/ypP78ywRrUlX7DR9sweWmx+vO7UwCYmLmzsky9jCiY3G8xoi
klDO9nWG51baws634pGDcUlIy5Fvvb+CLXgSlfcXcJOQU2bRH6qSLaR3DMvL
XklC2ZtVUuTUbaFtP5P+sSIJaewWeZttbgu7Hma86hlJQqSwV3b3AmzhlHfC
YlVGMuq5dl03+4QtMN8rUPe4JSP/2rDVSUG2UGcu5Xn4QDJKFTf45XfWFpZ0
CC9LPpaMPmXmxevE2cIhkXwUHZOMfEtj/yu/agsL+xcytpQko6QRW+s372zh
dLa5zXHJFOSxquDidLMt2J3hnteRTUGGO2W+b26zhQVlNd6/FFLQt4Su8LhP
tqCqNuVjrZaCdmzyrbAdsAVN0WB0xygFfXFL2tYobAfzXrZ8WX04BenVv5Np
1reDF8f9aXzlKUhsTNdDGNlBdNp34mtlCuqRzyjUMbaDga9WGc+fp6C4Q/vI
hLkdqBckiB1vwOVCo9FO9nZwPq/LO+ZzCooxlOZr97ID36PkzzwRDuq86fSl
K8sO6j4XEftsOUjshLZoW44dZJVJCttQOMjQXFKr6ZodSFDmNW6lcVB6z+tz
L/PsoNQqPfmbKwc5rTJSul9sB8U5Aa6rvTmoMXaDe1i9Hf7+1lUl0RxU7TPc
tZ6fBEUqKkLlVRz0B9UvXC1IAiNSnN7K5xy0TvS2upwQCQ7GVXodq+WgM7n7
Q8WWkOCzWVy/XAMHoe5WxTFpElzRNn+i28FBRZQnri+2kqAsrKSlZIyDbmrH
tnsySbB1oTUfnwoXNdd+W0J1I8F886Ho92pcJMg0MTTeRwJ2p8LLm5u5iB4x
liF9iASqeqf2Wmpy0eIWNvNZAAnIIyuimIiLvE5od8vHkSBktWPrbwoXqZd2
fqsvJYH2yEzff0Fc5GKnL1NaQYIZs2W3d4Zw0YXPKRbXK0mwfmFZUuEZLvq0
ZHdu8AsSPNiv9z7hPBcluhR4qr0jwaCE7MX1CVw0PBP5M6yfBCdUG/prL3PR
Q+Ntw9pyZFAJuXFdroaL1rdKRbHlybBLK1j4wAsu4viMrY5ZTYbKzPzT92u5
yC+zdM+nDWRYIdT7FNVxkca02c1oTTKsirYR0GrhotvFdHaXNRlip9aGpX3n
opyt4XUXQsiwR+7SlQOLeEjyucf+grNkGJegFjOX8NBZ193THeFkyCT729mL
8RA7dunG7TFk+PHCV05bgocU+lPPdxBkeJCLDrfL8lDqtTuGmvfJIA/W+Q9V
eChevuVW+2cyTI7nWj/cxUNODM1VDd/IUNyxXcbcjIfWpsXFVPeR4WDw6sXv
zXmoUMbU684vMtzIeH1kYDcPfZC8vyV0igx3aa99REg8tH5RTP46KQoIzqvZ
2MfgoZJRKPLcSQE9n4Ute/14KFwrTZlpRoFbqnRe+TEe2nNslEexpMAW0nj5
igAe+jSUF2hgSwHDN0l7KgN5SOinrL4YnQIqhpQcodM8ROoZLs0/SgHecZ1S
00ge+lp3vXI8mwKTiW5CN9N4aFg8OnXTVQqk+mfp/kznIT57bx/WDQq8DOx5
s+USD8m2bFd4cYcCfGKFqrezeMiq6+kJXgkFnvGndnKv8tDdX23q2k0UCKo8
M3/1XR46Lr4s02+hPQgXBtxb8ZSHwijD/tcX24PdswvL1Cp5KIHz3rpNzB5a
JkuXGVTxUK5sxl+T5fbguD5ynF7NQ21r1KgSa+3BXZ7MjX7JQ7Btl2j+Dnsg
eZ2LvNXAQwspgacGvO0h4ip/zUQXD4nTW50lj9pDM8d3TdcnHlrprq+v628P
4/Jf6NXdPLTVb2r8zCl7ILsG+cV85iGH5NAAfMaB9BM59qK9PJT9NtLXINse
vH62S7QN8NAO+1SPqLf2oCyRUXN3kodMGX/N7r63B4V9KZnHpnD+99I3vGu1
h28mxBndaTx/jsl/ke+yBz6HtH1lMzwUkZLtlv/DHo5sk6grESDQu3e5Li0L
HCDl5NSWGGECeTk8pmzQdQD34LplYRIEapifsmT5DgeoHsmdUpQk0PYCr2pB
5AAbz3aol2JPSqzR+bTTAYoT7vn/liLQhfoIuXRbB+h+axBJlSbQNSuHT+Ie
DtBSORAxvZJAnca/vKc5DjCpbxP4WolAO4deKv8gcP1FntOU9bh+Vk7XhzQH
EK7/0fMB24uPRi7OdgCz9yItXzfg/krLtPxuOwD51SOfMRUCSetGT/U+c4Br
3SMCU5sIZLdlQ9S7YQfYLx9xkLedQGNdEbnzxhyA1apiu0KLQBnJ31+o/3WA
jG3VySnY/eN5wrH8VPhvnoJhvDaBwqs0w01FqSCScnBDsC6BShyNQx9uoIKc
zDC/gQGBlMMYAYQTFTy4OUutdhLoP61yTg2DCvMqIm2KsP17FQv/MKlgfUZq
3rpdBKq06Rm220+FjzItDePYLjKeviJ+VHhP+65wyYxAybePHz4ZQwX5sB2C
9ZYEmmlOcmNUUKHxdvXBJlsC8W3zottXUmHBl3MZG+2wY8ztraup8NNG6dAZ
bAGjKVODV1Q4IvOtaSOJQII39qmuaqZCgyRn9BSZQCKBur/aBqggdPrCKxEH
AknJdATTFWiwruZ8Z4cTgZYfLQ6grKFBH1dnq6oz9uukI1ZKNLj7vWODH7Z0
qDl7hxoN6mrzlwrRCSTbe2/XSm0aNEXfb1RmEEixOGxxmw0NfHu7A+iuBFJz
VE11DqbBtPbgl3A3nK/AMxd3htLAP2PHg2fY64nWtE1hNMhw5+kIuhNoTcuF
SzORNNCKrNsfgi3t2JdzOYUGtiu8DxzbS6AFjrfu9N2iweDV80ak/QT6RNv8
7OQHGpQ/GPdtOYjn0/HwavePNBjYrVAu5kmgj7yPNdZdNHjSrvlqF3ZLc+xL
ha80CEymqN7DrqMN/Fc5RINxRJkOO0SgMtrd1kUijnDYON9ktReBCJrG4EUd
R7jMr7F+sw+BWk+K06r0HUFzr44kC1v20lB5v6EjLEwSf5qEnfY5P85glyMo
U8+5jGFn+m7b0mHnCLG8tZfLfAl0PVrTa42nI7jB8CXkR6DCCq3+6+mO4MlJ
CZQKINBo93JKfaYj/P1kPQrYOkKjj8cvO0Kyj67hIexH1g+jLHMdQXhrmfJT
7NJWbbX+QkdIQSMBnscJVDWsc3BLnSPkHn2h+yCQQI3K+t8KBJzAz9RGTPEU
/n9+J6lcn+8EckTAQ2Ns4bL+g6nCTtD5uVNrL7YhOeNHsKgTSH/UKLmBnRvE
/9tM1gmKpQS/bA0iUGhDzVSLuhN8ub+uQzuYQFtOUSSmmU7gr3Q5WyWEQC9N
8yiDbk5QuyM0ygzbfdkCzqd9TmC2U9NuL3bq1YfSNYecYNKp7Ggm9oJ6Wfn4
407AS2yTkQolULtSl/KaeCeIXui3ZAw76r/DhqblTnAVrcu+cpZAB9NtvgQ8
dYICAtKeYJt7bom98cwJ0sMLfNuxBYV+tS9+5QRul1wKJMMIdMrQL6ix2Qny
2rmcUOxDeSdKmENOICFgMEA5RyDrqPN6J5WcQTOhbE13OIE2Onp8uqXsDMlv
Hv+dwBbZYHHho5ozbGygFIqfJ1D1U5FWIw1n2PV1uM4I23AiJlAYOUPcjVWZ
GdibDyQXpdCcYdnIn2pSBIHEzLK07kY5w8RCc82rkTjekomHN2Od4UYwbWsx
dog6RfdagjOcCa6TeoU9KCe0I4PrDNREdvov7LrBQ0bRl53BZPtYlv4FAsWn
6lh5PHaGjJJabi320p//sRT7nKFb4/OXD1G4fTeVbrmfzqBqk2vUjx3SfMZ9
xS9nyNszFjGJPfh0+37RUWcoTolqXxmN2+dePDQpQIcDK5dl0bHjjfYHNMvS
wazB5koz9tKU6eh4SzqoM77qVcYQaFfdu+VB1nR4tnHVonrsE4vyMg/Y0iH+
tGbtR+yeUOcHxg50MGkiyU1gF3kVfRhm0WFJEnVqSyyBWOa+qo6BdNgxEdbM
w87/+7lm9XU6hH812u8aR6CvWqV2ojfp8HJrsIMn9krf5A8TeXQQgdfaAdjh
34wHGu/TYc2lnrpYbOd3l5aHl9NBpfKRSym24B3Hvd+b6MAsaB1ZEU8ge/Zr
gfvzGfBdv+dsJfabzI2/PwozwLOcl/8G27QjqltkMQNk/dc3tmBr0S2r2OIM
IC2U+j6AvcKh5py4AgPO5m32kUvA64fFE2FfHQbcMb/w2xuboV4gqu7JgAkr
NUOxRAI1eUvO0L0YsMZy2QtpbJvbRwcifBhgVtFttgbbUE2jrjOAAd5KUau3
Yyso3UmID2NAP1+UqRN2l/QNycF0BvCDpXs29l6+dNk7dQwIZLWRVJPwevDF
ryenkQF0gzf96tgir6xupzbh8dg/C9LFvs2dNApvY8DLiz/CzLFHNtMPML4x
oNHXSmUfdgRDrmgRnwtEhlg2XsK+9Yiw99jiAk4PRIcWJxMoONNHwUXDBWpT
LUMksG3DLXrJ213AdKpmgSz2H7vxU0jfBZ+fbk6uxzbspeUsN3OBwXeSMYD9
3wrp31UuLrCVrGXuiz3kx4lfHesC1LZutzpsYZeRCocEF3h/QjisCXuVmcOv
qGQXcF7okNaGbS6znDSS6gLvFicXfMPOKE2RqL3mAs9O34viSyGQxYIUjt8T
F+h2HX2zGTuTm5RWM+wCKVsdf5/DLgz5/Wpy1AWE2leqRWHXHiBPqf91gZ2f
Nejx2CP6Ei5p/K5wd/Px3FTs3Z2JCj6irqBuRRm7PVuunJgtq+wK+WXJzCZs
60fx1w87u8LnNKWLihwCMQ94dSW5uMK9heZj67B9pa1kH7FcQSbn5x4VbI6/
UPQCD1eY19v9Ux27UyPY+5KfK4yFb+o3xva76alVH+MKJU0rvrthp6aZVmlW
uMLLZi/FbOxbu9dNOVW6gsC3N61XsMsn+LVCq13h3c3T8Tewe2il116/cgVK
0/cfd7E3S2lG7WtxBY2SCz7l2E9iVpN4Q64wovEr88Nsf2h6IEicCZMD36uX
cvF6flBl/I8EE2S2ppVLYHemUAS8pJgQz6l/sBzbuj9X0kWaCZrKLckrubP7
M1XXUJ4JoXGv1JSx3w/dPTOtwoTIqLIiQ2y9q25Sp42YYOh598AB7CP1sfKj
xkwYSvKf8MS+Olm8wXsnE0aK9CK8sCXIS/VczZiwUKw29Sh2/0yJC7LG8Vw5
nBaEneG4/PoMjQns6UeSCdj8S17ohRxhAiP65mABdrOuzugKXyZMLPKgFmHf
3Xft/p2jTLiyfcXjR9jMinMbO/yZELKAEViOXXHUWN4wiAnPhYbqn2MHtz7m
n4zE9ceiR1qxJ67dfh5wmQlLoX/9FHbD21XnxK4w4UC/0raZ2Xzxxxhdu8qE
bdbPdvDzCOTo7Pmo6QYTtrgZm8/HLhJVvrX9LhOuBSbAEuyAY1lxv0uYEJBA
Kl6JPWyc7ODdxASpBuEuXezAyvKZvvdMYPkfO6OPPW3Sd92jBY/n/tBqA2yh
XcZ/WW1MKNyANyFsWbPBS5RPuP+UskJTbNht1av7kwn1H2MkydgxZMFTggtY
MHSqLvAgtvjbLUqhQizoosZ3eWJzKM5vpoRZIIKumB3GzrTPVxxdxAJZ2SbR
I9gPqMxnvctYsKftQuQx7FbnEtH/VrHA79mAegj2ene/LGI7C/zNbjonY9+o
+fhGVJsFIYlZUSnYG9UsJs/qsOCohtYjDva2oVVUL30W0NpBgpiNN6RmsYkR
C956ChekYzunyR7vt2LBTG1Z0VXs+LcVNsidBZ2/GLUPsSV01E492MsCfnGZ
hqLZ+C+m3FDZzwKXkOz3xdjp7IOCkgdZcP6tUsdj7NxBiUffvFlwuF2ysxy7
avF+pcSTLOi1qMytwR7fuWSyJ5EFUW7nDzVhy+c+bgtMZsEORjv7Pbax2MFS
UQ4LFL0nqc3Y0S3VwToEC75OXDRsxVb0CuGPvsSC0nVRU+3Y5tzfC7bdYkGB
dIDJ59n4eluWhT5jgevjuPEh7Mc2EUNSNSwIa2ir/Y3deV+rMfc5C0pOKaYP
Y6sGJyW/rWXBg6r4HSPYpeLWK5QbWLDKVdd7HLtHv2Llfx9ZEEGqyZnB1oi9
umHVGAtyfDwcFxF4fzNb9oczzoLTvFG+xdhNMyefLv3Lgnzmk2uzPuFjxxCc
ZoHOMeHfS7CfUCYT++ax4UlrUMhSbFs50nSxGBuEA2sDpLC9rk+9ddjAhqSo
vnZ5bGB5ZNcps/F9LMhLAVtcttHbUpUN27Ldp2ddGHVdxHATG9be0165GnvK
iwxK29iQFi9ouxY7evuNm78N2UAs7eFtwM59SjkT78CGyCddD7Zg5z9RBy0a
G57dloKt2MUVotMfHNlwNyPx5ayflz0P3MBgg4KZZ7s69udHO3zK3NhQX3Jv
Yhu24v11zP4jbDAmu0rqYHMuDxuYR7EhxJf5EmFnZNf//RHNhgP53gDYV7Ju
FyfFskGyortg1g8ueWzvSGDDIr+pDCPs+ottG/15bOi1WnLQBHtxcpVczhU2
OLbu7jHFlkzKarG4xgYmbb6dGbZcYjB34DobGnq3lM5aNV5HQv8Wjnf7hyRz
bPPoWyIN+Th/pRl6lrP5jop8HvCADQmb/mTPmnphX/iqQjb0+D0V2Y29L0JR
4EAxGzKcqppnffj8VLnoYza0u0wYWmH7hbcGPShhg8eC3JxZnzr3UN+pjA0z
/G8XWmOfDUsenylnw2r+QK9Z/x/ag0Fn
       "]]}}, {{{1., 0.}, {0., 
     39.73228592232603}}, {0., 0.}}]},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->False,
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->True,
  FrameLabel->{
    FormBox["\"Time\"", TraditionalForm], 
    FormBox["\"Expectation\"", TraditionalForm], 
    FormBox["\"\"", TraditionalForm], 
    FormBox["\"Variance\"", TraditionalForm]},
  FrameStyle->{{
     RGBColor[0.368417, 0.506779, 0.709798], 
     RGBColor[0.880722, 0.611041, 0.142051]}, {Automatic, Automatic}},
  FrameTicks->{{{{0., 
       FormBox["0.`", TraditionalForm]}, {0.2, 
       FormBox["0.2`", TraditionalForm]}, {0.4, 
       FormBox["0.4`", TraditionalForm]}, {0.6, 
       FormBox["0.6`", TraditionalForm]}, {0.8, 
       FormBox["0.8`", TraditionalForm]}, {1., 
       FormBox["1.`", TraditionalForm]}}, {{0., 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"0.\\\\\\\"\\\", 0.`, \
Rule[AutoDelete, True]], Function[NumberForm[Slot[1], 2]]]\\)\"", 
        TraditionalForm]}, {0.2, 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"0.005\\\\\\\"\\\", \
0.005033689740152043`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
2]]]\\)\"", TraditionalForm]}, {0.4, 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"0.01\\\\\\\"\\\", \
0.010067379480304086`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
2]]]\\)\"", TraditionalForm]}, {0.6, 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"0.015\\\\\\\"\\\", \
0.015101069220456127`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
2]]]\\)\"", TraditionalForm]}, {0.8, 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"0.02\\\\\\\"\\\", \
0.020134758960608172`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
2]]]\\)\"", TraditionalForm]}, {1., 
       FormBox[
       "\"\\!\\(\\*TagBox[InterpretationBox[\\\"\\\\\\\"0.025\\\\\\\"\\\", \
0.025168448700760213`, Rule[AutoDelete, True]], Function[NumberForm[Slot[1], \
2]]]\\)\"", TraditionalForm]}}}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{550.03125, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 150}, {0., 0.9932620519695907}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.640440826590241*^9, {3.64044087461204*^9, 3.640440986081884*^9}, {
   3.6404410230500507`*^9, 3.640441057230773*^9}, {3.640441102748703*^9, 
   3.640441173482963*^9}, {3.6404416326312428`*^9, 3.6404416567250423`*^9}, {
   3.6404416933532953`*^9, 3.6404417511406727`*^9}, 3.640445720614482*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "f"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"a1", "-", 
          RowBox[{"a1", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"T", "-", 
             RowBox[{"f", " ", "T"}]}]]}]}], 
         RowBox[{"1", "-", "f"}]]}], "+", 
       RowBox[{
        FractionBox["1", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}]], 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "f"}], " ", 
          RowBox[{"(", 
           RowBox[{"b1", "+", "T"}], ")"}]}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{
                RowBox[{"b1", " ", "f"}], "+", "T"}]], "-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"b1", "+", 
                RowBox[{"f", " ", "T"}]}]]}], ")"}]}], " ", 
           RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
           RowBox[{"HeavisideTheta", "[", 
            RowBox[{
             RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
          RowBox[{
           RowBox[{"HeavisideTheta", "[", 
            RowBox[{"-", "b1"}], "]"}], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"f", " ", 
                  RowBox[{"(", 
                   RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"b1", "+", 
                  RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
              RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
              RowBox[{"HeavisideTheta", "[", 
               RowBox[{
                RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
             RowBox[{
              RowBox[{"HeavisideTheta", "[", 
               RowBox[{"-", "T"}], "]"}], " ", 
              RowBox[{"(", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"f", " ", 
                  RowBox[{"(", 
                   RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"b1", "+", 
                  RowBox[{"f", " ", "T"}]}]], "+", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", 
                    SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"b1", "+", 
                    RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
                 RowBox[{"HeavisideTheta", "[", 
                  RowBox[{
                   RowBox[{"-", "b1"}], "+", "T"}], "]"}]}]}], ")"}]}]}], 
            ")"}]}]}], ")"}]}]}], ")"}]}]}], ",", "T"}], "]"}]], "Input",
 CellChangeTimes->{{3.640448745248166*^9, 3.6404487510346193`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "X0"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "f"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"a1", "-", 
        RowBox[{"a1", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"T", "-", 
           RowBox[{"f", " ", "T"}]}]]}]}], 
       RowBox[{"1", "-", "f"}]]}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}]], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "f"}], " ", 
         RowBox[{"(", 
          RowBox[{"b1", "+", "T"}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"b1", "+", 
              RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
          RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{
            RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{"-", "b1"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"f", " ", 
                 RowBox[{"(", 
                  RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
             RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{
               RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{"-", "T"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"f", " ", 
                 RowBox[{"(", 
                  RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"b1", "+", 
                    RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
                RowBox[{"HeavisideTheta", "[", 
                 RowBox[{
                  RowBox[{"-", "b1"}], "+", "T"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}]}]}], ")"}]}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "f"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"a1", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"T", "-", 
        RowBox[{"f", " ", "T"}]}]]}], "-", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}]], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "f"}], " ", 
         RowBox[{"(", 
          RowBox[{"b1", "+", "T"}], ")"}]}]], " ", "f", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"b1", "+", 
              RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
          RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{
            RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{"-", "b1"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"f", " ", 
                 RowBox[{"(", 
                  RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
             RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{
               RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{"-", "T"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"f", " ", 
                 RowBox[{"(", 
                  RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"b1", "+", 
                    RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
                RowBox[{"HeavisideTheta", "[", 
                 RowBox[{
                  RowBox[{"-", "b1"}], "+", "T"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}]}], "+", 
     RowBox[{
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}]], 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "f"}], " ", 
         RowBox[{"(", 
          RowBox[{"b1", "+", "T"}], ")"}]}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"b1", "+", 
              RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
          RowBox[{"DiracDelta", "[", 
           RowBox[{
            RowBox[{"-", "b1"}], "+", "T"}], "]"}], " ", 
          RowBox[{"HeavisideTheta", "[", "T", "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"b1", "+", 
              RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
          RowBox[{"DiracDelta", "[", "T", "]"}], " ", 
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{
            RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{
               RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
            RowBox[{
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"b1", "+", 
               RowBox[{"f", " ", "T"}]}]], " ", "f"}]}], ")"}], " ", 
          RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{
            RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"HeavisideTheta", "[", 
           RowBox[{"-", "b1"}], "]"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"f", " ", 
                 RowBox[{"(", 
                  RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
             RowBox[{"DiracDelta", "[", 
              RowBox[{
               RowBox[{"-", "b1"}], "+", "T"}], "]"}], " ", 
             RowBox[{"HeavisideTheta", "[", "T", "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"f", " ", 
                 RowBox[{"(", 
                  RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
             RowBox[{"DiracDelta", "[", "T", "]"}], " ", 
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{
               RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"f", " ", 
                  RowBox[{"(", 
                   RowBox[{"b1", "+", "T"}], ")"}]}]], " ", "f"}], "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"b1", "+", 
                  RowBox[{"f", " ", "T"}]}]], " ", "f"}]}], ")"}], " ", 
             RowBox[{"HeavisideTheta", "[", "T", "]"}], " ", 
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{
               RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "-", 
            RowBox[{
             RowBox[{"DiracDelta", "[", "T", "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"f", " ", 
                 RowBox[{"(", 
                  RowBox[{"b1", "+", "T"}], ")"}]}]], "-", 
               SuperscriptBox["\[ExponentialE]", 
                RowBox[{"b1", "+", 
                 RowBox[{"f", " ", "T"}]}]], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"b1", "+", 
                    RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
                RowBox[{"HeavisideTheta", "[", 
                 RowBox[{
                  RowBox[{"-", "b1"}], "+", "T"}], "]"}]}]}], ")"}]}], "+", 
            RowBox[{
             RowBox[{"HeavisideTheta", "[", 
              RowBox[{"-", "T"}], "]"}], " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"f", " ", 
                  RowBox[{"(", 
                   RowBox[{"b1", "+", "T"}], ")"}]}]], " ", "f"}], "-", 
               RowBox[{
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"b1", "+", 
                  RowBox[{"f", " ", "T"}]}]], " ", "f"}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"b1", "+", 
                    RowBox[{"f", " ", "T"}]}]]}], ")"}], " ", 
                RowBox[{"DiracDelta", "[", 
                 RowBox[{
                  RowBox[{"-", "b1"}], "+", "T"}], "]"}]}], "+", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", 
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{
                    RowBox[{"b1", " ", "f"}], "+", "T"}]]}], "+", 
                  RowBox[{
                   SuperscriptBox["\[ExponentialE]", 
                    RowBox[{"b1", "+", 
                    RowBox[{"f", " ", "T"}]}]], " ", "f"}]}], ")"}], " ", 
                RowBox[{"HeavisideTheta", "[", 
                 RowBox[{
                  RowBox[{"-", "b1"}], "+", "T"}], "]"}]}]}], ")"}]}]}], 
           ")"}]}]}], ")"}]}]}]}], ")"}]}]}]], "Output",
 CellChangeTimes->{3.64044877945693*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"%218", "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"X0", "\[Rule]", "0"}], ",", 
      RowBox[{"a1", "\[Rule]", "0"}], ",", 
      RowBox[{"b1", "\[Rule]", "50"}], ",", 
      RowBox[{"f", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "0", ",", "150"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6404426065106287`*^9, 3.640442621756166*^9}, {
  3.640442710716194*^9, 3.640442724676084*^9}, {3.640448789650072*^9, 
  3.640448808277216*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
luqazPQU/c6fgQbpHOa+k/TQQe3vr+4y+8fpVq9viITWMOeP0ZXrZoDmM2b9
CJ2jcO+hoQ6mv9E7k8oikvuY9UP0/AtCJTtHmPkgPcDL7S3tNzP/TN9j95zt
7vz9VN5PV7c2qLcTZLqPvtS8IURwBdO99OldutvrFJl+R+/Sf8jlrsl0Nz0J
3A9vNWG6g75/QynfBmem2+grVhVejg5muoX+cVmu8Oh1phvp+yy45i9PY/oJ
vS3+8OT2TJbrBOU6buQx/ZSewZNxdVc50/X05YZsF/zuMV1Hjwuz9cmuZuXB
nFJ7/z5iupY+o3tWX7GBVe957v0mi6es84YfAoVzz1n1h2jXxQpbmC6ia372
/JT5irU/d7PR7cQOpqvot6/ObAntYfnnOuuj+wdZ/Rf2i1csoh2gnEPPv5ew
58j6A//ycc8r0dJRTNNoO+5F5xy3OvjPnmju+2lBm3+ex9ukFeDG8oR2nLlr
B8tyDp5pCWq2//xLl3fmUwzLKlFZqyWmWc6rMwuKNrf75zsPN2DqlixX1vLN
vd3LcuODRt/V+1keuEc/8cCeZam7K22G3Vi+kjEB9MJZTklv/fMtguWbabcr
Y6NYLrlxRO3DZZZbk3qUTl5jmSeuXjzzJsvCsWld+tksi8ecufo9h2WFaE2h
zfks60Xkc7fdYdk4PKzRu4Rli4uOoRJlLDtekGI7Wsny8fOzNXz3WfYM7T5d
UsWyf0j55n0PWD4XHPfrbw3L/wPLWY7N
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.640442625417368*^9, 3.6404426800841217`*^9, 3.6404427256956863`*^9, {
   3.6404487946088867`*^9, 3.640448809574274*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{"EXHeavy", ",", "T"}], "]"}], "\[Equal]", "0"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"X0", "\[Rule]", "0"}], ",", 
      RowBox[{"a1", "\[Rule]", "0"}], ",", 
      RowBox[{"b1", "\[Rule]", "50"}], ",", 
      RowBox[{"f", "\[Rule]", "0.5"}]}], "}"}]}], ",", "T"}], "]"}]], "Input",\

 CellChangeTimes->{{3.640442217485169*^9, 3.640442268539816*^9}, {
  3.6404423083666553`*^9, 3.640442352369866*^9}, {3.640442402736375*^9, 
  3.640442410913722*^9}}],

Cell[BoxData[
 RowBox[{"NSolve", "[", 
  RowBox[{
   RowBox[{"ConditionalExpression", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"0.`", "\[VeryThinSpace]", "-", 
       RowBox[{"0.25`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.5`"}], " ", "T"}]], " ", 
        RowBox[{"(", 
         RowBox[{"0.`", "\[VeryThinSpace]", "+", 
          RowBox[{"2.`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "0.5`"}], " ", 
             RowBox[{"(", 
              RowBox[{"50", "+", "T"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"50", "+", 
                RowBox[{"0.5`", " ", "T"}]}]]}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"25.`", "\[VeryThinSpace]", "+", "T"}]]}], ")"}], " ", 
           RowBox[{"HeavisideTheta", "[", 
            RowBox[{
             RowBox[{"-", "50"}], "+", "T"}], "]"}], " ", 
           RowBox[{"HeavisideTheta", "[", "T", "]"}]}]}], ")"}]}], "+", 
       RowBox[{"0.5`", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "0.5`"}], " ", "T"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1.`"}], " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "0.5`"}], " ", 
             RowBox[{"(", 
              RowBox[{"50", "+", "T"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", 
              SuperscriptBox["\[ExponentialE]", 
               RowBox[{"50", "+", 
                RowBox[{"0.5`", " ", "T"}]}]]}], "+", 
             SuperscriptBox["\[ExponentialE]", 
              RowBox[{"25.`", "\[VeryThinSpace]", "+", "T"}]]}], ")"}], " ", 
           RowBox[{"HeavisideTheta", "[", 
            RowBox[{
             RowBox[{"-", "50"}], "+", "T"}], "]"}], " ", 
           RowBox[{"HeavisideTheta", "[", "T", "]"}]}], "-", 
          RowBox[{"2.`", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{
             RowBox[{"-", "0.5`"}], " ", 
             RowBox[{"(", 
              RowBox[{"50", "+", "T"}], ")"}]}]], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", 
                  SuperscriptBox["\[ExponentialE]", 
                   RowBox[{"50", "+", 
                    RowBox[{"0.5`", " ", "T"}]}]]}], "+", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"25.`", "\[VeryThinSpace]", "+", "T"}]]}], ")"}]}], 
              " ", 
              RowBox[{"DiracDelta", "[", "T", "]"}], " ", 
              RowBox[{"HeavisideTheta", "[", 
               RowBox[{
                RowBox[{"-", "50"}], "+", "T"}], "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"50", "+", 
                   RowBox[{"0.5`", " ", "T"}]}]]}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"25.`", "\[VeryThinSpace]", "+", "T"}]]}], ")"}], 
              " ", 
              RowBox[{"DiracDelta", "[", 
               RowBox[{
                RowBox[{"-", "50"}], "+", "T"}], "]"}], " ", 
              RowBox[{"HeavisideTheta", "[", "T", "]"}]}], "-", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"-", "0.5`"}], " ", 
                 SuperscriptBox["\[ExponentialE]", 
                  RowBox[{"50", "+", 
                   RowBox[{"0.5`", " ", "T"}]}]]}], "+", 
                SuperscriptBox["\[ExponentialE]", 
                 RowBox[{"25.`", "\[VeryThinSpace]", "+", "T"}]]}], ")"}], 
              " ", 
              RowBox[{"HeavisideTheta", "[", 
               RowBox[{
                RowBox[{"-", "50"}], "+", "T"}], "]"}], " ", 
              RowBox[{"HeavisideTheta", "[", "T", "]"}]}]}], ")"}]}]}], 
         ")"}]}]}], "\[Equal]", "0"}], ",", 
     RowBox[{"T", "\[Element]", "Reals"}]}], "]"}], ",", "T"}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.64044223174127*^9, 3.6404422696907463`*^9}, {
  3.64044238654725*^9, 3.640442411843273*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EXSin", " ", "=", " ", 
  RowBox[{"EXsol", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a1", "+", 
       RowBox[{"b1", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]1", "*", "t"}], "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"v", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a2", "+", 
       RowBox[{"b2", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]2", "*", "t"}], "]"}]}]}]}]}], 
    "}"}]}]}], "\[IndentingNewLine]", 
 RowBox[{"VarXSin", "=", 
  RowBox[{"VarXv", "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"\[Mu]", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a1", "+", 
       RowBox[{"b1", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]1", "*", "t"}], "]"}]}]}]}], ",", 
     RowBox[{
      RowBox[{"v", "[", "t", "]"}], "\[Rule]", 
      RowBox[{"a2", "+", 
       RowBox[{"b2", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]2", "*", "t"}], "]"}]}]}]}]}], 
    "}"}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.640366106831115*^9, 3.640366224711183*^9}, {
  3.6508256514536448`*^9, 3.650825681315102*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
  RowBox[{
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "-", "f"}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox[
       RowBox[{"a1", "-", 
        RowBox[{"a1", " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"T", "-", 
           RowBox[{"f", " ", "T"}]}]]}]}], 
       RowBox[{"1", "-", "f"}]]}], "+", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "f"}], " ", "T"}]], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"b1", " ", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{"f", " ", "T"}]], " ", "\[Omega]1"}], "-", 
         RowBox[{"b1", " ", 
          SuperscriptBox["\[ExponentialE]", "T"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"\[Omega]1", " ", 
             RowBox[{"Cos", "[", 
              RowBox[{"T", " ", "\[Omega]1"}], "]"}]}], "+", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
             RowBox[{"Sin", "[", 
              RowBox[{"T", " ", "\[Omega]1"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
      
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
       SuperscriptBox["\[Omega]1", "2"]}]]}], ")"}]}]}]], "Output",
 CellChangeTimes->{
  3.640366230036812*^9, 3.640438055361491*^9, 3.650823887140617*^9, {
   3.650825671422271*^9, 3.6508256832365522`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{"a2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]]}], ")"}]}], 
     RowBox[{"2", "-", 
      RowBox[{"2", " ", "f"}]}]], "+", 
    FractionBox[
     RowBox[{"b2", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
         "\[Omega]2"}], "-", 
        RowBox[{"\[Omega]2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], "-", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"T", " ", "\[Omega]2"}], "]"}]}]}], ")"}]}], 
     RowBox[{"4", "-", 
      RowBox[{"8", " ", "f"}], "+", 
      RowBox[{"4", " ", 
       SuperscriptBox["f", "2"]}], "+", 
      SuperscriptBox["\[Omega]2", "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{
  3.640366230036812*^9, 3.640438055361491*^9, 3.650823887140617*^9, {
   3.650825671422271*^9, 3.6508256862757187`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"EXSin", ",", 
      RowBox[{"a1", "+", 
       RowBox[{"b1", "*", 
        RowBox[{"Sin", "[", 
         RowBox[{"\[Omega]1", " ", "T"}], "]"}]}]}]}], "}"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"X0", "\[Rule]", 
       RowBox[{"-", "15.05"}]}], ",", 
      RowBox[{"a1", "\[Rule]", 
       RowBox[{"-", "15"}]}], ",", 
      RowBox[{"b1", "\[Rule]", "1"}], ",", 
      RowBox[{"\[Omega]1", "\[Rule]", "1"}], ",", 
      RowBox[{"f", "\[Rule]", "0.5"}]}], "}"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"T", ",", "0", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650824034574684*^9, 3.650824319452623*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Ai0tKJJiH/fFyIOCX985o5Zh/056dIWXM4SCVMuXZ1Wxv8dnfzY9f4ICxsde
5Y/a2L8XibhvzqJAfmLVpWzkQ1ScXoRyMQUhH5ctP4H82DO5MWnyMQVlVucj
byNfIvxi8ytaKNght3ufCPI97MVlEj9IQYdi9OubyPctlo09Dl8psLsqbX4U
+e5f9mlanJ2GWltdVhby3Udx8aLBxTTorOXeM4F890rTVbkmR8PkhimIQR66
82y02KFNg9XTUCEH5KXrvphNRpY0cM12af3j/ZoPeXsXrKehbSJ4Mg/5aufZ
cLo5gIbT4/IH1FBbN3+8fm4PjfmHTE0jj5mmwvXeR2loZxYE/UZtdlNnSCmd
hqfw8SUT/3+jFR5zX6/RsL/dXrURtV5KtFjFAxoELAwtknA8LfY8Or4JP+cf
fJ+M9VAR9SyHXhqYGVodrViv8tsPfuKfaBh5x13khPxWcF0UPfCbhqO3FLj5
kd8r67TTCgTVIe5A0DZO5LeMnvvt8OXqoKIyuNZIkSJSBQeeGaqrw2F6RvoG
rqeo1KV3HKAObqFZSz3QTwkdq/v7zFkdho7uSQOaInxz40vO+arDivLF1b7o
v7i3Cul4R6hDwEKZJw91KMLRp+WkFK8On9kv5Tmif5t9vP/Qgyvq0KWQv1Ic
/d00nZt1qEwdZEXD0liWFPmaU1tuX68O8h+7ikuQ72MHBT/2v1eHCMniF6Iu
FPmY16pyUFwDVh/YUScURJHg3uHyd8s0YIg937diG0VGRact7BQ1YK/G2ehk
5Pubw1LeovoaoLpbhRTGUKQn0Df1qrsGlChsXBCN/vfiprL7+3w0oOLj/f2N
6I99XHkHHYM1wKlvqZ7qVXye+W3Vmb0aUB2S6aRxB/21DHuddZoGcDbWLxJ8
ThH+F7k/3r/UAJkQYa6rnDRpeTq97FG/BsR4QMIVfpqkEpZlyjsNUIyfNLok
gvnn5tcUg+8aQMk7nDqxEvPMMVh9TEwTUjkct3w3pokJY8hr9TpNOPOujqN0
O03+6urEz2/UhPL3p+jq3chftcTCDj9NWMy/RqlsP/JEWmMmKgI/v3y6E47S
hH/xYZk1UZpw5L+0uq4krGdhN1P+kCaEGcAfO+xv67/Hnnp2WhP49HmFn2Le
kfr0oizngiZ4/tQJbsM81PdGqW/nJU3oGL/LfjufJn5trcoytzVhu2CN22wJ
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
9F0pxvziuYU1tRsg6fSQ2r+//xU9NIro2QfwyvD7pfpc7LcH+uuuHQRY+rOa
1+Is8mteLtTqNMARXibH/gMUmfWePq92DsB+8d/GF3uwfz6pI6IXAPNSuK7j
DvQDccFib3IBfJMEjAoCKdI/ZGj29AqAkiib53FfiriZ8wffugYgIH1J64wX
9nOOmw9jbgGsn28tl16H/dQv9l3AXQDu/IArmU6Yl2ucFzneB5gSUG+ytkN+
Hp7yW0oA6pbefbGCSZGrI7VJHLUAu3/IXVtjRpHlVufLxxsABqrLzhUbYX/l
NuS73wpQ/yxR8Qf6gcRAPp2cFwCOQfV+I+gH2Bp6NyW8AojdUDXOgflwn1Lx
0dBegI7M+ZB1mB+/HY257ToIcENx+fEu9Adbx9b0Gr8F+POxdCAJ8+cIS5ZL
/j1A+3P56T2YTzcVfqP5PgKkbo+z/ff35i7eWvfJCYCLP7atHUN+rgk5d6j7
G0BBPXtEOObfxqbAG09mAAxU73LSyFtzVYOu/DkANUlzN1nkccUJXrbkeQCJ
vox8O+S19qceld0c5qA19Vq5CHl+w+HGOi9uc5Dv1FgAqFcVR0db8JnDw/43
TgKoswXXFKwWMofbLmZS//K9ZNjK9sUi5jCw9YI3C3VKy+TcT3FzKIlzEbuP
mle9RmFoiTnkWr1Y7o3jHTp11qlhmTkYrkxzM8J6fn0JiLwpi89P1jnqgPXu
ctbPO7fKHM5e2rL9LM7n0y2e5gMq5uAfr1q1GP1BwOKe7/9R5jDN/0C2Ftdj
YMf1Ffaa5lDjcUvlX5536zhgq6VrDh+3KQXU43q2ajntXGJoDlmPG9aJY55n
nVlxkc3UHA41fApOw/2omvpa/x7M4c2hOn4H3C8j1+qvLZbmEF8TmaaFeV5N
PMDyooM52F1rzUjFPO/a+nGm29kcfjrnvNqAef7AsYhCsfXmkB+4U94V8/yz
P7FCSZvM4Zb+dr/PmOe/3eOuavA1h01lDp+POlBEOuLkzgWB5qBxy/qe61qK
hIxmdEeFmQO/f3VGrCdFUnNlT5RHmMPgcEJvD/rfio3XTL/tMYcjoQ+K/PD8
87WW5W2JNYeF4m3lk3g/Cu+1bXNPMYeZTwWOg8fRX+7YsOLsWdyPL5cVdpxG
f6860N6abg6H+4q+yKbj/HM/6tlcMofdi1N6u6+iv0jkZte7Yw6lXEN3A6op
orjR5Jxopzlcbuy8oPvv9zqxGps13bgfCxdyNnLRZE+L7dzxPnN40NLb6i5I
k3rmhs0c78zhefZesVAZmgSoRqhMfjeHXtfwgFVGmF/f/exVmzMHHda5ye3m
NLmbE5scPG8OsscuqV5jYb8UOzk1yM2E0Z/OF167YR77XfC4RZIJmZetWbyY
95vL6XA+GSb8EbwqfBzz/nR4mZz1SibsOXt2yTjmfYt31UcfKzNBZia+0+gE
9s8cW6NZNSZELUwWXX2aJqkebZ90NJnQ/VLn5tfzNHnzvH/tDUMmFFx2OP7n
Ek34Ev05x0yZIL3hUSkUYP5nfiyXZzJh0efLvOtvIA/Lfy7NtGNCpOXK9I+Y
/4vCY1u6nJhQrBcru7WCJh2ruQ+KrGPClhdF+8oraSKbIzp6zBPrFdXtuo58
2WZgHBC9mQmhImcXSjbRpLzdbyT8PyY89Vg24Yw8Ytt6/D//ICbYO3kT9zaa
2HHeebNhKxOEvDB9oZ84e/G1r/12JgiuiGG0op8Y1GMfNtvJhOVHIM0E/cTq
NmUfrb1MODbYqbEb/cSuLc6Dq/Yzwbjn+MFI9BOVHJHeS2KZULPmNr81+gne
rJx+gXgmPJm8692P/HXVbfBiO8oE/UpjSTP0E9ktE71Tx5ngYmw6GIT8HguS
8HyfzITAnZJhG5Hv2uxmPT2pTGxguYni6AdiMgI8Ws4zIeilLvsF1I3aJ7ur
MphQWlh3bwS1yPO7G8qymVB5sPvCP3+xKbCv61oeEyY7z+Z1or72d4FbVj4T
NgeTnkjU39JVX54qYsIC1Ur3d//yv9Y61/ibTBh7kgjSqI8+i3qx5w4TDt4r
rJHE+jr881xCypmQEkXJDqC/kJl/2r6pggl642euhuL8AtMmnddWMsH8zuOi
evQXtzWWtFlW4/ODutLG0V/8fgprDOqZYLLWeLgL/YX1f8Etqk14nhZv5jn1
iiYpv085rmhhgjNfUaYIrn/PuXvNIh1MeFGwQc+vgybbG7mfzb5mgpInOx2M
frDCl7b73M8EK2N1tpXoFzl/rX86NMyECMfGmnz0k+nU1YaGcSYMdp1JVsDz
8qa+2frhZyacV8sNWYbnifKZrrs5yYRt4h7DY3jeqlMtas/NMuGI0EzNLzyP
AmpbLY79YULSQYNNVtdosqEutfoAuwXobfT6GHCZJp9+DJP/eC1g+JfIbY0L
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
/91xgkGhQc/YNnN/9Of17yrXUm1ooBw076Qd8t7vaWbtThoN+sKHgvyRd6vz
z3uaM2hQ5FhdWos8bIj1lTBh0UBx+cAVKvJSPkewisShganeMpPl6H99Hl0+
sIZHA97QgyWiyNeal+uklu2mwdboaBMj5K/Ml6L/5uxpYOJ0ez7/+rzHlJnn
iCMNaLpJYYbYrhZvle7bSwPxjC2t/Pf7lis7PXm1nwa/TlbPiGPbzWjU64kz
Da4Zl8+nYruCFraqxJUGVBPhzmpsL3VbXpvpjuNX/GznxtcbQTd94g/SYEru
u7sFxvMgVkv+rCcNKGTpJjbGuzjnSf1RL8y/5/vtKTiePY8YR9y8aTCspB+5
Cv168cuPa7i+NGhfWGjwDPOx4Ivfs51HaGCofHr8LuaLNzXv2JajNPg8krKj
HvNZIH5l3cbjGI9Af9Fy/vt+yutfrDpBg3X1awticT5YRiUBi4NocH25WRr/
/f48moXSVDANlvD8vq3TRD/s2tby4xQN3Oos3mvrkIis2DHlF2E04Ez8bv2C
6+Fvdnhr1RkajNt6mZ3D9UJ5JHnq7jkapA4t0Waak4ixz9odl87j+BXqBf1w
vZkb+Ycz4mgQqqpWmetAIq7ShNQt4mkgUZszd20/6inX+G7tqzg/hgfP3XEj
EZdj72uuSKLB3WNJMRa+qAc+j/e8zqAB6+Lo3z8RJOJ07FFjxyIasA98vmpT
QSIqPx+bcH+J+UtNW7pIlUwM5O7/HNZKA4uffele6mRiuQelI6WdBueOmojX
6qEfGV5X2tZFg9F5Ww9s204mpP80+Zv20SCW/FSXup9MmD0sc9ndTwNhzcNt
4gfIxKGgm6yjn2nwU4KWWnaYTDydO65z+xsN9h6675qL9cZHZP249Cjmr8SW
9+EK+plnYp80x2mwtNGyIQrrVV3M3zbKbxq02KUVLU4jE6slmkvCJmnw/XxB
/zmsd5Zt5Zkp0zTo3zCy7TTWQ/+EzCvlszTYKHeCvrOETDxbdeLI8Dw6nOqZ
JZlhPf391tl50QI6qJdEhfpgvV2XasNUEqZDsqZypEcN6ot9Bhami+jAI79X
IWN9DlBU0t69hA7W7xrYFVi/Mz8tXX9UjA4iFXukl2J9b875tzx2GR08TEpP
qrZivT/wad5tCTq8U6u9J4I82LCpZbRWkg4XzuX03kFe0IYefuxdgb+/tJEl
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
     "]], LineBox[CompressedData["
1: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
ps1vegzne6WXTrTNArrQvvNItC/O9/pMWdx5Mrow8+b4zGac583kLeYPq+ji
9yNfltNXEtnSh3vUNHTBk497Qgzn+x2Hk9/O6euCvezDhFCc73cnaz5+bqoL
epJPZXfifH+g5OvVaBtd2GTVk/luDPOk/WSUxXZdiC6aG307SaLwBRlvNjdd
sDyjvWkbzvcxm95tafbUBYOqYCdPnO/PGwdoXvHVBckw2/6/OD+nevKLuQbj
+c54ykrhfJ9+poJpc4Qu3CkKvvkB8zYnd/dIf7QufBUL72XAfH78nrEt96wu
hGyqy3/5P9/HcisPX9IFWQeRlv8/76/i2XpH7YYuiMldN2nAdb3G1Lm5TF04
fOIniziuPzpfD36eqwvdVfxb5vD4XyMMXaMLdeG9araLC56/P72PZlGuCw6h
nudpyyQaqYpXZKvShRc5h/aV4PXP9KvwNL/VhQsn5yIK8P7+sXycT23C8zMb
J6hPkWid0tHenZ914dllu12mf0jEvWVTnXiPLiQ5dwx24/6JBL5+3D+gC4am
c9R1AySSuux9LXcM9zdp3P0F7r9yGdvJw7O6sKNl6gFDJ4k0Ogq91f7pgu/z
96Ff8PMzXN6xdY5ZD1jTEgmTDySy2Lyk+ZxDD1wu0bz135LIZb85s4WYHsTl
ya6bwufDI+H3CKusHli+q2AteUwi3/yktiYVPfBIJKo47mO+T3Tc2WmgByKd
e07eTMX+esIfDrvpQfn+LeucD+Hz5xil37lPDzpF3+Sq78F5X+mihrWfHjzf
G7XnsQOJ9D4/kpM9oQfFNhvYU3RI9Ik6yvotQw+8E+yaD61SEduPQ622fXg9
HCcUpk5TUfCz4w3PfutBjuxto8shVPQl+XyNwpQesG3JbuLbR0U5hvlPmZj0
YePg2Wd1NCqiXft987msPizYnjp2+h8FHaUf9FI5qA8DrY0n7cMpqFsifFda
kD60fgsdkT1IQWZzCU7rI/RBdQtDrcxOCuK9m2v145w+7G3dc7REl4Ie/R1U
ufVQH3SSWisT/+L81zYny1qqD27MTYj4Q6CIB+s2H3uhDzKbT3Nv+k4gK2d5
HscP+nCY7+iG4RoC9Rd6z7CN68P0nJsouoz5HB82Fj6vD58XrySqJuB8tytu
cHBVHwLDlLrXIgkUxZrT8YbHAGSyib0TBwj0s7f0IylqAP8uW/jy7iaQ7dOa
97elDMBH3HftviOBRLx+vjiubgB6u14o6pvifKY3U/ZL3wBk6QyXDPUJNMDN
XOhsZgAbs2SpL9UJtGWQP6/G1gCI6W8bX6ngvPlCJlt9hwFwrZibgxyBNqZq
3MzaZQBsjx3CrTFfYnzNUrm8DSBIffvedpw/h0wcE0/4GwDSPX7iN86ndkJe
ccNhBhAWdpSI5yHQYn6pcH2UATyT0aMP43ybY7IuPyfOAOTq1IzqWAnk8MnF
MPaiAdQxBzSIYz7+O/igyeOqAeSt3LjxB+fnB/+WPIwz8OvPtanoY746Xd4y
vSnHACpiU/+sYR4zKNyOW3yE17f7vKoZrguejwt/KTWA0PrL/Ay4drWH/NIX
BrDvQc4TfVyzDFw2vFxjAFY6n1fGcV0c8bMpsNEAmNyd3kni8XdzaXtu/WQA
S+Yn3jXi+VnvJkwrfzMAS72e69M4v5fpfI3b8BPv56Jn4RW8fs9GZZHBEQPI
bNvrX4j3x+l5Ir962gAuyH3gNcP7fzb7wTB72QCuJh+ossP98T4v0XySyRBG
44ciP4oQiFci2HMXuyG88bIk34sT6OWTN9N6/Iaw2DSfpyNDIF9rgXjhTYZg
za93TUQJ+0+3t8istCF0mHgm+lEJ5L+O1ahI3RCO2bu6e2I/E73l1nxR3xC2
m176tGaOfZH6yNPP1BB8hrbcYN9KIHHXbfHy2w0h8+VvCfc9BHo3liXC7GYI
ZWJjpbd8CBR2eiq/z9MQ2OyrdEyCCfTh4dXm9GBDYDXyvZ0Th883bcjzeIQh
OJVaXfHCeV6uXXfGJcYQcgI0Mo7fwud1pUuEPwWvl0Vh04MSAhEO0vvOFRnC
Vbn51+U/CXRx7vFM2Lgh/P7wuvL7DgrSu7AW7ziP13ujvKDWi4IGJLaLqq0a
QoSfWWZLCAUZ0WeNRrmM4O7c2RF6CgWN3TJI2EcxAk+twoR9zRS0BepFt/kb
Qc51s9+9W6jI6dyZl+1hRtB+8IB/8W4q2vuR5rnrpBEU/AvMOhhARaGez/J8
k41gWEZOMiyZim7F5OucKTaCzRd5Rc9gfue8O9DFVmkEhBHbibUenA94ZU6l
vDGCqfDNX4z+UNGb7Ftvb7cZwXufab1hdpyPUKLTs1kjSDtWdvqqGeYxK33R
ZMUI2LbbM+TY4/vdgSXj7TpjmGka1XDaTSKe/qifbcLGcH3C7OC5MJzXlPXP
ukkaQ8nWF+fXxZBIJmROpU/RGC4Y5dwTwnldhzEw9I+eMfTe17b7kUUisFER
DjM1hsfVPHNp+Zi/l4cql22MYeu8X92XJyRy6ry757SjMRwXS5G++YJEe6U9
GFl3GYNU1+fzPTX4/j4kdj95vzGs+Dnn3mkkUWhJB13I3xh4ta6Z/cR8iFq6
MpYeZgyHuJTtszE/4k0dUmROGkMNA/3Hl+8kSj7PqZUfbwxxbjv14nG+TGt9
10EmG0N0j19ZPs6fdzfGnyi/bgza7M/7zCZIVLDPVNI4yxh0tNmD7Gcwb/NX
qmvyjOFcCJd+8zzOb1OVPrbFxiAjWQ5VmOcN+sfYW58ZwyvO6GIJzNP20xqF
O9/g14s8+DaOedv7fnx773tjiNI9aELFPP7N92jOu80YIka4TnXjetrt4M3R
LmPwnZE5tITrv3dkjUN/GoO1T/BC3P+f549871scNYbBf+tso3E+59bIiIue
NYbOUvLRbzyfaKSr0voVYzB64pn8BvNbplrww8V1JqAfy5/CjvM5wd4aJMBt
AiX30o7WYn7rOCYJ3BI2gYz438Qk9he4ZVMhJWkC7PPOH5Kx39j8WLcrT9EE
ZsUsUu/8IpGjSvUqRc0ErPkaB5R/YD8KPXW3TM8EBnQctyv///sSTAvDb2xM
4MpkV9BVnL8jbUuT6I4mQJFkW2HG+TsuNUi9xd0E4v0i3KarcP9lfkd0HzYB
NSTY7IT5fNcvR3x/mAmkHr4z1HQP9/+JJxqOMoEN49VNLTdJ9Nqsc8NCkgk8
TGaLPR5HIn9Lg2rn6yZQuhbgvOc43j89Paos0wRkHP4Ndgbg82G3ZyqkyASa
60Rn83Eel3Pt7xr7aAJlKsYJLNLYh9zNrm3pNIE3K526nAIkOrnnnv3DfhOQ
jOTIfcdCoi9eB2oPTpvAjE+Cb9AvKjoXMPz4hwANFFu3eg7lU5FWsK2vqTgN
dlSf11t3i4r6Qx/JZMvRgJ8zfHTpPBUZRATc2KNNg61Pd584doiK/sROxXx1
ocEWj5RwfUUqckxb2tF8kwYd8geO99+hoNVb7tyUuzSo+r5UEHkZ8/r2i3eJ
D2lQFvNIQgPnc5Z7J41tXtDA6s+NeK59FFTxmFGxtpsGB537LkzKUJB3sVe/
zCANDgyeY58XwPwvrUk//YcGXafWpIzWUZDfs3he2ioNii1GN9/6TaDkfpaV
bh6A4lL6drZSzFcvbXdOQQC/9ra56FycbwYOVBiKAiQtccs74/vx11BdyC0p
ACZvRXelMzi/+S40v5cDSPwYWkFEEOjqsCKxpAQQ5JS6NSMA58+xc0M71QEO
/bVNeedGoOsBleZntQHOHGx6dMEB5/Px4exyfQCJwMiOamsCmQVvWh00BlAl
DkUeoRHo5pTtLiEzAKnFyq5MXQJNhp54ZmEF4CKyIG6N85/V7COhMFsAmZxT
5oE4H2Yc7Q69tw3gXdMcRRjnx+l5zo9tjgAo7W0abCbQ4Z29S5UugO+r94VW
mP8DFUWyd9wBNgoydyLMtz2ip+3O7QWQG2ZWLcb8+xLhGB7kBXC2ODJDCOdb
+07ZOy4+AFesllinMT/f6c81GPsBaBoj0grzH27VzcoFAujtvFzKj/Nz5fIN
Cc5QgK+N5za5Yj5r7DpEnzkKcGPXSpMwzt8PXxiEdh3H+zc5uMke81xWnDPj
zUkAkQk78v/8nhHV8/bBaQDbXiNJCq6FegonLsUDPFv3+nsbrpONYzaGnwd4
5bPPZhqPtyFzu/neJID7AS9FEjH/Y1ZlAiwv4+ehHzecgfm/tHf2OnENYKIm
CxTx+kNfv0UCNwHKB6xilTH/RyVvjCxn4P4oKi7c5ca8j/EV/JENkB94qTGV
n0A9ffom73MAtuy4y7MoTCAXUw7f4gcAr40vVbSKEajlTvflGwUACjJt6RLS
2A+ZCl+cKgb49fn48R4FAr3xih48UAbAPBY2zUnB56vGgcfuGYDs+sGkR5qY
t3EzXmIIvz6poZY0I9D9gdqLTLUA7JT3o3y2BJKwvF4+XI/7VSZttxv7Is96
ffZnLQB7366rlvYm0Dkfdq2sTwCRQQ230vD5Y6j/tiehA4Cc260fFI7Pw9lT
JU7fAeyLp3ZoXMTPl63WdWocwKSiSPh9JX6+ftdiv04D1Kiu71p4i59vg0/B
63mATr8m95A2Aj1PZGNIXgVImNhzT28M53su+zwVblOQpubIvsHvP5FAqVY+
flM4YlChOKFGQSnNU8uLQqaQlbVwZBuNgmIvXd1Wv9kUuNk9Va/spqADfF1z
+ymmcDAgraktjYIIoQMWt7eagnDejYMMQtgHWkbnvzqYgqYkc+sveSqKOh+a
L+hsCi+OZd2u1aGixpVo7ot7TMFt267YLa5U5Dd062tkoCnMeAfe4cD3UWq2
dGJ5qCnsz5MEsYdU9Nz9gfH0MVMYk0UmfyupiL3l6d1D0aagmix/b1MnFeVX
fPR3TTGF8Imk4L2C+H4M2Sl59aopsFf6SkfIkGhRtbe1Jc0U7MP8okGNRPTs
UR3rO6bgobdztMkW3//uocOx901hw23lC4k78f0uuJRelW8KLFHrl3/vx7w7
t55R5wner2LbpaMnSMRrnlQaUm4KnibDmzMTcJ5aEfDBgRs+TWnau10m0dkQ
6Ua5GlOI4LEtP4HzWqHqg5Oe9aYgRl2h9xTi+3mQqpbRaAq2btYGdRUkUnA3
uibQbgrNOsWecu9ItE2wxtr+qylU5DxmuNZComPNNssXuk3BkJX+5cwXEmWe
+1hQ12cKAgdvTI5jftWZ7fRgGsT9PXDtTDvm2/i/Hj6TYVP4zp/5WwPnV+EK
79rjf0zB1XAokxXnW5OQ0WNPp0zhrPyvLU44/x5QDVWemjOF5WuvXwjOkeji
4OI3YtkUlJgu9NMxf8uyopN9V/F8nXkdE5jP3W7rTXOYzKD7A2MfK/YDFsGk
me/rzUCFw9j7CuY70SyQK8ZhBtecB+eSMf+dzt1y3cljBobjidv+4jrKTJrj
ioAZ9Nt/s/+K65x/ea+aRcxApCCLWQHXH8qpweziZrBM1KYP4PFng5/KWEmZ
gc9fi1BB7AviqkafT8uZQRiXMFs59hfzweqzr5TMwKF2la0B+41flo3BEmEG
+fv9rLZj/0l1+zimpW4GC0GUiq3Yj54L7MwK1jYDDhaIeoX96UdTz/YCfTM4
oB7QnYP9iv2cN8tvYzMYPr1gwdKH87zZaLmsmRkklGnY9GA/c/8XcsjDygxi
W/nvqn8iUWz5oli6rRnMPC2mMON8/zA4uvnLNjNg0a8d31FLojaV9af5d+DX
8wpyKrwkkXSWwND5XWZw5Z1C3s6H2Af0DA+c9DCDSbO+3P13sK+1eg0E7zeD
KWGJr2xp2DdZnvzYedgMUl5Pr6difwg75PBd/oQZPNk/YSvmSqIqpoi9G6PN
gDmWr9N4K4nYMrJ6OM+YgZDliT08gM9L8/i3mQt4f0GvTBoVSPROM+nrm1tm
4HfPY9PqJBXxN5XtfJppBpEGi6cnflDRHp/uLw/u4n6aO13Kb6ei6TTVz5ce
moE24+LV+AoqEl9937rnuRlsuLG91PQEFQW9W9+41GkGl4IYW9lXKej5Pqrt
nx4z2GiY8sp4HPP/r/P7vn4zqORlXgvrpaA0yv36+mEzOGw7NbBWRUHVqea1
15bMQF1q+87pGAriJA6bn18xAyuHHetLcR7Z+Ta1OorRHN5e+eR3HeeVsYV+
tJ/NHE5Lu7O1W1CQ8J6YV+obzWFF4OP2SxwU5DmfZyS/2Rx6Phy90bBCoEeX
Wl6ISptD/0+hrxaTmHfVEs/XlMxB/NOlw8xfCHRhl5X+DGEO19K75Le9J9Dn
2YBnQ2rmYPEm5MHASwL5Kb4qb9LDtcFhHsb7OI+iAe03RuaQVnK8/uJNAq25
cT4tA3O4t4D+BCVjn7i4qzSdjsc3SbWyPk6gXvkzGpe2moOBuN1dCCKQ0uuH
JbEO5rDR3PNV+gECvZpaKjrkag6piWOnY3YQqHzgS0XJbnN4VHaqbC/mR3FH
6eslT3PYyexi+NyUQPkNKfWmB8whfD1PyjV9At19FdBy/pA53Iop2DCjjvlb
bNvRGmAOE4Fjre0qBLp2T/H7xlBzSHqZt2gkh/l7neXXvmPm8KXFyIMigflz
vn88P9IclsTXVedhvzgdVTU/dcocOAc/P32M/SIyKH1V/4w56FtdzAPsF2Fe
Eetjz5qDeVXOt32YvwHOztwNieZgYtwbwI/57EPXEOZPMQehn78ddmB+exry
SLhfNQedaKlt/38/70Ydk7+bhvsx5Lju/+/vHaXfU0YyzIGLmjp2CvvBVsFc
bY07+Hn38Dv8//2/5YYzxpH3zeHFJmFHGVybLHtYVuebg17n95EWXOv9MbJj
LzSHOIHK3zzYV9T7Njo7PjGHx+tXJ/rxfCqf5nffKjeH5WC9E5bYd+TqPnn/
eG4OMQ2W3/TZCLS5sthf5bU5jPqf163CviRckBQWWmMOmzJUklt5CcSb5Rf1
vN4c2vbsLQsVIhBbqnUc0wdzcOJ45ZK9iUBM8XIXbT+aw6G4e0uuUgT6F854
NbXdHOZ/ZS3dwv4w59eb3vXVHFhLhxO9sT/8dkh75NdvDq9elEQmGBHoh/nR
0ieD5uDxtOZ0lwWBvuk4vlgeNof9VudCHtsRqFmcs/HCtDl0HettfOtJoHqe
4ba2eby/6ZiqdYcJhJjqujb9NYe/D849qjxKoNLf0SMPmS3AP/o9Xwj2hYJv
u6enN1iAge11tsA0AuU26y8bcFqA2o0Py605BEorm2FrFLSAhYMhJ1AVgU7F
HFQelbcAqX0x7U3zBIo4YqGuqWIBTucd7G5iHw/xkdY/QbUA+/1zJwoEsb9v
/Ubn0LWAD5M5d9M0KchG1N5XlW4BvVUyL9jDKEiwWCfvsJ8FJF2JbDH+S0Ee
DD7PswItgFviZTMXJxU9dLjW9CnUAsJUlSK7xKmINjUzY3jCAs7mjdjuNMF+
oFECnBctYLHm+oc9MVT0NLZvB6RYwNsHG5RSU6iI4RPPwbCrFlCg8O1WZjYV
XTsSmNSdgWs1j01UREWoTLWr4DHeP8/lF4X/qIhj3a4/fSUWWOiy61U4SOTi
fIFBqNwCYh08BfZsJNHo3G+Fk1UWMO3p39auhfOmlahBSbUFKM9lFPObkSjm
urXdYJ0FVO/yzF3Yhvmqm3vErsUCThImTx8cJNG+s58TTn+yANcn/isBR3Ae
7GC59bTDAjZP6b76cIpEphH70eY+C+CrqdOwvYp5+y710/YBCxDa0rvklYn9
QLR6KP63Bfwt6tnN9gDzoVKKa3zSAuTfbAyarSRRBZuDlMycBUx+ESS0qknE
5B6t6bJkAUrKbXcW3pNo68NCqwsrFsD2tfCRUSuJbiz3uFUxWsLFDePWjF8x
72y5AqbXWYJfsVWaeS/mdbpRjAK7JfTlHfzBOECi8NHDV9y5LeFGZUiKwTCJ
qg3Tc5P5LWGh5KD6GPYHrosNldXClrDZ4OpxoWkSuXYvfZjfZAkqhwbNnmJ/
uEso96lIWsK7KeOkBuwPf6JcZ/bKWoL35xennP5iX2o6u/6KoiVknJ/d74j5
Hru5YmO9qiV4RCsU12B/aAoYIv6SlvB7xWMlD/uAaJUQkFqWsM46nfP/7wv2
c1vu2K9nCQ3/Wt6+w3Xh3jCfG0aW8KtmSXcdrhcL7x1vBEv4JiV4swyPb77W
dnHNwhIELnNYdeD5k+2ZsjVtLEFm4F51APaHr1nqpQftLEGie0dlBPYH2UnP
uvTtlqAlKfx3Ee8vEFI6W5zx+s+S0RPjJHqW8nqM2d0SfPpGvPZgf2DuH1/T
3WsJRxRsh82xP2xTlxDw97KEtl2PI3O+Y588baeQ7WMJeVxBOTHYH362Rum3
+1nC+XvHRLvaSESVKdjKGmQJammo4EkjiWqq2Y8Eh1tCQa4XbfgFidSmuxx3
n7CETVVVnj9LMc+lH2nQoy0hdUHhfdgjEkXEbJmWPGsJpv/U7x64SaKhIrE2
jkRL2Mt68dD7SyTa8X20ZCHZEsp6neWa4vF8JhdDWq5bQqbaNtmqYBKlB+ze
/uKWJZixFR4rPkAi1tuEel6mJQQa5Hdtdcfr/fth8lSuJWRf3dmVjM9/WiVX
MLUc9ye4e9N5HhKtH+6x3/TcEmpHT74WZyLREdFCcn2VJcxpyOwLnaWibeHb
JnreWgK6HNMY/JWKmLUvBSZ9toTpJ5+ObsykosBi3oCxWdyPW86fdGSpqPt7
39avi5ZQKfjBMEmAimx4Sojaf5awWvJ6qpeZiuQCt4+ls1jBBKew65kBCupU
TT28RdAKjMXEffRzKchql9cWXVErsPUfOPPpOgWVXdBQlRW3gqen7YYSzlJQ
8nDbyLKsFcQujsvTD1GQRZ6A30NNKwjmvnP1JpWCnnz5aXNd1wpofaYM+6Uo
SHJ9mXKsoRXM0NnlvfgpaNnbadjN3ApMkw8x8iwQqEjmmi/bDivY8zml4GQN
gcQdD9DnXKygvK6/x74C+8VpbaV+dytIGv65PuQRzqd9n38987KCefH8q4+u
EmhTpvBB31Ar+Ka069RWfJ/rKGa0PDhmBVXsWg5i+zAfi6X1hiOtwJP9i53H
TgIF6udlK0dbAa/fBl2xbQRKrCbY/M7g8U4U52+3JNCDLU9CHp7Frw+RkF5n
TKDadt2ukUQrWJmwn9PVxnwaMnt0+KoV1PbFeMgpEkg0+J1AQZoVdHZoTPRj
fmkt2UWNZVjB0OKfJgWcjx1iPw0Qd6xATp/11izmXwCHm13AfStI5iAat/Lh
/V3tffo43wooNuMlalyYL5u9JcYfWwG7bFD4HczX6tzhBOoT3A+99ZuzMX97
yaCJwHIr4BldOkFhIdDys9mdRc+t4OOaqaUt5rewWSSaqLIC7TxnxgXMd43G
NSW1Giv4OsXCq4Vre6f4y8H1VvD4zZ4H/3/e4N/DvlzcaAWlxhlfPRj+z9Mp
XlMteLwPCgnbsF/kTAg1qrfj85J2LaAJj48i0jVDv+Lnl/ZWphvP380onfGk
2wqsRRZ4IzcQaOlCLstMnxUwvViIzGXH6xEkAjQHrcB3YucJT268ntsln48M
WwFH6SOWPH4CbVPQNSn7YwUFj7/0R4hgXyx6mTs7hfsRtb+8XZxACXpmPNrz
VkDfOLT6TIZA997Uhx9dtgIT60N8csp4PbZ2fU9XreDit6HNgmp4PZ/a6PNM
1lDd0EA9q0sgwaGejeEc1sAVx9nyx5pAakH7Yyt4rIHy9tHLbgcC2S3+HlkQ
sIYayhl/S3c8H/vsiwhxa0h8YuJwPBD74ZXjcpVS1vA8/2yLCfbRKvG1i0ty
1pD9LzA/NI5AC1T2vZEUa6jQUcr7/+9ffHdIMUSZWMOBQsv5lRYCxXXf931p
Zg1RPZauHT0Eyj6g2vrPyhq8bbkLmMYI1Bmuc/ekvTVYVrry0dgoyDZjq0W0
pzU8LRbM7LSiIGIw4lxsrDW0CTj4ljVQ0GG7rFeRCdYQkH+NL76Lgh4+fTsd
esEahNaxzu0doSClBP49+1OtoV5JtEmCnYpkFQvULe5aw9uV7577bKjI61Kb
j1GuNSQbK13mdqOi7IXFdK2H1qBYm99+35eKJN5Zrpd/Yg2uvKamZ85S0aZD
37vWVVtD6MZHfy/VUJFb6zre1bfWYCCsNiXbRkVp+oTl/Hu8nsVilbg+KhJm
P1401GoNnqSk/f9/L8D3iD+uvt8adgQVNtWqk8hBQL/y9aA1xIQHrrmbYJ6c
8BivGLaGnVqzH+/akohza4HrgylrGDU/Ym/ohe/TP5aU84x0uHzgiDIkkcja
2d/r9Do6NN3vtxS4QaKEV6k3jrPR4fH+JJXYbJynk78z+vHRYUTsrZjKE8yv
+XW6XkJ0+BqT1LL3OeblXsLffSMdq7hEugLm/xr1+BdbaTrsOBI8evAjzvc3
sjjM5enQcurtn54vOG+vvQVDZTpA7xBzXzeJXhwcO6pJocNpK9VS/x8kWm7h
f6Sqjn8+++Pt2F8k0tfT75PVpsN7WcczUmOYL9keQuL6dPgMFWA5if2DNcFW
0JgOt0y/fZzA+Xo+uCCa05QOg1cfb5VcIJF2Z1sZiyUd/hT7jbZhvoaZLg3/
o9PBJ6aJiR3n99J8Scm5rXQostPfUIv5PM1n5fTHgQ7t0t2J//++gHqk//lB
Jzr8Tn5v9hrXwT9Sq3pc6SD2nWvlf/4X2VbOfN5Nh757lQ+rcT3+5LtSsycd
DO4Oum/ANUVs/d46bzrQxYoMm///+8AzxJUqXzqMhhC3RPD8j0Yd35X708Fb
zf3HT7y+kR3HVwqD6RATypD1/98HKr/M0sgLo8PU85TjG2ZJ5CtXdzArgg7a
Rv/0PfH+cy+OZdyIooNDVmydCe7P4Cx/26UYOgQ4HZfNwf079jyRPyyODrSZ
hxsLcH/Xx7DscD1Hh3yvlC7THhJdtzx5xegiHe73qBb6dJBIgWP+k1QKHcZZ
9RbEsK+VfwwUXHeVDgXM7Rr7G/B5uf7LafgGHU7pKy8a//99knTn55IsOtzx
TvlXhn1gcWi78PV7dOh1zfvthH3gXEGDS2Qe3m/33YpLd0mUr/uyw6yIDlEj
T716sQ+M2GV1fqqig++NHUWSPiSKFBDd9KyaDqvv3r/7jHnP3pninlFHB8ZL
Uq369iRS9Y795t1MB8dN/FXCurifkQd65nrokBuXd/goM+5/rmq/yApeL91Q
OP4yFZ3yz5H+x2ADk0LZjWdjqYhbY7NXH4sNXP5hm3n4CBWRr7h/PuC0gXX3
GScGnKgo+NPUgL64DYS6DCJmESqaXqv4vcvQBmR59a4rplNQ7Fs1ZaDZwO6+
b8RUIgXxJ+YfkjO3ga2xl/W/RFGQpnD6yJitDfhOv19i8KCgMOLU2El3Gxg+
dV3VUJ6CWKbnCa+9NrClpa3YTISCrlYEBVh52cDq3JL1aXxfPTXbN87tZwPK
V6XuFY8TaN7VYjLruA0keKdlkTj/a0eEVn49aQPIeNMtehHOvzeyY/libeCI
8X3X13cJNPP5n+CZCzaQd/3UyqcLmA9zKr0vkm1gn9PyxYhoAoUKuuXNptqA
g/Ka2rkwAk06PtX3SbeBilla/awHgcjQn0xZWTYQ5rotbKcL5vtlvg8d92zA
Tmc6Xw3nv8fFtGu8D2yAqLs8G4vz4VhLwF6bAhv4FfWtygHnR9WJdMXYYjx+
zcbtGVqYP9wNk8/LbGABUj4exHlzeKvCGeKVDXweTTiegPmu5O+09cAbGxBu
MtbvwfnVNzFWKPOtDUSn3+J7gfme97C498t7G7C9ejlYGvN96H1vHk+zDRTp
82fyYb7LD3OG0NtsoJuh4MVFzHdvVkOD019s4EqRce0VzPd7ioeYn3fZAEtM
UaIi5usPqxsfpnttQE/iWRUd81fa5+011Z82kHyp4Mf/fPeMn9nr/csGyvh2
OWvjOjtHWun2qA3s+ju59X++f6+xn/o8YQOMuaMd////AhI/Tz7nnsXjHxDs
scB838tUcMZ60QZ4E8+KvcTj35bu2hrzzwb+nqhTefM/34FVuJLBFrjr2iN3
YL6Leep8n2KxhesGnk6hmO/u0d4PVNhs4eryzFdxzPdbmakh+7lsYdchHWZH
zPfOV8ggg88W2mfU83gx30V7xpk/C9kCNe1B6E7Md9d/4k1cm2zhsXDoHznM
9y8Gxz2iZWzh9B66sx1JICH3PKVnCrbQYOWUlqNDIKfjn6cmVWyB/XS57gkT
ArVVqMd5adpCJOPJx7ftCcTX4WGXrmsLW157Vg24Yv+aTxJuN7SFkwN/7tzx
IlCL1sgDSwtb4NQgfoeEE4jbSTT0FN0WLmuLRkfHYh85YmVYsdUWihKQ40IS
gT6U3G1ScraFTcd9m0RzCfSOumuaw8cWKh1j31d3EWjDtvMvLPxs4c0Thy/V
vwlkFVARdzIQ71f70X1e7LdvHwmITByzhUb1nHPxOO9XK30wbDtrCwH6R9k8
HSlITjG9tTrRFkyPq7+z3kdBCfJ+B0sv2cLf5McsLsEUZCPDeuXqDby/0Uc7
OpIp6KOYxYhLni2U8loQ65oo6Dv3y7RvdbZQvftA1itbKgKuROqHBltwDPzM
tcWdiu5yuNe+bLYFN8+s69WHqMiHdXHi9hdbCORP/ud5jorGGbWsPYdsIcjn
cdMM5rsDA3OPw4gtfPV/dM8P8/3Jamuo6bgtJO/0Dy3EfD/6NyhTZh7387+K
zjyeqiaM47IXSrJEUiSkc+8JoRCPQtbr7vdWqBClJFJEmyUpFJKilLWkTfZK
NUkoEZIU2ZMKCclrfcef87nXnJlnnnm+v985544YYZ2LmO9To3f/9ojYQXb+
wnIe5rvLSFDUx/l20BvCSm3eNPe83Ea1QsoOJjc0ekpivocNfre/LWcHVlte
/D29m0Q9/UVdVxTtYIg7I1F6gERWv84ERi63A/a/sAc3AnA97VuVuW+1HVRs
Za6gR+P62Tu8cfsaO0DWv/oUE0lU2/PyvS3FDjREMgxCbpIornPn5Fp9O7Bw
fMBb8QjzsZ0ap7zRDmKz4BsD+39227SG1CY7eHU28IDiS+yPW64xBy3sYJ+F
+9jO97ief/bqa7O2g0GHxtCWjyRq/bTx5Ht7OzAjNy7/1oL1QZO4LKLbQWPK
C1pwJ4luNn66k8u2gzbzuNLrvSQS+HDLLI1vB50NWlrWv0jkWn/kY5yTHezg
3vQ5/ptE5e8t9ofusoM73sMxGzD/NWqXzDvsbgcm6VuuBWP/HPmuK9Ftrx3c
SpWusZjj69tHBPsAHg/b/egl7L/t35wuszhkBxtaBcQ9MZ8fVDry9f3t4Lp5
qPQL7P+lK1QGVwfaYb13zOQa5rlf+UCY/HE8f90w7tzzg8ayUkWx03YwkuK4
tR239V9GPfwXhucD9+W24raVonStSaQdFHEqV8rj/ri+Cf0h0XbAbB37ysL8
93yzVKIy1g7kZk7WCExgfaOaskbysh2MpXddXY75H3lM1ZqRZAddmgUyd/H8
kuqzPBJT7OCL6zaDHDz/nDXaZ1rS7KBZpFxTGcfnSciDjJW37OCzv4qeII5f
9Wfdsj05eL01vN85d+D46xR35DywA7176hfXfSFR/znj2d95dqAUVLDp+AcS
TXe+WK5fjPMnSfTl5nckWmhkYRL01A7K3UY1I8pJpBJftf3FCzv4ti/3lnUp
iWBz/RWbKjvoq7c/zM4hESOZU3ThnR0kfj/Slo71o+vw58YPdXYwfOdcchDO
r7D0rsUun+1AuNrucf1pElUIjkb5/bSD8CsrQgPoJPq0PTCneBDPJyXRd+8W
EvXlTVVNDduB29/rMK1PovluIqJnJ+3gw6uSDlUlvH6v5E9fk7SHgn96alVt
VOS87NqNDml7WHvnqZX1e+znD694tlrOHv7bar4z5gUVXVylNfFwuT2cXGW5
N/AmFTWEbfQvp9rD8ObHLUxnKuJbOO0doNsDK/KY4uaPFLTvekeELsceIlR+
Vm4pp6CgUfesgG32sPzu2SBuPgVdy/TumudqD5cfZ5JlcRTUJnzKSf6wPbib
bhLfQKegQSeh4B0B9vBdIXkFdklotuBsUmqwPZjcgcbodRS0ck9sk3a4PfQa
8IZqFlOQ2+s0utlle1DxuDx58xOBKoICgw4l2YM2S+iP8lvMy3WOmWkp9gCb
nScHsR7oT576J3TLHuzNWh+mZuB6S/+gqp+Dxyd/1/7sFQLliuTYeTywB55W
fWddFNYLh3g3q4rsgfZOrCjpCObDauqb/57YQ9vD6IUrsN/f0CI8ov3CHiSf
ZcYuwX5/yjLPKqbSHiaznCfY2N+7TEYeel5tD6UGwWK3sb9HuTuTf7+3B37a
07N+2N+HL5MaZDTbw6Ki0LKTVMzrum6FsFY835SJK6+wv7eOeGJe0GEPhANP
7rwqgXKM4/Z/67GHe7RlQx+wv5f843lZ/gfu/1/x43R5rD9umb7YOmAPvnor
2v9h/tftkPsR+MceNjruzG6Umjvfpl8m56899PRZbzDC/LxcUWbS8p896Muv
iF6D+ToenOQhOYPH38IIzsD83a5zKHaToANkiG0pzsZ8Lu21enJQ1AGyguWq
N2J+q1xf3nNzgQPITkUs42G+n2aMStUvdID2M429c+8TdolWGwoucQDLDXcs
DHHbojRtt56CA1h/VNCYmPt9gG9glPsyB6j9coNjg/sX13QsvLzCAfboGQao
4+t7ta5ur1jlAJeDvMWj5n6fGDclPq6Jv19zZtdxrF+oWz/oriEcgLIyJ/ef
JIFip+44bV/nALbCq4SnpAk0/Oh0RNR6BzjXmgyRWB+xPXm5pRsc4OjO/RrX
sH4qVqZ+GTBxgJbtf+l6WF8pNQgLrzB3gPAUQUNHDQIdP9tCoVs6QFW/ztoB
gkBtJnm8EBsHMO074CSB9RoMR4bkOTiAxlPPptvG2K/f3nm3m+EAVwO1Q9EW
Agk7G3yU5TpA+lSGBsse87uyWyvAxQE8tt+tbXUhkPaJJ8xsVwcQqLd4WruX
QNG6ccc/eziAo7CM/7rDWD+kmNYZ+zjAW/eE14bnsJ7xSwoQOO0An0Qf/5x5
TCATrUNpOuEOcGNQTlGxkkA3vlpVu0Y6AFXTZt25RgK5Wo+qvI51AJlTKeA0
RKCfyx0rzqU5QLz68a2711KQT15FqV+WA5hdYOwp2EhBo1am+TvuOMCl4dAO
A2sKmvahpFIeOYCf/jmx0j0UJF0mEVSPHAANCGe7pVOQgUcVRbHDAZwIHekx
FSp6OmGmLtjjALtS4y0uULEeuFis9Ou7AzyV0N6+zJSKbEpuiT377QB33zXT
RXD9cFpwpnPXrAPkXFMIfpRERSEPzC9nq9Dg/nRKh60E9l9bHkfFqdGgLjt1
e8hSEp3/tC40SIMGHfq0Rv/VJEoQWOljT6UBun4/IAL7+aWXr+zR16WBXtOR
zBuY9ylrFjmpGNDg4KewZk8u9n/MGeuhTTS4lm+kKeiN/dH3I2afzWngcbai
pQbzPjd4QL/MkgYKBtnvzEJJ9DizVS3BgQYaxg9OSuJ6bLqRrXiCQYM1Mipn
XDHvy2qqF3lwaBDy9xqLk02id2NPpgydaRBRZdoojnnPiNIdWbmbBq4uq8+9
RiRqWpHzY/4eGowZx0kqVJFoe4Fqx/BeGjjUC9ycrCVRu3VSU8sBGtxRHE/2
xfx3/ypdU36IBnus9xwJwPzv8418dd+fBg80Zp9JYP57iwo8SQykwQmJlBUU
zK/h5IDcU8dpkM+P3PXlJ4kCyN+39p7G8/GqdJXB/Jt65ZHCCKfBip7d6o3D
JDrNb7tkFEkDa+aNFyqY/yIDnPOromlgL7px/59xHO+QmtOSsTQQWZsQZIf5
v1DeMuDvJRpcne1wJjD/L+WUerddocHMus3pc+8PLDVb7155jQavbL7/OY15
bk/Z3S2cSgPtJSN647h9atkF182ZNPh58lLWHP/z5j/tPJVNgwSvBw6GuN37
7/uuZ/doIJges2MW96/UK9sxkYvXN7FeYwPmP63RfOeGQhoUlvHJLqxPQssO
th15TIPe0mXLZ/D4C3OvOec/o4HPgpkX0Zj/fTeqWode0mC45NKii3j+yjF/
d1AraNDX0KItivlPD1Zr2f+WBvyXv3kj30gUvs9x+51aGiQ/ui3Ex/wv4R3/
3NtAg66l61/qY/7/srzDV/9EAxe/ezYXMP+ZakK8m+00eChP316MeR8hva6p
tRtf70eKVDTm/eMZJ45SHw2I6aGOufv/K1uKWJeHaLCXQZRrpGE9+Ka7oWGU
Bs6u1xQUrmD9UizNlP6PBkXv0qUvY735+5IXPWqeIwSksTotj5JILfTK+yoR
R3g833r6pBfWR4fKaaILHEF/ZbYl04VEz+1VHEJkHGGPqcPqjxYkihZpsAlY
5QheYjYBeVJYD4/MVBVoOkKBacwJtVkqGulcaz281hF+BJU22w5R0fbnZ6y8
1zsCY1yT9rGeitYEbNziZukIiZffbrONp6KKvlQTR09H2LZ7kctdSSqaaKp5
Gr3fEXbVeD4unKQg6usJo7c+jpBetNnm5U8KupzG3mgZ6Ai+n2oW/66iIPft
4gbG5xyh2+JV/5oICpr3zofUvIvHe8bLVFucgvhJm4KVHzrC33d3/A5OEOiB
h0Tl4nxH6Mlovj/cj3k077bL1BNHsHkMTlUNmNe1/jl/njvChVOKhisrCCR6
ffNYbxm+XtTF3nJcH/MM2mLq3zrCwe2L3ghgvy8ufO9zRa0j1K3bVZOSiPlc
f2x1aYMjbP7us/US5r3EAblnt744QkuwADf+KK6fG7vFr7fh8VAfLEw7QKAS
0UfsuC4cbzPdcBk37J/T7PuDfzqCantAnwaDQE8OKm3wHXQE0d2kUa01gaRN
+sI8hh2x30iU6gQCecwver9jzBHeluxi7d5IoGdNYcsYE45QcSmwk65LINlM
hqfVjCMomZ33e7SWQIUlFz8vn0eH665Xs8JXY7998+ippUJ0aLNPnK5egccb
4bx6iQgdWMbzOyMxz4oOWFRLidFh4kpuUinmnStrra/4fDpIbNZn78V6QMpI
RkFIgg5H/7aviMF6oGTlf6XTknSQ7+YOrsV6wE2sw3V8IR3mnXe9ZIn1wMLB
CvERaTps73hc/mXu/cLG+w8GZOiwrfmjYj/mtfvTBHafLB287N9JBM2dJ5ge
PNElT4djO3T/hmO+P4l0Tf26lA4FJqIyUri9x8fGqlmJDitiU0/J4LY0d11/
gzIdMsj7Jpdx+6mJQnyNCh2YoWvXXJ47H2jVjGHVSjpUMI6KyggRSGbBt69l
anR4s4IVICGC4zdUHfZMnQ78cXGBEDzevZ/y1pRo0CH9yUnRufsDss+T3udp
0eFA/a6Gr3i+LzJPH7mvTYdHDFrMKxwPryjPZdkEHYL8pbaoYf0k50d7mU6l
g8jOys5xHE/E1/dMWUeHTG07IyusD+Q1hPLj19OhZ2zwrRnWAy8lf/JjDPD4
nHJkf+D1OzBSN3N2Ax26lVVMhIwIVIZu2J4woUNIRqVsmA2BvG+fGQowpcPZ
TaUTPThfll44kOgHdKznG7VytxPIZ4dRl6cFHXxXC2Yf88Z6ZLNqpKsVHUQn
63YeDsD6Vkuc6mxNh1wBHrUmhEDKYx+PMe3pkDy5qikR69eqWN/Fm9h06Hqw
olMf6wHlW/OeUbh00Nxu1pHxgUCHnsbtVeHTwVpR7Sy/g0AKvY9ezO6gwxay
uPIc3m8exsPeZW44Xq+n0wp0KEik1+/t1sN0SBs/rG+VjffnpODRDUfoIGX9
62xyMQXdk76kuiaADpufLu+araAgtnF+4IJgOgx8GqP8/kZBmbEjGjWhdBAf
uKI+sYqKNhv7hzHj6UBdISJ5KYWKEunC5JYEOsh0ivta3KOin3sSvugl0uFv
5kJ6zRMqiost0JFLpoOaP/cz7xMVdXwbbf+URgf6Uk/ZEVzP1k+GR1Vl0CHm
eaiY0DJcP6XlDB9n0WGf20XPOk0SrTPWv5B8B+e7mPjhK4D5E3vExPkRHYid
O+IjDpKoIUukzyGfDuefXnTROYb98NPLl0wLcb7LKR4KC8P+/lvhzxWP6ZCf
cKls7n6/2qRlovRTOmhLuO5zwH7tqHST+bxndLhiwVFbfQf7PeOxq12IDldd
tGJvYf770SMsPpTRoTp1kZs99vsVe+SHXpXT4ZCR7JlIzH+l4FvXCiroYKQd
sXkb9v/esQZbs6ro2P+NCzzD/EdZFcOX3+L5PEk3y8P8l33KvRHxDu+P24+v
GGL+763rtQmopcM779eldpj/pd+O/vWso8PrP4PHBzD/v9/e/S20gQ62simB
vph/Ml72H1Ma6fDC66vRAcxHU8LwdUkTHZbVhd9pxfzcN6ha+KEZ5x9RUvcS
8zUhVzJr8AvOr1myWwnzF/n9S5j/lQ6hJr5G3zGff63vCldvp8OJPZPcuff/
5P+98zfrpEND6/6OufOAzB8Xu2/vpsPdnYlZc/7/QHA6+8g3XA8y46/H4fbV
TTEWsd/pcEnpRVcS1g+vZgPW3/2B98frklLZufOAXrqqV/zC9cbUOlEQ6w+l
cAfZzgE6jH/aIuiO9Yml1Qbhqd90mB3xeLLxL4kOia8alR+mAztO5Wb4HxJd
eyvVozNKB6tVdsWWAzj+0eMf7MfosKnsH3myD+slWvcrz3E6mL4VdSK7SbR8
cW1+6AQdODMf8rd/JZH1h5KMlCk6NNq+a5z3iUT+lzMulczQwX3L5GmNOhK9
VTx2eFCQAZbdNMMhrO/GWtzc5oswIMFQOjCphESqN2gsdTEGTDTI51Y9JFGg
mrredgkGTDvyf5VdJ1FGz8JVR6QY0LjbRe9SPM63W//JxC5iwNeItxMjZ0m0
eu374ddLGGBy/vRPP1+sVwYed3XIMaD/lx/tyh4SHX+Y2TCpwIANh11v87fh
fNYLytNRZsC7objuF2ZY35ms9ktRZ8CR8M1vzoiT6ItD8B9/fQbI59BMXGOo
6MIhzaFVPAacf6miKhVGQbbprhVK2xiw6EJoafthChJrTLm+eAcDtv/RUm10
p6DThrI2sy4MgJffX6zbSkF+MwLpXzwYMKh54ITyQsz/dSaB9XsZYMPzQbsE
KOjX7gBalRcDegwfZnUNY168HpgoPMiAUe9Y23vNBOJFf2HFHWVA6ffn0g9u
z9VrOe3IQAbMVj9rMbiO/etvusCpIAYkv7zoIxdHIFtW5b0DJxnQIHPsalsw
5v0ZwTC30wy44CBoV+tLoFdFm7ZtD2XA/huiAirYT5koFYhYRzAgSPHHo14O
9rd2v1tMIxmQsmrNEncHzNcT2nn65xlw4MdVU1vsz/0e7okkohkw4GimdQ37
c2pnqsuqCwzgnPPI4Rtg/yTTul4plgHRj9ecCScJdNtCQWJxPAN+/RR3WbmG
QCuzY4pnLjOAX1yy9MFyArV+ror5e4UB6V2LnqUvJVCShLB7fxIDnD5+65aU
JRB3k5lR9zUGdJGbswcWYb75BEl/SWHAvYWXxK2wn32fWthbdxPP/5FPrzz2
u9ENQ6WVaQzwU3AV3Y39sLUwcel5BgPCkosXrcZ8FjHw3FeYxYC+JH60G+Zz
mWe62b3bDDDfeLtPGfP0ZNJXuYw7DCgy3XOYgXlrXL20P+kuA0rk0pzn7teP
T7HKYu8zQGjyzhMCtwuoF6+efciAp2yJ0x9w23fX24MnHzHgjeHFM39xf9R4
Ecsj+QxoU7Q+E4/5/PMVLDtQyICC+2nLcjCfb/0N/uNazIDUb4GVxuJYX2gW
V257zIDj8sY/rSRwvLYNp9CfMiBWT7Lq7UIcr/MU/63PGKCtNHq2QoZAV0v3
2pq+YMDCLpn1GxUIxBnMWKn/kgECGq2PVZVxvFa2j619hfeHwbafJ1UJVMtQ
qlF7zYAv6n5BjpoEOh/GyVCsZEBE8iaheAqBthbGHpN+w4Atu3iClti/o6Vi
GjPvcL5pFDT83UygE7abp0Zrcfy8ScUhWwIZHT/R8KuOARf1LF6yWATKbx85
+bmRAUnrZ0Uc9+D4Pz+XNNHEAGu5zW8KfPD4r68oWPaZAaxHF8ajgrD/3273
w/kr/nxXpm4ozl92Yzqr6xte/1MzCevKCdSXt+GgUB8DhjZsVn1dT6DjcbWR
6j9xO4xJf9hOoEzaxDOPQQbcV3d+4j9FoNEqhtavMQb8KF/53RH79cjb3zdL
/ofX1/jUHhUbClKOOOFMmcT1KPFE4cptFGSx5U68zywDLOQnrjw4RkEJzwSm
R8SYMKq5abd3KQWtz3tYP7WUCcmrQNXBgor1g2X/8mVMaCi5H6rOwf7cp0XU
bDkTfn1ULe/eQ0XhhJhJiCoTttgTo6JnqajxlsstEW0mvFIoD3SupKK9Z0aR
BsGEQbPjq/40UdGU2/mWrVQmCEoJfN/aS0XqqkXS53WZcL1ux16KMImOXJMK
XmjMhP6hM35uJiRaEJRxmdzEhM/3MmKTbUh0g78xl27GhN4xvq0/9u8Vcnu+
xW9hQkzbqWXzfLB/Hp2YzbdkQlublun9IMyLhlilj1uZoFZZJzt4BvMottRR
wR5/X5tuonqNRDkHmV4baEx4rukWJZWF+efQF76NzoTHb25Ghz7A9XPtyZtB
TCYoyi2IP1FMIo8Fsk+usZmwwdlAeuoFiSb67jSWcpmwtnnezclKEl2oNPv9
lc8EOz3ziWOY30Xh+9VXOjNB9vySZz9bSdTawFi9fCeen2/Pf4FdJJqnukFD
aTcThnJthWK/Y73ho6Kp4MYE3kfeFWo/9svPhLVk9zDBg9IRxxoika/EL63F
nkzIHivrn8a8TtxWv2bhPiaIqq5FxD/M+9vF2hL7mfDwctXmdszrzr8pa8W9
mVAwMu/t3Pv2ohbhhIgPE1SLVN7O/b6fiPeiCPri9Xi8r0kU85fRQafO+jHh
t6x92tzz+KNUQ3LKnwk+trum5p7XXz++fN1/R5ngW3Kiee6835dvhXTGApkg
taPUchbzunfpT52RICZk1h86/BL3L+lZpzt0nAm291fmiuDr6xYW6Q2cZIL/
Ap997/D4eEIp63+eZkI6NgvyePzHGWH630OZ8NTCOWPuvOL0m/sMesKZUCr8
LGnuPOPKAUfDzggc78K2f5I4Pv3GBhvaIplwifq23AvHT+a88saW80zYuTZ2
NR3H17BZ0Kg5mgnKHfOcn+P4O2n8MPp4gQmtG3dXFzWRKNT/vXFDLBPuNM0f
NML8fid9fdO7BCbcdvrR2I/12bBLqOmbRCacuNqjqvKERAr395pVXGWC/PoG
va5HJHK10TdH15kQ/HpNjzbWf5FXlm1+doMJpsJy3fmJJLr/bd6WJ6k4vjs7
PJqxfx8PqbUoyMTrN7X6w3QAiWKeeFpn32OCwdY8c2FbEuWJ02yyHjAhf+tI
cd4mEjVz19um5zJBY9uh3LnzrdRGBOyvFzBhXLu6YESeRCVrkx1jS3H8Fb6/
udxORV+PnabHPGfC8bPSYWuxXxes8mCcR0y40JB1IaaMihzc9Vjh5UxwOjqk
9DqTirquv+MGvmOC7kKyfZ8nFUktnHXe1Yrz/0G8ZHcfBdffC+6sNibsgN1W
zM8UlCOmst+qgwnvD8c9fPuGgqzmbQokepgQO29PzbccCjo5GhQ//osJfB+R
yLUHKcjed0HSrwEmeEZuu2K7k4KUBpNutv1mgoPxtbqLdAoq+l5yr3yECY3j
DQXJehQ0+GWsInYS1x/J8iuLcX0r5UXUhE0zYWaDefjLQVy/G+Uaj87ifD8g
zM7rJJBG7fpOJyEW9H5uG3WtwvXQtvy7owgLnkBalVYp5l0la3CzGAso6fFh
xrnY37/0m9SSYMEzOneImUQgwlRQUFmKBZ6XG2WcLxBo4kmc+KJFLHCWuDj1
PIxAiQW5cn9lWKB/SlMjAddzdx1Q7pNlQWqL5DpJDwLpPniv1iLPgnwBpYRv
Tpg3twfJl0osGOGD8Gs7Al1XP2lQoMwCG6eLqu+3YH+ZJrXptgoLwiKCnmw2
IdAGlZQtyStZ8EK4N0lVH+uXa4RtjBoLsn1NfL2pBGpUKKWfVmfB5z6xZk0t
AqUn2PEOa7Bgr1mcHVMN+7fFLc4eWiw4F3iGOoj5Z3rBy32bNgsaotKqpjAf
JSUmvOwJFiyLc7c6tYRAX86e8zWjsiDYvarkKNYX2cKKgbrrWGD7QUCuB/P3
aEj2ydW6LLi223x9FeazxYzhmaXrWTBceO7DKqwvZIIroyQMWHC2OPDSP8z3
jn/c+BlDFtzfpzE+dz7QQ//eq382suBYjPC++XP64s+Rmz3GLFi6uGKd9dzv
AQ6K3Pq0CceP6XBi7nmA0q+Ee2/NWJBjlLZz7vygPk/1/GfmLKDq/Kj+KjD3
+4n8x7lb8OcDPkmCuP/w3VtQhiULfqreD03F12e2NVQkbmWB4jRndTHWFyt3
uNacs2GBbpi/oBUe/+CnPx+O27GAk3/mpD2eXyk75IuPAwvKj9zofIP1xfl6
6U5XRxZUW1/hPcP6gk9L/c5hsGB9uunQahw/jWpy0JrFAvZ/cTcFcXxHt74Y
Nebg+RyY3sTE+iLWvG2e2jYWxM+kqVpiPWGwv8rebAcLqrzabYOwnmhJyLvi
5MyC+QP/PpF4vTX6IihXduP8m//BaQnWm+8W+wYWuLGAFEm6bsLFesp4x6v6
PThfdsTXt+7E471AbpP0YsF+sVsbAvwJ5FqimLnmAAuuFsjf2X+KQGJdQr+t
DrJguZZQTPV5HA/95vAQPxZ0zG9tQek4ni2nc8eCWGBkY5Gu+olAF0T2Ty45
wYKTxJ8EmW8E0iM5Vjqn8PVKmQnMEbxeoWta94exwK52U/FDaQqSXdMg1hnF
At+w5DVeNAqCo6t2Vl9nQeChOHHxBgrqvSmV03eDBUNHx870dlFQ1Jt/oyJp
LOh791S9ZoSCmpTfnYcsFlxsnd91U46KDrzyLyq8zwJCs1TnE5+KZAZc5n14
yIKgl9Z3/PZRUbG8jf3QIxYIH47JGTqG65fX8i7tIhbwVll+C0mmoqvSFVKp
z1mw2aupMegzFZka5fKfIRbUZvsI3uujom635IwvZSwQN/tBuf6PiqjFBzfK
VbJgYNuf9mxZEjV28MN137BgBj2yfqZGomMLtrx3rMb5VDNx5PQ6EpU7K+w5
/54FYqt9GoXsSOR1dl7u7XoWnFLbkFLKI9GiR78myj+w4IDIpx1y7lhvCKPY
2U84P1VH5icFk0iAmtOi/IUFizuiPJ9FkCiLl6Bh1MoC92NiSf5xJBrK2Vvq
38GCCyP6KRex3tC0yBjw7mIB/anvVQbWGy5fv6p49rDgbsz35pwi7LePLqXv
6mXBA2UfbtJzElUvYoVs62OBZn2L2rIKEgneiclj/sT5tuiIF7WGRBs2V3Xb
9bPAceFe//oPJLrlv8nKdIgFC20WHEHtJPoqFRhgOIz3yxb98PnfSCR7Oy97
3SgLVnl7nG39QSI7GPi8ZgzXFwEJ5oZBzMfPmhKrxlmwZX1C47JhEj32czVR
nmCBD+excgT210MSKd5yUzg/n+VxjmL/rZH16cbCGRYkXvOu+jVBImdTmTox
ATaEhpW0fMP8T/hkP2+eIBsiCvfKumO98PbQWd0JITbcXBoo54H1xLwFZW4j
Imwwa1uW+gu3N2RMJfSLseHU2w+XRnHbx8Sw4tt8Nixf7jc49zzh1kfff20S
bNBTVH4Xi/v7evCeVrMUGzLWbvFUx/pDVvz7tvpFbGh8lLjUZBLPL0016u1i
Nui7D3Kb8XhDjZxKXy1hQ9M+SvF/eD4lHxIHSuXYIKGs0p+K5/v7QL1KkQIb
pkKtKmpxPDREJekPFdlQdLlQL/wn1hM3rUKyl7FB2vaNWRmO56UNIXlpy9lw
InRA5nwHnl/90+7kFWwo+MEabv2C57d/TDZBlQ23ajLNShvx/IR1rGJWsWG+
1J3ANbU4XwxuZZ/SZMP7O85kAdaXre87PgeuYcPdrFadj1h/yuxbJuG3lg3Z
03VaUQ+xn78W6+1OsoH0D1rxPIVExeurbzjrsEF+0xZ/swSsf2tE6rh6bHB+
m+zhch6PVyBY18aQDVqcnZ9PHsH6aM+efxQzNnDyUnvjt5Lo4MxNLU1zNggf
zPKyMSZR5pUv21ZuYUNqV49uPhVf/61jqcxWNozNa+26h/fTINUo5B+NDSyz
Ba/jv1JR5vhCiZcubEiujU7Q8qCiPNPM0z272CDUJ03wsH9A4RvHxNzY8F9d
5k5v7C++Srt30jzZoJC+b8xNjYrk1zwubvVhw/TXWAfBNgpS96FRBPzYoFoi
N/b3HQXrx+70Vf5skNXrXj/+lIIczRde8Apkw9LYQ63Gydj/bHNzHz/Nhg6z
eyut+BSUeHP887IwNrDrk1vXW1NQ5rcYR7MzbEiMf7OCv4GCXvqWGEWcY8Oh
hc0ONEUKmjgntVg2ng2X5RYOHm4jkHhdeoRhAhu+AuVnSB2B5OU3TG1PZEN7
EiujtwzXz3TX72nJbDj5uhe9yibQgSfFz8gMvJ4qMKR7jEBBAg56rCw2qOsU
lzkfJFCkVVf20dts+DJb6DLpRqCsBsmEZ3fZcOZtcW4yHfvrpenzO++zoerr
yaG0rVi/uBieEs5lg182ktA0I1Dbz91edgVskNtet7uAJFD/un/tB4vYQFn/
VfQl1gcTR6M58SVs8M+6uZ2N9YH4M9XqwidscNJU1zuE+aUgVAyfS9lQXO9n
Jj/HNxv7oqnnbLDXlhWzxvxbf7Fz7cqXbHA0Tfshivm4+ePRtC2v2PBw9U4V
9gIC0ZdJKni+xvGX6s1fJ4b11O606POVbKhp/3AxRRjP/7aB4IM3bPh1+/zB
a5jXQQPVAfXVeH8WT3RpYz1wTm/3wGgNG7jZgVx7zPerx8Zcl9axIcjipvic
Hrj1IqrZuIEN0ZxNi6zm7jeIqNJ2NuL95uXIVcF/X2ZX9Cq0Ce+fWJHUSNx/
XZzdxlvNeP9NNYaH4+u3f+p48OYLzse0y4cX4/ENLj+qPtDKhubcu4+oePxT
bhLJ0u14vv0mO1qkCLQgJ3XR+k42HHnt6yaP5790SP8Mr5sN89aXJbTJ4/gY
VE8EfWODJ0GL08Xx0z++69CN72wIv2H+QRrHt3/oxq/iH2xo/XbhKn9On+35
6lH/iw1Zqor2anh9pB23OwsPsWGgvK5dz5RAla+uNi8fxuOfdUwKsJo7X+oT
y3CUDcYJjaPrHXF/qmxbr3E2WMoVvpdxJVBGYvzrsAk2iDpGKVMPEGi7RD2k
TLFBSuTt7ZKjBKoadTCsE+CA532F54tiCJRZuVXdYD4HKhfp+Xk/J9AOk4ib
jhIckLIYV7hbjfXbo3KlfVIcCDu05MGmzwQ6nWy++PpiDsw/aZTK/EsgJ2/j
mXlKHLAqbMyqWYf5v4RsrtHmwDnJ5RYujyio+qw36zvBAXPrj8S8MgoKnbpb
K0BywOBy6ppCrAeGvmm91tPjQMRWo9FNoxT0rkQtL8mYA6rfyvYwDKkojLKb
kr+JAw0fzR9NbqUio/Sb2e/M8Pe76FrxWA9kRynfnN3CgV3vk/i+mP/hLvLR
e+zxeNIPlgY9piLjD2yxUzQOGJ4xMhd/Q0XDWy+FXqVzYG9TsbtLMxXt0pE+
Vs3G4xEYeMQaoyIT4QUeOs64/9yjbkO4fo0EWnfa7uTAfYW4QLoJ9v8DEU7u
uznQpLbLa5sNiZZ+EmJd2cOBUeqSVJ4r/v6dabNpbw4ccHRUv32RRCYXotOG
fTjgVHROeHMSicL9lgn1+XJAdv+BN0HpmDfGGysajnCgQi/S/Fk+rrcrqjSr
AjgQej22vuwpru9CvHPPjnFgvOergMsrEhm887fPPoHX69kySVo9iU7mCj1I
OcUBo6iS2JufSFSREL/oUggHGKUvRE9/JdHCY6q+kWEcCIqMEhnE/pbnnNtw
4gwHTHJ7zfqw/001N1t/+CxeX2encG/sj/tW117ee44DXU4hz45j/7xugfM/
5ygObLxhMCw7SqLAwV98VgwHqvp7LPWx/0YNQU+sL3LAve7ReCv25+LF85VN
4ziwMuq+pwTmN/3a1RN6lziwR2tCcu7/ASWd0mzXusyBpQm/Tk1g/na5FYHK
FQ6syFt55Anms7a1ZfqSJLx+hy4/n7t/4Ec0Cs2/xgH12vt2c+cDPpF22zNz
nQOuzRvXKOG24N8/FSM3OHAk0S/kN+7f9vNprR+pHDj+6/c1W3z9+GeLzrel
cyD/wJWva7G+aEm78etDJgdu6oRXXcLjV4+gOLy5xYHSjO+ToXh+B7xKHzzP
5oAyp1tvAs+/gGYnXZDDAe3vO2wmcHymdL/43rnHATfJ1zrhfSSyUNj34cYD
Dux/1DtztZtE0ZP/1ifk4nzZca1tYxvWj+0RiefyOLCu5qzS3mYSLS+XGz9Z
wAHh2WqF1Q0k8sjO3OZfxAHTM/e5ftUkehCt93RfCQeGDxn7McpJZMphnGSX
ciDthi75roBEERs72m2ec6Bj4ZJz+++RqHa5j7kZwuszeIfMzCDRzt5oYe1y
DkhXiPT+iMW8D6g6P1vNgViKVKGYJ4mqdvD6R2twPuofDHm0g0TS0Ovw8z0H
+poujIrRSZQmLrz44wcOnN2/anGFIYnKksyu5LRwoHnmlPAXIRIJlxZlcH5x
QHf6iykljorUHVJtjgzg/DSTb6s9TUUWbed+J/zmgMBoA2l/CO9fAWfjxhG8
Ppq3Y/tpWJ9bCn1gTnHgYum3Y9YSVCRQ6yhIl+ICvyTOKSmcglbu3Jjts4gL
zUlqMVR/7B+G1GgXF3Phx/H41b/cKOiUzFhSrRwXtAdMP/VvoaAZ7nUdBxUu
aGXeg4uiFKTSd+bTgZVcMEs6ON46d375MZ8T0WpcOLwmS/XIDwKduLb5TbUG
F9adeP07oQbX9/a+XbYkF8j4tcdmsL9X9m0Q9dLhwramL1aS2N+bCJbeO6fH
BdX1F/ihoQQKVr84XmXIBYkz1WsLcH1NLgy80beRC0MiV2SO4vr7xMrVQtyE
C1kcasQ9PubrXv3YrcCF+wOlEyG4fitNqBh4bubCy0J3JQ1c342ixFsjLLgw
861S0MYA12vl4ZBbVlzo+rf5Vz/288fut2hWWHPhiein3iWYF1dNX9d8s+XC
Q82E7hfYT5a8f3BYxIELumsX5gwvI1DzrquKqx25MDHY0nof82j8T8gLCwYX
qtxVx4cXY16F7d/jzuICw0ed8QrzbIMsRyKcw4X9+f1yKzHv+FmmjzJ4XEgJ
HLRfgHkYYKDFe7WNCzKPUGMo5mVi5eLprh14/Jva3M5jnhbxJ9MFXbgQcdov
UhXztulHj7XaLi6k2upkz/n3saDaQXNXLjTpGgnM8VpesiRhtzsXfHeIZW3F
bf2UNKMQDy7U3fMMXYH/nk2N6kjdywWjiPAdZ3H//i/8I5AXF3Z2D7+d+/9C
CXQXouMAF9L+vN8sgsdX0Lm1YfYgzgepH5JKePyNfjqBK3y5cEzpt20pnt+I
0DIVs8NcGKEUjv3E888U5uQYHeFCnwMF6HPnAYlcNDAI4MLV7EONFBw/MdE3
ZTrHuGBYHx4SunLufQ0hR0owFwJLKeP2GgTaJ7apResEF5hK8C6KwOspHuCp
fooLPtUT/pv0CHR8/q9Ty8K40OD9MmHYnECUBaslFc5wIX6k5+CwDdZjC3Ze
lTnLBUHtVz3OTAKB5Ifc+VFc2DD9douPO4GEFz3t/BfPBb8/vunGmM+Fi/56
jyRw4dQ6v1/8qwTykCYnBhO5cMD/Y0xtBub54gyZ3uS5/jTPFj8lULRs1JbG
dC6Ey+w5SvwmkKzSjqzcPC7Mr/YXerObgl4rXda5V8CFa3vPH/9ziIKOLnv/
7HYRF+w6ZxQ3naagZuUtTTeecKEguCaPepOCrq9YKxZTxoV74fOPSs/p69WT
e/c14P6FMpCXExV9XK3/170Rx8cz+vD4fiqK0PAJ2dXEBaGMqNT9wVTUp9md
xPvChcW3v5qPJFHRPe3qt5ZdXFD4M7pnxUcqcl4rwjPv4cKyYMuIQ91UtJAw
6zbp5ULht1uV5/5Q0SFK/qTeT5x/7KJOUSkS6a+7RqgNc2E2d69pLZDows6T
z5eM4vVIENKtsMf8urCbLjKG98dGncs+fBJdH9D07/uPC7Gm659UHyTRmLKE
6JdJnK/TaeuPHSORo/3gleppnC+2MnE1YZgndwuePpjHg+yQ3Ra7r2Aef7ni
kCrEg4oxialrqSQqmh/cHifCg38ennz/OyTat9dc6Mh8HjibR5f+fYzr5RX1
yx4SPDiRW96W/JJEypVimnwpHizPDmj5WEWiutW1tsaLeaAwW3FHtAnzjvOo
lVjCg/7na1z+a8H6IDzhoIocD7xmHfPn3s9vyw8QkFbgwaVVW5yie7H/6t4e
P08R91/ZpaH9i0SxMqbqI0o80BWlTLF+k+inuWpRjzIPQvmnO8RHMJ98ha2b
VHhgNt00snWMRDdSv3+uXMmDztZJX2nM6/H3b/c/VuOBUGtJ3m7sd5mz96dz
1HnQETezxhjz9B417uJ1DTy/bSJ7r2Nei7j4q17Q4sHXAk/FM5i/LjG8/FPa
PEib0Rf7i9slpUaWvgQPxHcLKfTjtkz/8k+uVB7cX9Jv6zX3/H7ZvH3sdTxo
aUl46YP7q7DtmbDUxfOpW1U0hXm9Mqgy2nA9Hq+b7unFeDxBd3JU1hjwYG1e
yaUH2H9/aI7JVdrAg0yN4dON2H8T4r6bJY14sG6v8WgY9t8RhuzGaWMeaNz9
UfgM++8OD0OP35vw9dyX5cyd12+UqDTeYcaDvYdC6z5g/53wevpcgzkP6nM1
LfKw/x4c7VhWvoUHb021jFfg9bBWL79faMmDVp0DosofMR9Zt81ub+WBoTxv
cQ723xOh5+uv2vDgt6pf59tKErHzvN3O2+H82CQtfxphPbR4/VlvRx4oBb7I
fpBLIldQUNzJ4MGOs01la7NJVOozkUNn8eBwY3KJxU0S+dSiWj0eD64uPFfE
jCZRU5SD/IQLD/hmhNcKrC/XPV2X/WsXD9TviWg85ZLo3M8lRl9d8Xqdz/kn
Yof1ps0XZ+TBg8Zd66bzdUmUIeqZFXGQB+PfPLe/mqGixq7M4PRDPFjhoXl2
5jcVib7oYjz344GD/ibBfx1UtDfAZebvUR7My717Z10ZFRF9HN6eUzzgHirI
NwuloqI3FvMtYnkwctnuYekUBX3PCm3fGc8Dwa99ju2/KGhpKCoMTuDBg+N+
kWItFBRsZOKaf5UH9KzdAcGPMc/v6j1VS+MB+aDH5XAABb2JVvOel8eDewWv
P12dnOPlri3LC/B+GXppYzhAIMLyhuLGIrz/7PcvVWsn0IVpxYpDT3iw8PC4
U/8rAr34zLseXcqD7ytSXT8UEWio8LJf9nMcrzLXLrkcAjEPLl7RUcaDyHNb
dz6NI1CYrePfyXIe6Kn9t3J1BOaHRky1QiUPYlSEev4FYb/bLh7oWM2DK4dS
Snvmns8+taLtr+HB87Tg+8JO2J9eCVc/+54H05b32Um4frc6CtQ//8ADYzfG
8rW43ksRpre/fORBTV6tPGUj1h/ix0+MfcL746zTkfs6BDrU85gl84UHllRf
2gNtAqWhf2uorTxIeFJ7SUedQA3X9QVs23igVjAus1EF8+DY4aY9HTyw/5jv
X7EU85Lz6F5IFw+2C8SatCzBPND5HZrSw4PzUcerAhcR6IoUZdvjXh6ICXrS
UyUwH354kR/7ePDCv+cbU5xA/73OFvnzE9eLw98Ox4kQSDu9t0VygAeuL/2f
Owlh/3dSPU/rNw8Evp52LcQ8jt7uGmnxhwezu3I/XsO8fm6Q6rJrhAcPWeYe
0nP/v0embf3xvzzYv3fEaAlu57kc+HP4Hw9EKl3IRNz2z5m4v/8/PJ8Dr7oT
cH8GY5FebpM4f71PKS3C1/vPXEFzxzQPhielAoXxeEpjsrqZszzQiV4e5o/5
fvKzXqrtPD54U+9numC+w+oyp81CfDBU0tEqw3wX8qUrGonwQcflufENzPeK
0raPOmJ8SLm7aeiPHIEixb3j18zng4xO1sZSJQLZsidpqhJ82Hd04+/JFXi9
Us9JKErxYZH2x+qHqwlU90uhSnoRH47VGh5sWkugeMNb4eKL+ZCzfse2g7o4
P96XTf+T5UNlr0rMLyDQFyXGk9/yfBAz0mfXWBPoukf70e9L+XA1un63IoNA
qjOTv5uU+bDH7xTZh/Vhj835e7UqfPha5JvqgfXjrctL91Ws5MNCu6InVtif
r6XodxWq84G7QNdSLYpAg4GvbtzX4APp7nJnaSKBcssZO7K0+CAuLZDqkYbz
welgYwLBh0F5MbOZEgKZRd2uOLwex4Mz/PrtLwIJftIP22+A43WZ95n4j0Dl
auVmbhv4YD0/50wt1ss2TzpKmCZ8OLXyw95XahTE+qF4V8eCD/p9SglLnCnI
c2v0xd8sPsDep7PazRSkfUnJ/juHD6Pqml87vlNQf1u2eDsPx8frfez1fxTk
e/R1SO0OPqT/7jOTV6Ci4KyZw/fd+OCQ17Yhm0NFF4V8+fsP8+GV3ezx6Rrs
FwQHclKO8EFo0+zC0a9UNC6wb/p9AP786eqC2wPYn8/sSl9/nA8/Hzk560li
vzzdOupxkg8rhBPWCi4j0ZtJ/tak03zIviCaGbyGRLr/0funw/nQrO+30dly
7n3wd6brzvJB5YLJYCmTRNfGrONcz/HhwlnvU0U7sZ8ZBYPKGD6ccKrN9QzE
/BoujfzvIh+cbv3XphBOIu8/G1rWxvNhdvVLMRb2802D607HJvKBNe9hp1Mm
ic4P3Gsou8oH2kiz0eoHJDLr11r9Nxmv59+LHfuLSTT6MzNAM4UPy5RrRamY
B9k/Vr7ddpMPjmtD5u/DesCp77pydBofUr253kp1JFr8fanP8ww+HNoa1GE2
5+e/JbwcyuJDmYWd8Sfs54N6pGVXZfNhy0GBkDbsN6nd0R6cHD7I5m/uYP0g
UXen+OOz9/jQu+Fxvj7m39WOcIknD/hgszcyNBTz0b5dwKU/lw9VF14JbMR6
QKDteK5KPh+SR+sW8bEeKGwdF2QU8iFjK3rehvnr1eLPCSvmQ4P5Jdu55/8q
X4ZuFz7mQ49/oMpKzPOG5gMT35/yoXXN+IfPuH32U5+90nOc/1ZL9ObOAzZp
cr9pj/hgvo6texK3hxo7/pwsw/HOqh/bi/mf+cHJ4lE5H05eXNX4GPN/W0Nz
YncFH5g1Nva+2K8vrGf/kHvDh6XzziyKxX697H2dsXU1Xl8v1Sn50bnzEe0v
BNXg/duppyKG/framqqOe+/5oDVp/XA31kcd1RZ67fV8sIwQldfC+inhLTqz
uBHv310vvu3AvLd+Y9K8pYkPm77+93XmM4mmK0u0jzbj+Nf3/ZD5gP3569z3
X1r5ELwrEiW+IpFSOaEm1c6Hl4fOGkg8JdH7smx/s04+HAn0kZt4RKINKFUx
8xsfmmIm1Jk3SNT/XPlA03c+7FjRvfnlJawfnl19Lv6TD3/Io+lFkSRa8DTW
zXsQx5cXdc3cl0TPH0sW3RziQ2BF6dY2dxIdLokUbxjmw8C+j/xFWM+2Fp6+
b/AP15PqSmPTTVj/FUzN7v2PD/mzt1dZkCSyzA9kXpvkw401ksmDK7E+eTSa
WTPNB93tB/6Yy5DoQe6hf7OzfHC9eSZxM/bz/wMsa21Y
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, -16.1},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{1161.484375, Automatic},
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{{0, 100}, {-15.999999912207889`, -14.000000006775206`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.650824107011279*^9, 3.650824121589992*^9}, 
   3.650824157971504*^9, {3.650824194621662*^9, 3.6508242234471693`*^9}, {
   3.650824269130341*^9, 3.6508243205011663`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"FullSimplify", "[", "EXSin", "]"}], "\[IndentingNewLine]", 
 RowBox[{"FullSimplify", "[", "VarXSin", "]"}]}], "Input",
 CellChangeTimes->{{3.640366239574079*^9, 3.640366253476851*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  RowBox[{"(", 
   RowBox[{"X0", "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "f"}], " ", "T"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", "b1"}], " ", 
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"f", " ", "T"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "\[Omega]1"}], "+", 
        RowBox[{"a1", " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[ExponentialE]", "T"], "-", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"f", " ", "T"}]]}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
           SuperscriptBox["\[Omega]1", "2"]}], ")"}]}], "+", 
        RowBox[{"b1", " ", 
         SuperscriptBox["\[ExponentialE]", "T"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Omega]1", " ", 
            RowBox[{"Cos", "[", 
             RowBox[{"T", " ", "\[Omega]1"}], "]"}]}], "+", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
            RowBox[{"Sin", "[", 
             RowBox[{"T", " ", "\[Omega]1"}], "]"}]}]}], ")"}]}]}], ")"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
      SuperscriptBox["\[Omega]1", "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.640366259137096*^9, 3.640438065352482*^9, 
  3.6508243402753487`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["a2", "2"]}], "+", 
      SuperscriptBox["b2", "2"]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["b2", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
      SuperscriptBox["\[Omega]2", "2"]}]], "+", 
    FractionBox[
     RowBox[{"8", " ", "a2", " ", "b2", " ", "\[Omega]2"}], 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"]}], "+", 
      SuperscriptBox["\[Omega]2", "2"]}]], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"2", " ", 
          SuperscriptBox["a2", "2"]}], "+", 
         SuperscriptBox["b2", "2"]}], 
        RowBox[{"1", "-", "f"}]], "-", 
       FractionBox[
        RowBox[{"8", " ", "a2", " ", "b2", " ", "\[Omega]2", " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"]}], "+", 
         SuperscriptBox["\[Omega]2", "2"]}]], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["b2", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
         RowBox[{"Cos", "[", 
          RowBox[{"2", " ", "T", " ", "\[Omega]2"}], "]"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
         SuperscriptBox["\[Omega]2", "2"]}]], "-", 
       FractionBox[
        RowBox[{"16", " ", "a2", " ", "b2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], 
        RowBox[{
         RowBox[{"4", " ", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"]}], "+", 
         SuperscriptBox["\[Omega]2", "2"]}]], "-", 
       FractionBox[
        RowBox[{
         SuperscriptBox["b2", "2"], " ", "\[Omega]2", " ", 
         RowBox[{"Sin", "[", 
          RowBox[{"2", " ", "T", " ", "\[Omega]2"}], "]"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
         SuperscriptBox["\[Omega]2", "2"]}]]}], ")"}]}]}], ")"}]}]], "Output",\

 CellChangeTimes->{3.640366259137096*^9, 3.640438065352482*^9, 
  3.6508243760842524`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Assuming", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"f", "<=", "1"}], "&&", 
    RowBox[{"f", ">", "0"}]}], ",", 
   RowBox[{"Limit", "[", 
    RowBox[{"EXSin", ",", 
     RowBox[{"T", "\[Rule]", "Infinity"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.650824357349495*^9, 3.650824403124486*^9}, {
  3.650824444583528*^9, 3.650824444874889*^9}}],

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "f"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"a1", "-", 
          RowBox[{"a1", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"T", "-", 
             RowBox[{"f", " ", "T"}]}]]}]}], 
         RowBox[{"1", "-", "f"}]]}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "f"}], " ", "T"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b1", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"f", " ", "T"}]], " ", "\[Omega]1"}], "-", 
           RowBox[{"b1", " ", 
            SuperscriptBox["\[ExponentialE]", "T"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Omega]1", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"T", " ", "\[Omega]1"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"T", " ", "\[Omega]1"}], "]"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
         SuperscriptBox["\[Omega]1", "2"]}]]}], ")"}]}]}], ",", 
   RowBox[{"T", "\[Rule]", "\[Infinity]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.650824413379537*^9, 3.650824452934237*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"EXSinStationary", " ", "=", " ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"a1", "+", 
    FractionBox[
     RowBox[{" ", 
      RowBox[{
       RowBox[{"-", "b1"}], "*", 
       RowBox[{"(", 
        RowBox[{"1", "-", "f"}], ")"}], " ", "*", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"\[Omega]1", " ", 
          RowBox[{"Cos", "[", 
           RowBox[{"T", " ", "\[Omega]1"}], "]"}]}], "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
          RowBox[{"Sin", "[", 
           RowBox[{"T", " ", "\[Omega]1"}], "]"}]}]}], ")"}]}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
      SuperscriptBox["\[Omega]1", "2"]}]]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"VarXSinStationary", "=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    FractionBox["1", "4"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{
        RowBox[{"2", " ", 
         SuperscriptBox["a2", "2"]}], "+", 
        SuperscriptBox["b2", "2"]}], 
       RowBox[{"1", "-", "f"}]], "-", 
      FractionBox[
       RowBox[{"8", " ", "a2", " ", "b2", " ", "\[Omega]2", " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"]}], "+", 
        SuperscriptBox["\[Omega]2", "2"]}]], "+", 
      FractionBox[
       RowBox[{
        SuperscriptBox["b2", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
        RowBox[{"Cos", "[", 
         RowBox[{"2", " ", "T", " ", "\[Omega]2"}], "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
        SuperscriptBox["\[Omega]2", "2"]}]], "-", 
      FractionBox[
       RowBox[{"16", " ", "a2", " ", "b2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"]}], "+", 
        SuperscriptBox["\[Omega]2", "2"]}]], "-", 
      FractionBox[
       RowBox[{
        SuperscriptBox["b2", "2"], " ", "\[Omega]2", " ", 
        RowBox[{"Sin", "[", 
         RowBox[{"2", " ", "T", " ", "\[Omega]2"}], "]"}]}], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
        SuperscriptBox["\[Omega]2", "2"]}]]}], ")"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.640437857830289*^9, 3.6404379425399027`*^9}, {
  3.640438914791563*^9, 3.640438925217229*^9}, {3.646160449083912*^9, 
  3.646160469811837*^9}}],

Cell[BoxData[
 RowBox[{"a1", "+", 
  FractionBox[
   RowBox[{"b1", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"\[Omega]1", " ", 
       RowBox[{"Cos", "[", 
        RowBox[{"T", " ", "\[Omega]1"}], "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"T", " ", "\[Omega]1"}], "]"}]}]}], ")"}]}], 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
    SuperscriptBox["\[Omega]1", "2"]}]]}]], "Output",
 CellChangeTimes->{3.640437943323193*^9, 3.6404381207932463`*^9, 
  3.6404389265781717`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"2", " ", 
       SuperscriptBox["a2", "2"]}], "+", 
      SuperscriptBox["b2", "2"]}], 
     RowBox[{"1", "-", "f"}]], "-", 
    FractionBox[
     RowBox[{"8", " ", "a2", " ", "b2", " ", "\[Omega]2", " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"]}], "+", 
      SuperscriptBox["\[Omega]2", "2"]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["b2", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
      RowBox[{"Cos", "[", 
       RowBox[{"2", " ", "T", " ", "\[Omega]2"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
      SuperscriptBox["\[Omega]2", "2"]}]], "-", 
    FractionBox[
     RowBox[{"16", " ", "a2", " ", "b2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], 
     RowBox[{
      RowBox[{"4", " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"]}], "+", 
      SuperscriptBox["\[Omega]2", "2"]}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["b2", "2"], " ", "\[Omega]2", " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"2", " ", "T", " ", "\[Omega]2"}], "]"}]}], 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
      SuperscriptBox["\[Omega]2", "2"]}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.640437943323193*^9, 3.6404381207932463`*^9, 
  3.6404389303376427`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"EXSin", ",", "EXSinStationary", ",", "\[IndentingNewLine]", 
        RowBox[{"a1", "+", 
         RowBox[{"b1", "*", 
          RowBox[{"Sin", "[", 
           RowBox[{"\[Omega]1", "*", "T"}], "]"}]}]}]}], "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a1", "\[Rule]", "1"}], ",", 
        RowBox[{"b1", "\[Rule]", "0.5"}], ",", 
        RowBox[{"X0", "\[Rule]", 
         RowBox[{"-", "10"}]}], ",", 
        RowBox[{"f", "\[Rule]", "F"}], ",", 
        RowBox[{"\[Omega]1", "\[Rule]", "Omega1"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "5500", ",", "5550"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "3"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"F", ",", "0", ",", "0.99"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Omega1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6403663611281223`*^9, 3.640366575675044*^9}, {
   3.640366624920252*^9, 3.640366632861176*^9}, {3.6403666753635693`*^9, 
   3.640366677716364*^9}, 3.640366788522066*^9, {3.640372558679709*^9, 
   3.640372589886297*^9}, {3.6403726386920757`*^9, 3.6403726392181463`*^9}, {
   3.640437997318633*^9, 3.640437998836937*^9}, {3.640438129308407*^9, 
   3.640438179247428*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`F$$ = 0.632, $CellContext`Omega1$$ = 
    3.6945129606215965`, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`F$$], 0, 0.99}, {
      Hold[$CellContext`Omega1$$], 0, 2 Pi}}, Typeset`size$$ = {
    360., {115., 119.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`F$104060$$ = 
    0, $CellContext`Omega1$104061$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`F$$ = 0, $CellContext`Omega1$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`F$$, $CellContext`F$104060$$, 0], 
        Hold[$CellContext`Omega1$$, $CellContext`Omega1$104061$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        ReplaceAll[{$CellContext`EXSin, $CellContext`EXSinStationary, \
$CellContext`a1 + $CellContext`b1 
           Sin[$CellContext`\[Omega]1 $CellContext`T]}, {$CellContext`a1 -> 
          1, $CellContext`b1 -> 
          0.5, $CellContext`X0 -> -10, $CellContext`f -> $CellContext`F$$, \
$CellContext`\[Omega]1 -> $CellContext`Omega1$$}], {$CellContext`T, 5500, 
         5550}, PlotRange -> {-1, 3}], 
      "Specifications" :> {{$CellContext`F$$, 0, 
         0.99}, {$CellContext`Omega1$$, 0, 2 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {173., 178.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.640366415768352*^9, 3.6403664328768883`*^9}, 
   3.640366463427246*^9, {3.640366501059119*^9, 3.640366576161467*^9}, 
   3.640366636918421*^9, 3.640366678188723*^9, {3.6403667890239067`*^9, 
   3.64036679238546*^9}, 3.640372559105184*^9, 3.640372590360084*^9, 
   3.640372639592436*^9, {3.640438136496874*^9, 3.640438179613957*^9}, 
   3.640438935497764*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"{", "EXSin", "}"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"a1", "\[Rule]", "1"}], ",", 
        RowBox[{"b1", "\[Rule]", "1"}], ",", 
        RowBox[{"X0", "\[Rule]", 
         RowBox[{"-", "10"}]}], ",", 
        RowBox[{"f", "\[Rule]", "F"}], ",", 
        RowBox[{"\[Omega]1", "\[Rule]", "Omega1"}]}], "}"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"T", ",", "90", ",", "100"}], "}"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"-", "1"}], ",", "3"}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"F", ",", "0.0001", ",", "0.99"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"Omega1", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.640366708786172*^9, 3.640366709921515*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`F$$ = 0.44, $CellContext`Omega1$$ = 
    4.09663682028109, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`F$$], 0.0001, 0.99}, {
      Hold[$CellContext`Omega1$$], 0, 2 Pi}}, Typeset`size$$ = {
    360., {113., 117.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`F$2219175$$ = 
    0, $CellContext`Omega1$2219176$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`F$$ = 0.0001, $CellContext`Omega1$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`F$$, $CellContext`F$2219175$$, 0], 
        Hold[$CellContext`Omega1$$, $CellContext`Omega1$2219176$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Plot[
        ReplaceAll[{$CellContext`EXSin}, {$CellContext`a1 -> 
          1, $CellContext`b1 -> 
          1, $CellContext`X0 -> -10, $CellContext`f -> $CellContext`F$$, \
$CellContext`\[Omega]1 -> $CellContext`Omega1$$}], {$CellContext`T, 90, 100}, 
        PlotRange -> {-1, 3}], 
      "Specifications" :> {{$CellContext`F$$, 0.0001, 
         0.99}, {$CellContext`Omega1$$, 0, 2 Pi}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{405., {171., 176.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{3.640366710393865*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "b1"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "-", "f"}], ")"}], "*", "w1"}], ")"}], "^", "2"}]], "Input",\

 CellChangeTimes->{{3.640529925907968*^9, 3.640529935210972*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["b1", "2"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "-", "f"}], ")"}], "2"], " ", 
  SuperscriptBox["w1", "2"]}]], "Output",
 CellChangeTimes->{3.640529935628449*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Sqrt", "[", 
   RowBox[{
    RowBox[{"b1", "^", "2"}], "*", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"1", "-", "f"}], ")"}], "2"], " ", 
       SuperscriptBox["w1", "2"]}]}], ")"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.640529977176545*^9, 3.640530026722138*^9}}],

Cell[BoxData[
 SqrtBox[
  RowBox[{
   SuperscriptBox["b1", "2"], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
      SuperscriptBox["w1", "2"]}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.640530011290501*^9, 3.640530030489539*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   SqrtBox[
    RowBox[{
     SuperscriptBox["b1", "2"], " ", 
     RowBox[{"(", 
      RowBox[{"1", "+", 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
        SuperscriptBox["w1", "2"]}]}], ")"}]}]], 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"f", "-", "1"}], ")"}], "^", "2"}], "+", 
    RowBox[{"w1", "^", "2"}]}]], "]"}]], "Input",
 CellChangeTimes->{{3.640530255712913*^9, 3.640530274827202*^9}}],

Cell[BoxData[
 FractionBox[
  SqrtBox[
   RowBox[{
    SuperscriptBox["b1", "2"], " ", 
    RowBox[{"(", 
     RowBox[{"1", "+", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
       SuperscriptBox["w1", "2"]}]}], ")"}]}]], 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
   SuperscriptBox["w1", "2"]}]]], "Output",
 CellChangeTimes->{3.640530275253292*^9}]
}, Open  ]],

Cell[TextData[{
 "\n",
 Cell[BoxData[{
  RowBox[{
   RowBox[{"EXStationary", " ", "=", " ", 
    RowBox[{"a1", " ", "+", " ", 
     RowBox[{
      FractionBox[
       RowBox[{"b1", "*", "\[Lambda]"}], 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Lambda]", "2"], "+", 
         SuperscriptBox["\[Omega]", "2"]}]]], "*", 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"\[Omega]", " ", "t"}], " ", "+", " ", 
        RowBox[{"ArcTan", "[", 
         FractionBox["\[Omega]", "\[Lambda]"], "]"}]}], "]"}]}]}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"VarXStationary", " ", "=", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       FractionBox["1", "4"], "\[Lambda]", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"2", 
          SuperscriptBox["a2", "2"]}], "+", 
         SuperscriptBox["b2", "2"]}], ")"}]}], " ", "+", " ", 
      RowBox[{
       FractionBox[
        RowBox[{"2", "a2", " ", "b2", " ", 
         SuperscriptBox["\[Lambda]", "2"]}], 
        SqrtBox[
         RowBox[{
          RowBox[{"4", 
           SuperscriptBox["\[Lambda]", "2"]}], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]], 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"\[Omega]", " ", "t"}], " ", "+", " ", 
         RowBox[{"ArcTan", "[", 
          FractionBox["\[Omega]", 
           RowBox[{"2", "\[Lambda]"}]], "]"}]}], "]"}]}], " ", "-", " ", 
      RowBox[{
       FractionBox[
        RowBox[{
         SuperscriptBox["b2", "2"], " ", 
         SuperscriptBox["\[Lambda]", "2"]}], 
        RowBox[{"4", 
         SqrtBox[
          RowBox[{
           SuperscriptBox["\[Lambda]", "2"], "+", 
           SuperscriptBox["\[Omega]", "2"]}]]}]], 
       RowBox[{"Sin", "[", 
        RowBox[{
         RowBox[{"2", "\[Omega]", " ", "t"}], " ", "+", " ", 
         RowBox[{"ArcTan", "[", 
          FractionBox["\[Lambda]", "\[Omega]"], "]"}]}], "]"}]}]}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"a2", "\[Rule]", 
        RowBox[{"Sqrt", "[", "aa2", "]"}]}], ",", 
       RowBox[{"b2", "\[Rule]", 
        RowBox[{"Sqrt", "[", "bb2", "]"}]}]}], "}"}]}]}], ";"}]}],
  CellChangeTimes->{{3.646160517343978*^9, 3.646160581988695*^9}, {
   3.6461606427020597`*^9, 3.646160844554236*^9}, {3.65081212175695*^9, 
   3.65081212343993*^9}, {3.650812302209813*^9, 3.650812326441657*^9}, {
   3.650822468570436*^9, 3.650822471369981*^9}, {3.650822577675666*^9, 
   3.6508225880588837`*^9}}],
 "\n\nFROM Notes..."
}], "Text",
 CellChangeTimes->{{3.6461605097096987`*^9, 3.6461605141744347`*^9}, 
   3.650822797952697*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"EXStationary", " ", "=", " ", 
   RowBox[{"a1", " ", "+", " ", 
    RowBox[{
     FractionBox[
      RowBox[{"b1", "*", "\[Lambda]"}], 
      SqrtBox[
       RowBox[{
        SuperscriptBox["\[Lambda]", "2"], "+", 
        SuperscriptBox["\[Omega]", "2"]}]]], "*", 
     RowBox[{"Sin", "[", 
      RowBox[{
       RowBox[{"\[Omega]", " ", "t"}], " ", "+", " ", 
       RowBox[{"ArcTan", "[", 
        FractionBox["\[Omega]", "\[Lambda]"], "]"}]}], "]"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VarXStationary", " ", "=", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "4"], "\[Lambda]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"2", 
         SuperscriptBox["a2", "2"]}], "+", 
        SuperscriptBox["b2", "2"]}], ")"}]}], " ", "+", " ", 
     RowBox[{
      FractionBox[
       RowBox[{"2", "a2", " ", "b2", " ", 
        SuperscriptBox["\[Lambda]", "2"]}], 
       SqrtBox[
        RowBox[{
         RowBox[{"4", 
          SuperscriptBox["\[Lambda]", "2"]}], "+", 
         SuperscriptBox["\[Omega]", "2"]}]]], 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"\[Omega]", " ", "t"}], " ", "+", " ", 
        RowBox[{"ArcTan", "[", 
         FractionBox["\[Omega]", 
          RowBox[{"2", "\[Lambda]"}]], "]"}]}], "]"}]}], " ", "-", " ", 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox["b2", "2"], " ", 
        SuperscriptBox["\[Lambda]", "2"]}], 
       RowBox[{"4", 
        SqrtBox[
         RowBox[{
          SuperscriptBox["\[Lambda]", "2"], "+", 
          SuperscriptBox["\[Omega]", "2"]}]]}]], 
      RowBox[{"Sin", "[", 
       RowBox[{
        RowBox[{"2", "\[Omega]", " ", "t"}], " ", "+", " ", 
        RowBox[{"ArcTan", "[", 
         FractionBox["\[Lambda]", "\[Omega]"], "]"}]}], "]"}]}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"a2", "\[Rule]", 
       RowBox[{"Sqrt", "[", "aa2", "]"}]}], ",", 
      RowBox[{"b2", "\[Rule]", 
       RowBox[{"Sqrt", "[", "bb2", "]"}]}]}], "}"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.646160517343978*^9, 3.646160581988695*^9}, {
   3.6461606427020597`*^9, 3.646160844554236*^9}, {3.65081212175695*^9, 
   3.65081212343993*^9}, {3.650812302209813*^9, 3.650812326441657*^9}, {
   3.650822468570436*^9, 3.650822471369981*^9}, {3.650822577675666*^9, 
   3.6508225880588837`*^9}, 3.650823195321834*^9, {3.650823247330964*^9, 
   3.650823247566515*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AvgDiffPlot", " ", "=", " ", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ListContourPlot", "[", 
        RowBox[{
         RowBox[{"Mean", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"EXStationary", ",", 
               RowBox[{"{", 
                RowBox[{"a1", ",", "0", ",", "10", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"b1", ",", "0", ",", 
                 RowBox[{"2", "Pi"}], ",", "1"}], "}"}]}], "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Omega]", "\[Rule]", "0.2"}], ",", 
               RowBox[{"\[Lambda]", "\[Rule]", "0.05"}]}], "}"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "100", ",", "1000", ",", "20"}], "}"}]}], 
           "]"}], "]"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "True"}], ",", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<b1; Difference in mean prey isotope values\>\"", ",", 
            "\"\<a1; Average of prey mean isotope values\>\""}], "}"}]}]}], 
        "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ListContourPlot", "[", 
        RowBox[{
         RowBox[{"Mean", "[", 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Table", "[", 
              RowBox[{"VarXStationary", ",", 
               RowBox[{"{", 
                RowBox[{"aa2", ",", "0", ",", "10", ",", "1"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"bb2", ",", "0", ",", "10", ",", "1"}], "}"}]}], 
              "]"}], "/.", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"\[Omega]", "\[Rule]", "0.2"}], ",", 
               RowBox[{"\[Lambda]", "\[Rule]", "0.05"}]}], "}"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "100", ",", "1000", ",", "20"}], "}"}]}], 
           "]"}], "]"}], ",", 
         RowBox[{"PlotLegends", "\[Rule]", "True"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"FrameLabel", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
           "\"\<b2; Difference in prey isotope variance\>\"", ",", 
            "\"\<a2; average of prey isotope variance\>\""}], "}"}]}]}], 
        "]"}]}], "}"}], "}"}], ",", 
    RowBox[{"Spacings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "0"}], "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.646160880351264*^9, 3.64616091620609*^9}, {
  3.646160960884996*^9, 3.646160964015606*^9}, {3.6461610267206793`*^9, 
  3.646161112433326*^9}, {3.646161155338499*^9, 3.646161168893556*^9}, {
  3.6461612189194517`*^9, 3.64616127915906*^9}, {3.646161355776079*^9, 
  3.6461613598926563`*^9}, {3.6461614222205067`*^9, 3.646161439439942*^9}, {
  3.6461614924254093`*^9, 3.646161640060956*^9}, {3.650812083119924*^9, 
  3.650812087523625*^9}, {3.65081223592227*^9, 3.6508122462898893`*^9}, {
  3.650812333587384*^9, 3.6508123356442423`*^9}, {3.6508124504097147`*^9, 
  3.650812634455461*^9}, {3.650829053374144*^9, 3.650829135536772*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[
        GraphicsComplexBox[CompressedData["
1:eJxdkj1oFEEYhheb28KflVlxYAZ1ghPFVKYRxZABEUG0CRhUFCRqJ1FjMIVa
iYpVilhoE4KgIChYGY6AYhHktDCmEhJR5JRLcRpCCEYRXW92RvIsLC8PLM87
33xr+s73nF2VJMnt4v2X/pnvXpmJW8kpOAPnYAnWYPYwU3AGzsESrMGcgz3M
DJyDJViDeU+cgz3MHCzBGsw98J44B3uYEqzB3DP3wHviHOxhajD/I+6Ze+A9
cQ72MEPfFvQFTsEZOAdLsAaHvjb0BU7BGTgHS7AGh76t6AucgjNwDpZgDQ59
7egLnIIzcA6WYA1OXPvw7sXmUiX6D2+61JhpBs7cwJPHs7V64Nzd3ft1anwm
sHQv3myefDAdWLv68WPVkVol+kde6Z+Xf4no930i+qu9vd/OLIjo9/0i+j9+
Gf7cMyei359HwK+if1vLr+BX8Cv4Ffwq+l+fXntt4reJft9nov9kR8dQ57KJ
fj+fif7vCwcuPlo00e/PY+C38Fv4LfwWfgu/daMTL/vmm3+63344tfNHsd+x
Fv/P/nttdxr1dWVWyu+F6xq6Pvmp2O+tHQNXzs1tdGuO1JfeT4fvlZvt3L/9
Xa0S/Y3+p/Jqsd/R0uv7RPSPH1p/cLDY71jpD3mz9PsU0e9TwK/iuadafgW/
gl/Br+BX7n7pH9x1dPXzYr/h/L7PuAul/8TD1O5ZNvF+/HzG3Sj9+zZUu54V
+w1efx4Dv4Xfwm/ht/Bb+K37C2mDu9g=
         "], {{{
            EdgeForm[], 
            RGBColor[0.148, 0.33, 0.54], 
            GraphicsGroupBox[{
              
              PolygonBox[{{9, 1, 2}, {10, 2, 3}, {1, 9, 8}, {13, 5, 6}, {14, 
               6, 7}, {11, 3, 4}, {82, 13, 113}, {5, 13, 12}, {2, 10, 9}, {3, 
               11, 10}, {81, 12, 112}, {80, 11, 111}, {79, 10, 110}, {4, 12, 
               11}, {12, 4, 5}, {78, 9, 109}, {6, 14, 13}, {15, 8, 108}}], 
              
              PolygonBox[{{110, 10, 11, 80}, {111, 11, 12, 81}, {108, 8, 9, 
               78}, {109, 9, 10, 79}, {113, 13, 14, 83}, {112, 12, 13, 
               82}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.5857556710741527, 0.5095626959046543, 0.47473149048676005`], 
            GraphicsGroupBox[{
              
              PolygonBox[{{108, 16, 15}, {23, 15, 16}, {19, 27, 26}, {26, 18, 
               19}, {28, 20, 21}, {25, 17, 18}, {81, 19, 111}, {80, 18, 
               110}, {79, 17, 109}, {18, 26, 25}, {83, 21, 113}, {16, 24, 
               23}, {82, 20, 112}, {20, 28, 27}, {27, 19, 20}, {17, 25, 24}, {
               15, 23, 22}, {84, 23, 115}, {29, 22, 114}, {87, 26, 118}, {24, 
               16, 17}, {86, 25, 117}, {78, 16, 108}, {85, 24, 116}, {88, 27, 
               119}}], 
              
              PolygonBox[{{109, 17, 16, 78}, {110, 18, 17, 79}, {116, 24, 25, 
               86}, {117, 25, 26, 87}, {114, 22, 23, 84}, {115, 23, 24, 85}, {
               113, 21, 20, 82}, {112, 20, 19, 81}, {119, 27, 28, 89}, {111, 
               19, 18, 80}, {118, 26, 27, 88}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.8979261184569213, 0.6192711598410905, 0.2912191508112667], 
            GraphicsGroupBox[{
              
              PolygonBox[{{91, 38, 122}, {39, 31, 32}, {43, 36, 120}, {32, 40,
                39}, {33, 41, 40}, {92, 39, 123}, {34, 42, 41}, {41, 33, 
               34}, {114, 30, 29}, {38, 30, 31}, {40, 32, 33}, {42, 34, 35}, {
               31, 39, 38}, {90, 37, 121}, {37, 29, 30}, {86, 32, 116}, {85, 
               31, 115}, {30, 38, 37}, {84, 30, 114}, {88, 34, 118}, {29, 37, 
               36}, {93, 40, 124}, {89, 35, 119}, {94, 41, 125}, {87, 33, 
               117}}], 
              
              PolygonBox[{{124, 40, 41, 94}, {125, 41, 42, 95}, {116, 32, 31, 
               85}, {121, 37, 38, 91}, {122, 38, 39, 92}, {119, 35, 34, 88}, {
               123, 39, 40, 93}, {117, 33, 32, 86}, {120, 36, 37, 90}, {115, 
               31, 30, 84}, {118, 34, 33, 87}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.9495361926261485, 0.7438404815653713, 0.4435621971410604], 
            GraphicsGroupBox[{
              
              PolygonBox[{{44, 52, 51}, {99, 54, 130}, {46, 54, 53}, {94, 48, 
               124}, {100, 55, 131}, {95, 49, 125}, {97, 52, 128}, {120, 44, 
               43}, {43, 51, 50}, {45, 53, 52}, {93, 47, 123}, {90, 44, 
               120}, {91, 45, 121}, {48, 56, 55}, {55, 47, 48}, {54, 46, 
               47}, {53, 45, 46}, {92, 46, 122}, {47, 55, 54}, {57, 50, 
               126}, {98, 53, 129}, {96, 51, 127}, {56, 48, 49}, {52, 44, 
               45}, {51, 43, 44}}], 
              
              PolygonBox[{{121, 45, 44, 90}, {125, 49, 48, 94}, {130, 54, 55, 
               100}, {123, 47, 46, 92}, {129, 53, 54, 99}, {126, 50, 51, 
               96}, {131, 55, 56, 101}, {127, 51, 52, 97}, {124, 48, 47, 
               93}, {122, 46, 45, 91}, {128, 52, 53, 98}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.9994036762336196, 0.8685091905840489, 0.5981513963242204], 
            GraphicsGroupBox[{
              
              PolygonBox[{{105, 68, 136}, {60, 68, 67}, {69, 61, 62}, {67, 59,
                60}, {65, 57, 58}, {66, 58, 59}, {103, 66, 134}, {68, 60, 
               61}, {62, 70, 69}, {58, 66, 65}, {59, 67, 66}, {71, 64, 132}, {
               57, 65, 64}, {126, 58, 57}, {102, 65, 133}, {61, 69, 68}, {104,
                67, 135}, {101, 63, 131}, {106, 69, 137}, {100, 62, 130}, {70,
                62, 63}, {99, 61, 129}, {97, 59, 127}, {98, 60, 128}, {96, 58,
                126}}], 
              
              PolygonBox[{{130, 62, 61, 99}, {128, 60, 59, 97}, {131, 63, 62, 
               100}, {133, 65, 66, 103}, {132, 64, 65, 102}, {127, 59, 58, 
               96}, {134, 66, 67, 104}, {135, 67, 68, 105}, {136, 68, 69, 
               106}, {137, 69, 70, 107}, {129, 61, 60, 98}}]}]}, {
            EdgeForm[], 
            RGBColor[1., 0.9499999999999998, 0.7499999999999998], 
            GraphicsGroupBox[{
              
              PolygonBox[{{103, 73, 133}, {106, 76, 136}, {132, 72, 71}, {107,
                77, 137}, {104, 74, 134}, {105, 75, 135}, {102, 72, 132}}], 
              
              PolygonBox[{{137, 77, 76, 106}, {136, 76, 75, 105}, {134, 74, 
               73, 103}, {135, 75, 74, 104}, {133, 73, 72, 102}}]}]}}, {{}, 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{71, 132, 102, 133, 103, 134, 104, 135, 105, 136, 106, 
               137, 107}]}, "10"], Annotation[#, 10, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{57, 126, 96, 127, 97, 128, 98, 129, 99, 130, 100, 131, 
               101}]}, "8"], Annotation[#, 8, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{43, 120, 90, 121, 91, 122, 92, 123, 93, 124, 94, 125, 
               95}]}, "6"], Annotation[#, 6, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{29, 114, 84, 115, 85, 116, 86, 117, 87, 118, 88, 119, 
               89}]}, "4"], Annotation[#, 4, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{15, 108, 78, 109, 79, 110, 80, 111, 81, 112, 82, 113, 
               83}]}, "2"], Annotation[#, 2, "Tooltip"]& ], {}, {}}}], {
        DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
         Identity, Frame -> True, FrameLabel -> {{
            FormBox[
            "\"a1; Average of prey mean isotope values\"", TraditionalForm], 
            None}, {
            FormBox[
            "\"b1; Difference in mean prey isotope values\"", 
             TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"DefaultBoundaryStyle" -> Automatic}, 
         PlotRange -> {{1., 7.}, {1., 11.}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{
                 
                 RasterBox[{{{0.148, 0.33, 0.54}}, {{0.5857556710741527, 
                  0.5095626959046543, 0.47473149048676005`}}, {{
                  0.8979261184569213, 0.6192711598410905, 
                  0.2912191508112667}}, {{0.9495361926261485, 
                  0.7438404815653714, 0.4435621971410605}}, {{
                  0.9994036762336196, 0.8685091905840489, 
                  0.5981513963242204}}, {{1., 0.95, 0.75}}}, {{
                    Rational[-15, 2], -75}, {
                    Rational[15, 2], 75}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -75}, {
                    Rational[-15, 2], -75}, {
                    Rational[-15, 2], 75}, {
                    Rational[15, 2], 75}}, {{
                    7.5, -75}, {-7.5, -75}, {-7.5, 75}, {7.5, 75}}]]}, {
                  CapForm[None], {{
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -50.}, {
                    Rational[15, 2], -50.}}, {{-7.5, -50.}, {7.5, -50.}}]]}, {
                   
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -25.}, {
                    Rational[15, 2], -25.}}, {{-7.5, -25.}, {7.5, -25.}}]]}, {
                   
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -1.4210854715202004`*^-14}, {
                    Rational[
                    15, 2], -1.4210854715202004`*^-14}}, {{-7.5, \
-1.4210854715202004`*^-14}, {7.5, -1.4210854715202004`*^-14}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 25.}, {
                    Rational[15, 2], 25.}}, {{-7.5, 25.}, {7.5, 25.}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 50.}, {
                    Rational[15, 2], 50.}}, {{-7.5, 50.}, {7.5, 50.}}]]}}}, {
                 Antialiasing -> False, 
                  StyleBox[
                   LineBox[{{7.5, -75.}, {7.5, 75.}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -50.}, 
                    Offset[{4., 0}, {7.5, -50.}]}, {{7.5, -25.}, 
                    Offset[{4., 0}, {7.5, -25.}]}, {{
                    7.5, -1.1338553032935808`*^-14}, 
                    Offset[{4., 0}, {7.5, -1.1338553032935808`*^-14}]}, {{7.5,
                     24.99999999999999}, 
                    Offset[{4., 0}, {7.5, 24.99999999999999}]}, {{7.5, 
                    49.99999999999999}, 
                    Offset[{4., 0}, {7.5, 49.99999999999999}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -50.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -25.}], {-1, 0.}, Automatic, {1, 
                    0}], 
                    InsetBox[
                    FormBox["6", TraditionalForm], 
                    
                    Offset[{7., 0.}, {7.5, -1.1338553032935808`*^-14}], {-1, 
                    0.}, Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["8", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 24.99999999999999}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["10", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 49.99999999999999}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 150}, BaseStyle -> {}], Alignment -> 
               Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0.`", ",", "10.026573707542992`"}], "}"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"2.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"4.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"6.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"8.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"10.`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )], 
     TemplateBox[{GraphicsBox[
        GraphicsComplexBox[CompressedData["
1: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
         "], {{{
            EdgeForm[], 
            RGBColor[0.148, 0.33, 0.54], 
            GraphicsGroupBox[{
              
              PolygonBox[{{13, 1, 2}, {202, 4, 125}, {122, 3, 201}, {1, 13, 
               12}, {124, 4, 202}, {208, 13, 123}, {23, 12, 207}, {132, 13, 
               208}}], 
              
              PolygonBox[{{200, 2, 3, 122}, {123, 13, 2, 200}, {207, 12, 13, 
               132}, {201, 3, 4, 124}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.4271277598641473, 0.4538148676838856, 0.567982403146955], 
            GraphicsGroupBox[{
              
              PolygonBox[{{128, 8, 205}, {139, 25, 216}, {147, 35, 223}, {45, 
               34, 222}, {26, 14, 15}, {217, 26, 134}, {23, 35, 34}, {122, 14,
                200}, {205, 8, 129}, {35, 23, 24}, {141, 26, 217}, {132, 24, 
               207}, {133, 16, 210}, {14, 26, 25}, {200, 14, 123}, {5, 17, 
               16}, {223, 35, 140}, {135, 17, 211}, {207, 24, 23}, {124, 15, 
               201}, {17, 5, 6}, {126, 7, 204}, {211, 17, 127}}], 
              
              PolygonBox[{{215, 24, 25, 139}, {209, 15, 16, 133}, {216, 25, 
               26, 141}, {204, 7, 8, 128}, {123, 14, 25, 208}, {140, 35, 24, 
               215}, {202, 16, 15, 124}, {208, 25, 24, 132}, {201, 15, 14, 
               122}, {127, 17, 6, 203}, {134, 26, 15, 209}, {210, 16, 17, 
               135}, {125, 5, 16, 202}, {203, 6, 7, 126}, {222, 34, 35, 
               147}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.6335462664402454, 0.526358112806476, 0.4466373385782584], 
            GraphicsGroupBox[{
              
              PolygonBox[{{226, 39, 143}, {48, 36, 37}, {138, 21, 214}, {232, 
               48, 149}, {57, 45, 46}, {128, 19, 204}, {30, 18, 19}, {126, 18,
                203}, {148, 38, 225}, {142, 29, 219}, {21, 9, 10}, {214, 21, 
               131}, {238, 57, 155}, {154, 47, 231}, {156, 48, 232}, {162, 57,
                238}, {144, 30, 220}, {220, 30, 137}, {39, 27, 28}, {163, 56, 
               237}, {203, 18, 127}, {150, 39, 226}, {209, 27, 134}, {141, 37,
                216}, {139, 36, 215}, {18, 30, 29}, {27, 39, 38}, {133, 27, 
               209}, {135, 28, 210}, {136, 20, 213}, {215, 36, 140}, {45, 57, 
               56}, {147, 46, 222}, {222, 46, 45}, {9, 21, 20}, {36, 48, 
               47}}], 
              
              PolygonBox[{{134, 27, 38, 217}, {131, 21, 10, 206}, {213, 20, 
               21, 138}, {218, 28, 29, 142}, {237, 56, 57, 162}, {155, 57, 46,
                230}, {137, 30, 19, 212}, {149, 48, 37, 224}, {231, 47, 48, 
               156}, {140, 36, 47, 223}, {217, 38, 37, 141}, {206, 10, 11, 
               130}, {211, 29, 28, 135}, {204, 19, 18, 126}, {205, 20, 19, 
               128}, {216, 37, 36, 139}, {127, 18, 29, 211}, {212, 19, 20, 
               136}, {143, 39, 28, 218}, {224, 37, 38, 148}, {219, 29, 30, 
               144}, {225, 38, 39, 150}, {210, 28, 27, 133}, {230, 46, 47, 
               154}, {129, 9, 20, 205}, {223, 47, 46, 147}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.8399647730163434, 0.5989013579290664, 0.3252922740095617], 
            GraphicsGroupBox[{
              
              PolygonBox[{{136, 31, 212}, {159, 52, 235}, {157, 51, 234}, {49,
                61, 60}, {153, 43, 229}, {43, 31, 32}, {130, 22, 206}, {224, 
               49, 149}, {178, 79, 253}, {144, 41, 219}, {253, 79, 171}, {70, 
               58, 59}, {31, 43, 42}, {241, 61, 158}, {235, 52, 152}, {212, 
               31, 137}, {247, 70, 165}, {52, 40, 41}, {79, 67, 68}, {40, 52, 
               51}, {170, 69, 246}, {218, 40, 143}, {154, 58, 230}, {67, 79, 
               78}, {166, 61, 241}, {164, 60, 240}, {61, 49, 50}, {58, 70, 
               69}, {229, 43, 146}, {150, 50, 225}, {230, 58, 155}, {162, 68, 
               237}, {206, 22, 131}, {172, 70, 247}, {156, 59, 231}, {89, 78, 
               252}, {138, 32, 213}, {148, 49, 224}, {151, 42, 228}, {142, 40,
                218}}], 
              
              PolygonBox[{{220, 42, 41, 144}, {219, 41, 40, 142}, {227, 41, 
               42, 151}, {252, 78, 79, 178}, {228, 42, 43, 153}, {231, 59, 58,
                154}, {221, 32, 33, 145}, {232, 60, 59, 156}, {234, 51, 52, 
               159}, {146, 43, 32, 221}, {225, 50, 49, 148}, {213, 32, 31, 
               136}, {131, 22, 33, 214}, {137, 31, 42, 220}, {171, 79, 68, 
               245}, {149, 49, 60, 232}, {155, 58, 69, 238}, {143, 40, 51, 
               226}, {238, 69, 68, 162}, {214, 33, 32, 138}, {152, 52, 41, 
               227}, {158, 61, 50, 233}, {240, 60, 61, 166}, {245, 68, 69, 
               170}, {165, 70, 59, 239}, {246, 69, 70, 172}, {226, 51, 50, 
               150}, {237, 68, 67, 163}, {239, 59, 60, 164}, {233, 50, 51, 
               157}}]}]}, {
            EdgeForm[], 
            RGBColor[
            0.9233839104780258, 0.6784597761950646, 0.36249012248188], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJxN0b1OAlEQhuGzEGj0JihJbLFEqUQqhAqxIm4r14KNUKAx8QcQJOGnACov
hEobaDRhIYGQ4DvhKyiesMzOnJkzGyuVc3ch51wcYeRxgTSyuEERTzjDHHUk
McM3EqhiqZoPTHGCe9Rwih98wcex59yDau2MMm5xRLyi2qlyC7jGVr/2v6Ve
1vNXM79qrgwu1cPqx2jjCiu8KN/qegdnR739fQd40w7+lGt7yWneFM51f+v3
iHfFFprP132ayg8w0i4j3j6W0F4m2rP176vPTrGs5g50zjM2umMDXT1bbKg5
Hed0tIO13if1/eyd5XziH2APPZM=
               "]], 
              PolygonBox[CompressedData["
1:eJwt0LtOAlEUheGDkYpnsKC3FTpHKxgqGTrGykAr70IjFKgkylUgES2AinfB
RigQExkLwH/HVXw5J+e69k7eVILbI+fcCY7xCx85jGwt5lyRMcQE8dj//Boz
bODhAm18a36JLtbIIoMn7JFHgDEOmhfwjk+9d44GEvxXYixjjo6yefr7WW/b
G1tUcYo0PrBUHjv/gD6uVM8ONZzpjJ0dKotljvCjvHanh3tlsx594U29yKu2
SHdtf6BMgfZfMFUtRfW2qV6lsMJCc8t0p7WU6nlU5lD3X1VjWmfqyuQrQwt/
Saw9bA==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[0.956358112806476, 0.76089528201619, 0.4647101497000756], 
            GraphicsGroupBox[{
              PolygonBox[CompressedData["
1:eJw10LluQjEQhWEbiARCgmfgVWhDhViqC4gCSMP2RKQKFIAQ+5JIifI4VNBA
k/CPfCg++crXY8+ZXLNX7MaccznE8YMOMt65V9YqKhiihTYuLvwb44w83vGG
CDUkfDh/wJ/2V7ihhBmyPtR82ts+vLVAmu8+aw9faCDlw2q1ZZxQR5L9nfq0
O57nttqzPgvYKEfMhzsaqo/Ud0f5LOcAI+WyfEflfqF2ovuuWKre8u1Vb7mn
6tOyztXvHR/qx+b3q3dtBmvN7B/fLmS3GTwAgvowAg==
               "]], 
              PolygonBox[CompressedData["
1:eJwt0LuSAVEQxvEzyi1YcqFXkSJRazYylMAlcXsjEQK3WvddqixvRIJg/bvm
C341PWem+3R3tt4tdSLOuQyimOETVTjPuQ/0CXs4Y4kvFPASi4tYYIsaypZO
7opnBS3EeU97YdzGFUfFARJ8i8DXHTuMkXfh2RNJL+zN7jipptVr4gcxL4wb
2ONfta2Hb9Xw1d9cdwaa9xcH5drMNrvNUFbOBkPkNO8dD9WynU1xwUD9pMi9
aT82w0hnTe3jTzWK+meinVfV8xpvulQuuw==
               "]]}]}, {
            EdgeForm[], 
            RGBColor[
            0.9893323151349261, 0.8433307878373153, 0.5669301769182711], 
            GraphicsGroupBox[{
              
              PolygonBox[{{109, 97, 98}, {263, 106, 189}, {118, 106, 107}, {
               251, 88, 177}, {269, 115, 195}, {106, 118, 117}, {274, 109, 
               192}, {97, 109, 108}, {199, 109, 274}, {182, 97, 257}, {190, 
               107, 264}, {176, 88, 251}, {196, 116, 270}, {257, 97, 183}, {
               184, 98, 258}, {197, 108, 273}, {188, 106, 263}, {194, 115, 
               269}}], 
              
              PolygonBox[{{259, 99, 98, 184}, {265, 108, 107, 190}, {264, 107,
                106, 188}, {273, 108, 109, 199}, {270, 116, 115, 194}, {271, 
               117, 116, 196}, {189, 106, 117, 271}, {266, 98, 99, 191}, {198,
                118, 107, 272}, {177, 88, 99, 259}, {192, 109, 98, 266}, {272,
                107, 108, 197}, {183, 97, 108, 265}, {258, 98, 97, 182}}]}]}, {
            EdgeForm[], 
            RGBColor[1., 0.9499999999999998, 0.7499999999999998], 
            GraphicsGroupBox[{
              
              PolygonBox[{{197, 119, 272}, {272, 119, 198}, {199, 120, 273}, {
               266, 110, 192}, {191, 110, 266}}], 
              
              PolygonBox[{{273, 120, 119, 197}, {274, 121, 120, 199}, {192, 
               110, 121, 274}}]}]}}, {{}, 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              LineBox[{191, 266, 192, 274, 199, 273, 197, 272, 198}]}, 
             "0.35`"], Annotation[#, 0.35, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{176, 251, 177, 259, 184, 258, 182, 257, 183, 265, 190, 
               264, 188, 263, 189, 271, 196, 270, 194, 269, 195}]}, "0.3`"], 
            Annotation[#, 0.3, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{160, 236, 161, 244, 169, 243, 167, 242, 168, 250, 175, 
               249, 173, 248, 174, 256, 181, 255, 179, 254, 180, 262, 187, 
               261, 185, 260, 186, 268, 193, 267, 111}]}, "0.25`"], 
            Annotation[#, 0.25, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{145, 221, 146, 229, 153, 228, 151, 227, 152, 235, 159, 
               234, 157, 233, 158, 241, 166, 240, 164, 239, 165, 247, 172, 
               246, 170, 245, 171, 253, 178, 252, 89}]}, "0.2`"], 
            Annotation[#, 0.2, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{130, 206, 131, 214, 138, 213, 136, 212, 137, 220, 144, 
               219, 142, 218, 143, 226, 150, 225, 148, 224, 149, 232, 156, 
               231, 154, 230, 155, 238, 162, 237, 163}]}, "0.15`"], 
            Annotation[#, 0.15, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{129, 205, 128, 204, 126, 203, 127, 211, 135, 210, 133, 
               209, 134, 217, 141, 216, 139, 215, 140, 223, 147, 222, 45}]}, 
             "0.1`"], Annotation[#, 0.1, "Tooltip"]& ], 
           TagBox[
            TooltipBox[{
              Directive[
               GrayLevel[0], 
               Opacity[0.5], 
               CapForm["Butt"]], 
              
              LineBox[{125, 202, 124, 201, 122, 200, 123, 208, 132, 207, 
               23}]}, "0.05`"], 
            Annotation[#, 0.05, "Tooltip"]& ], {}, {}}}], {
        DisplayFunction -> Identity, AspectRatio -> 1, DisplayFunction :> 
         Identity, Frame -> True, FrameLabel -> {{
            FormBox[
            "\"a2; average of prey isotope variance\"", TraditionalForm], 
            None}, {
            FormBox[
            "\"b2; Difference in prey isotope variance\"", TraditionalForm], 
            None}}, FrameTicks -> {{Automatic, Automatic}, {
           Automatic, Automatic}}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {"DefaultBoundaryStyle" -> Automatic}, 
         PlotRange -> {{1., 11.}, {1., 11.}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {
           Scaled[0.02], 
           Scaled[0.02]}, Ticks -> {Automatic, Automatic}}],FormBox[
        FormBox[
         TemplateBox[{
           FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               GraphicsBox[{
                 
                 RasterBox[{{{0.148, 0.33, 0.54}}, {{0.4271277598641473, 
                  0.4538148676838856, 0.567982403146955}}, {{
                  0.6335462664402454, 0.526358112806476, 
                  0.4466373385782584}}, {{0.8399647730163434, 
                  0.5989013579290664, 0.3252922740095617}}, {{
                  0.9233839104780258, 0.6784597761950646, 
                  0.36249012248188}}, {{0.956358112806476, 0.7608952820161899,
                   0.4647101497000755}}, {{0.9893323151349261, 
                  0.8433307878373153, 0.5669301769182711}}, {{1., 0.95, 
                  0.75}}}, {{
                    Rational[-15, 2], -100}, {
                    Rational[15, 2], 100}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  Directive[
                   Opacity[0.3], 
                   GrayLevel[0]], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -100}, {
                    Rational[-15, 2], -100}, {
                    Rational[-15, 2], 100}, {
                    Rational[15, 2], 100}}, {{
                    7.5, -100}, {-7.5, -100}, {-7.5, 100}, {7.5, 100}}]]}, {
                  CapForm[None], {{
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -74.99999999999999}, {
                    Rational[
                    15, 2], -74.99999999999999}}, {{-7.5, \
-74.99999999999999}, {7.5, -74.99999999999999}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -49.999999999999986`}, {
                    Rational[
                    15, 2], -49.999999999999986`}}, {{-7.5, \
-49.999999999999986`}, {7.5, -49.999999999999986`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], -24.999999999999986`}, {
                    Rational[
                    15, 2], -24.999999999999986`}}, {{-7.5, \
-24.999999999999986`}, {7.5, -24.999999999999986`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 1.4210854715202004`*^-14}, {
                    Rational[15, 2], 1.4210854715202004`*^-14}}, {{-7.5, 
                    1.4210854715202004`*^-14}, {7.5, 
                    1.4210854715202004`*^-14}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 25.000000000000014`}, {
                    Rational[15, 2], 25.000000000000014`}}, {{-7.5, 
                    25.000000000000014`}, {7.5, 25.000000000000014`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 50.000000000000014`}, {
                    Rational[15, 2], 50.000000000000014`}}, {{-7.5, 
                    50.000000000000014`}, {7.5, 50.000000000000014`}}]]}, {
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.5], 
                    CapForm["Butt"]], 
                    CapForm["Butt"], 
                    LineBox[
                    NCache[{{
                    Rational[-15, 2], 74.99999999999999}, {
                    Rational[15, 2], 74.99999999999999}}, {{-7.5, 
                    74.99999999999999}, {7.5, 74.99999999999999}}]]}}}, {
                 Antialiasing -> False, 
                  StyleBox[
                   
                   LineBox[{{7.5, -99.99999999999999}, {7.5, 
                    99.99999999999999}}], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False], 
                  StyleBox[
                   StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -74.99999999999999}, 
                    Offset[{4., 0}, {7.5, -74.99999999999999}]}, {{
                    7.5, -24.999999999999986`}, 
                    Offset[{4., 0}, {7.5, -24.999999999999986`}]}, {{7.5, 
                    25.000000000000007`}, 
                    Offset[{4., 0}, {7.5, 25.000000000000007`}]}, {{7.5, 
                    74.99999999999999}, 
                    Offset[{4., 0}, {7.5, 74.99999999999999}]}}], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.05\"", 0.05, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -74.99999999999999}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.15\"", 0.15, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -24.999999999999986`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.25\"", 0.25, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 25.000000000000007`}], {-1, 0.}, 
                    Automatic, {1, 0}], 
                    InsetBox[
                    FormBox[
                    TagBox[
                    InterpretationBox["\"0.35\"", 0.35, AutoDelete -> True], 
                    NumberForm[#, {
                    DirectedInfinity[1], 2}]& ], TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 74.99999999999999}], {-1, 0.}, 
                    Automatic, {1, 0}]}, 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0.4]], {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False]}, {}}, {
                    Directive[
                    Opacity[1]]}, StripOnInput -> False], "GraphicsLabel", 
                    StripOnInput -> False]}, "GraphicsTicks", StripOnInput -> 
                    False], 
                   Directive[
                    AbsoluteThickness[0.2], 
                    Opacity[0.3], 
                    GrayLevel[0]], StripOnInput -> False]}}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 200}, BaseStyle -> {}], Alignment -> 
               Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]}, "BarLegend", DisplayFunction -> (#& ),
           InterpretationFunction :> (RowBox[{"BarLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{
                    RowBox[{"Blend", "[", 
                    RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                    "]"}], "&"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0.`", ",", "0.3790842269811326`"}], "}"}]}], 
                 "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"{", 
                    RowBox[{"0.05`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0.1`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0.15`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0.2`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0.25`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0.3`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{"0.35`", ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], "GrayLevel[0]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False], 
                    ",", 
                    RowBox[{"Opacity", "[", "0.5`", "]"}], ",", 
                    RowBox[{"CapForm", "[", "\"Butt\"", "]"}]}], "]"}]}], 
                    "}"}]}], "}"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
               RowBox[{"Charting`TickAnnotations", "\[Rule]", "None"}], ",", 
               RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
               RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], 
             "]"}]& )], TraditionalForm], TraditionalForm]},
      "Legended",
      DisplayFunction->(GridBox[{{
          TagBox[
           ItemBox[
            PaneBox[
             TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline},
              BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
           "SkipImageSizeLevel"], 
          ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
        GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
        AutoDelete -> False, GridBoxItemSize -> Automatic, 
        BaselinePosition -> {1, 1}]& ),
      Editable->True,
      InterpretationFunction->(RowBox[{"Legended", "[", 
         RowBox[{#, ",", 
           RowBox[{"Placed", "[", 
             RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
   GridBoxSpacings->{"Columns" -> {{1}}, "Rows" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.646160889724284*^9, 3.6461609190092897`*^9}, 
   3.646161169544157*^9, {3.646161220722341*^9, 3.6461612380070477`*^9}, 
   3.646161280178245*^9, 3.646161360541744*^9, 3.6461614404515133`*^9, {
   3.6461614939240923`*^9, 3.646161610613244*^9}, 3.646161641331835*^9, {
   3.650812242196362*^9, 3.650812262336358*^9}, 3.6508123460598993`*^9, {
   3.65081259588025*^9, 3.650812635613802*^9}, {3.6508290828298807`*^9, 
   3.650829136666445*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/justinyeakel/Dropbox/PostDoc/2015_DynamicIsotopes/Manuscript/\
fig_AvgDiff.pdf\>\"", ",", "AvgDiffPlot"}], "]"}]], "Input",
 CellChangeTimes->{{3.6508291151936703`*^9, 3.6508291413557*^9}}],

Cell[BoxData["\<\"/Users/justinyeakel/Dropbox/PostDoc/2015_DynamicIsotopes/\
Manuscript/fig_AvgDiff.pdf\"\>"], "Output",
 CellChangeTimes->{3.65082914533737*^9}]
}, Open  ]],

Cell["\<\
Plot 1) The mean increases with the mean!; The amplitude of diet switch does \
not affect the mean of the consumer\[CloseCurlyQuote]s isotope values
Plot 2) 
\ti) As you increase the average variance of prey isotope values, the mean \
isotopic variance of the consumer increases linearly
\tii) As you increase the amplitude of the variance (effectively saying that \
your switching between 2 prey with very different isotopic variances ~ \
heterogeneity of prey isotope variance), you increase consumer isotope \
variance.\
\>", "Text",
 CellChangeTimes->{{3.650811928560771*^9, 3.650812035899383*^9}, {
  3.6508123758530073`*^9, 3.650812444827673*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OffsetPlot", "=", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ArcTan", "[", "r", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"2", "Pi"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"r", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<\[Omega]/\[Lambda]\>\"", ",", "\"\<Isotopic lag\>\""}], 
      "}"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.650811266152104*^9, 3.6508112685279217`*^9}, {
  3.6508113057638283`*^9, 3.650811471762292*^9}, {3.65081160169143*^9, 
  3.650811623449326*^9}, {3.650816967375317*^9, 3.650816970973968*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwVz3s0lHkYB/BxX6KMd+sYDaOyKkkkdFvPD2lSUboc3TaGzKqNKVqXKBm5
DIbKGbbbVpS1W6hQo4sdGc3M+87MZimry6lchtCaMQ3j2r77x3O+53POc57v
eRZEcnZEG1IolGBy/s+rpyNNPQ6l+hpYyXm0Y6G+v+4bWhvmuBeqYtYn902v
gM7gvHhHx8Nw58lt2ZVpgCTm3tkmjikgHv7Wgz29DTaK0YExBg+s5yV/NJkO
hyruqkw14yL8HBUhaZrkwEdW9bzPjN+hI2/5xdbRdEgN/SlikNEAPUfK0Lru
IjAfvyw76oZDGWU7p+PYdTj+LL1gKL4NagWi+z9YVILbzeLWuupOMDxldE9p
WwO9ITH096s/AM4vqZHZ10KpXbb9jYhuYMiDKF4rHsCaeGGNkVwFQs8NlLjV
DdDccXk7Z/EAxAtw55mBx+BRMONrG/QZKk6G0ENXNgJTtfa9e5gaMrM2Px30
FkHf8geBX4Y0EP6vwYt7i5sgdYrn+eSkFrqGl3Jbp5vAjNp/eJeLDnJduxO9
XjwDE4UJc9bTUdhcgk65cZthUll19MJxPajCkuojPcTQG1ZNc3CYAGGhPiFT
IQa/3LhYadUkdC5K1BftaAHBjNA8IHwaTrS2B9a/aoH99Oatb7UzEBrbf/YD
8zlYipYNLdxNQW+sXteVC59DtFeZbq+rAdK+dVced5BA0unkHY46A1STXDQR
nCiBrIHiNqXSELkniw5eUkpgq8ucSstLRqha0B60eL4U+FXeoq0sY5S9RED3
ZkkB31k+dWKNCeqRn+13rpSCSMEpcDUyRc7qnWxzlRTuH8lA8nemyN8usOOl
kwwctsDquDoztM7SGuMflEHA1wOZ19K+Qdt33h13PS+DQ6/+HBHuNkdjgW2V
78Uy8M3g1rMcLRDu3uEUPiKDCxzNY8s+C3QmLzS+lI5D15lbqmuNs1BuCZ+n
YeIwGN1w6FmOJRJT5ff84nBQx9qYKVhWiKd5KSkX4FAdREyxl89G/tzLY3lC
HFQx7t5GutnobsvC3gWdONjdfl2co5iDvFjK72QTOGRGxJcptlijZX7a/npb
AsamaPwtDdZoUYHWsMyHgCWPSy/iTlQU8M68//wuAryiWrZReVRk6mMqiIgj
QHRlrq1cR0V4CSPEmUfui+bmhey3QXv62Z+wGwQEmwzZ/91og9qNBx/+8pAA
9ZueZpkLhj7GtphZ/EUA5wof4xVhyPjJnWUWPQTIDZyGN5/H0BT3A41N2uXH
R7hlMYbm+67XN5Hu8ejLOFeCIcqD1KyUXgL2SJC69CqGfKLzu/pUBPiPaOUV
tzE0zOD80fSJgHmb9mWLJRgSr7TiHx4mIKFKzcqWYUjC1Oc0k35hk/P9JgJD
hRpegr2agPx3tV8IJYZ60+/SW0lTEqyi2l5iKOq3xIc+IwQMXBVBVzeGYoYD
bAx1BDCNwubf7MVQqT+btp/0zZjPo9F9GKrNPUqtIx3uaVf9aYD8j7aqPXqU
gHZpAl2jwdAGT9ot6RgBHm4W+vtasm9Oi+cCPQGFxdfbTugwVDE3oTaFdNBB
RZ5ejyHr6z1ZLuMEVDRHsR9NYCiyvOYfLmnjpRN+aVMYWqrIp78hzSo8Z+87
g6HKzrRQzwkCGrXO41+/kvczs5PySf8HWC1a2g==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox["\"Isotopic lag\"", TraditionalForm], None}, {
     FormBox["\"\[Omega]/\[Lambda]\"", TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6508113515509653`*^9, 3.650811391143392*^9}, {
   3.650811427201023*^9, 3.650811472070608*^9}, {3.6508116078145723`*^9, 
   3.650811623882279*^9}, 3.650816972999702*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/justinyeakel/Dropbox/PostDoc/2015_DynamicIsotopes/Manuscript/\
fig_Offset.pdf\>\"", ",", "OffsetPlot"}], "]"}]], "Input",
 CellChangeTimes->{{3.6508169842114353`*^9, 3.650816990245574*^9}}],

Cell[BoxData["\<\"/Users/justinyeakel/Dropbox/PostDoc/2015_DynamicIsotopes/\
Manuscript/fig_Offset.pdf\"\>"], "Output",
 CellChangeTimes->{3.650816994318389*^9}]
}, Open  ]],

Cell["\<\
How does mean and variance change given differnt omega/lambda when switching \
between 2 different diets in the sea otter system?
\
\>", "Text",
 CellChangeTimes->{{3.65081503662022*^9, 3.650815082531502*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"mu", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "15.5"}], ",", 
     RowBox[{"-", "17.5"}], ",", 
     RowBox[{"-", "15.6"}], ",", 
     RowBox[{"-", "15.5"}], ",", 
     RowBox[{"-", "14.3"}], ",", 
     RowBox[{"-", "15.4"}], ",", 
     RowBox[{"-", "16.0"}], ",", 
     RowBox[{"-", "17.0"}], ",", 
     RowBox[{"-", "15.8"}], ",", 
     RowBox[{"-", "13.3"}], ",", 
     RowBox[{"-", "17.5"}], ",", 
     RowBox[{"-", "16.2"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sig", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "1.0", ",", "0.9", ",", "0.7", ",", "0.9", ",", "0.9", ",", "0.9", ",", 
     "0.5", ",", "1.1", ",", "0.8", ",", "1.1", ",", "1.4", ",", "1.0"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"nprey", " ", "=", " ", 
   RowBox[{"Length", "[", "mu", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Diet1", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "100", ",", "1", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Diet2", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EZ1", " ", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Diet", "=", "Diet1"}], "}"}], ",", " ", 
     RowBox[{"N", "[", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"Diet", "[", 
           RowBox[{"[", "i", "]"}], "]"}], 
          RowBox[{"Total", "[", "Diet", "]"}]], "*", 
         RowBox[{"mu", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nprey"}], "}"}]}], "]"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"EZ2", " ", "=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Diet", "=", "Diet2"}], "}"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         FractionBox[
          RowBox[{"Diet", "[", 
           RowBox[{"[", "i", "]"}], "]"}], 
          RowBox[{"Total", "[", "Diet", "]"}]], "*", 
         RowBox[{"mu", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", "nprey"}], "}"}]}], "]"}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VarZ1", " ", "=", " ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Diet", "=", "Diet1"}], "}"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"Diet", "[", 
             RowBox[{"[", "i", "]"}], "]"}], 
            RowBox[{"Total", "[", "Diet", "]"}]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"sig", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], "+", 
             RowBox[{
              RowBox[{"mu", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "^", "2"}]}], ")"}]}], " ", 
          "-", " ", 
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"Diet", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], " ", "*", 
            RowBox[{
             RowBox[{"mu", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "^", "2"}]}], 
           RowBox[{
            RowBox[{"Total", "[", "Diet", "]"}], "^", "2"}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nprey"}], "}"}]}], "]"}], " ", "-", 
       " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"Diet", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", 
            RowBox[{"Diet", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "*", 
            RowBox[{"mu", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", 
            RowBox[{"mu", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], 
           RowBox[{
            RowBox[{"Total", "[", "Diet", "]"}], "^", "2"}]], 
          RowBox[{"Boole", "[", 
           RowBox[{"i", "\[NotEqual]", "j"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nprey"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nprey"}], "}"}]}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VarZ2", " ", "=", "  ", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Diet", "=", "Diet2"}], "}"}], ",", 
     RowBox[{"N", "[", 
      RowBox[{
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           FractionBox[
            RowBox[{"Diet", "[", 
             RowBox[{"[", "i", "]"}], "]"}], 
            RowBox[{"Total", "[", "Diet", "]"}]], 
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"sig", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], "+", 
             RowBox[{
              RowBox[{"mu", "[", 
               RowBox[{"[", "i", "]"}], "]"}], "^", "2"}]}], ")"}]}], " ", 
          "-", " ", 
          FractionBox[
           RowBox[{
            RowBox[{
             RowBox[{"Diet", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], " ", "*", 
            RowBox[{
             RowBox[{"mu", "[", 
              RowBox[{"[", "i", "]"}], "]"}], "^", "2"}]}], 
           RowBox[{
            RowBox[{"Total", "[", "Diet", "]"}], "^", "2"}]]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nprey"}], "}"}]}], "]"}], " ", "-", 
       " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          FractionBox[
           RowBox[{
            RowBox[{"Diet", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", 
            RowBox[{"Diet", "[", 
             RowBox[{"[", "j", "]"}], "]"}], "*", 
            RowBox[{"mu", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "*", 
            RowBox[{"mu", "[", 
             RowBox[{"[", "j", "]"}], "]"}]}], 
           RowBox[{
            RowBox[{"Total", "[", "Diet", "]"}], "^", "2"}]], 
          RowBox[{"Boole", "[", 
           RowBox[{"i", "\[NotEqual]", "j"}], "]"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", "nprey"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"j", ",", "1", ",", "nprey"}], "}"}]}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A1", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"EZ1", " ", "+", " ", "EZ2"}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B1", " ", "=", " ", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"(", 
      RowBox[{"EZ1", " ", "-", " ", "EZ2"}], ")"}], "]"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"A2", " ", "=", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"VarZ1", " ", "+", " ", "VarZ2"}], ")"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"B2", " ", "=", " ", 
   RowBox[{
    RowBox[{"Abs", "[", 
     RowBox[{"(", 
      RowBox[{"VarZ1", " ", "-", " ", "VarZ2"}], ")"}], "]"}], "/", "2"}]}], 
  ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.650815103695691*^9, 3.650815382344222*^9}, {
  3.650815427333922*^9, 3.650815459502281*^9}, {3.650815515824601*^9, 
  3.6508156474922543`*^9}, {3.650815683403779*^9, 3.65081573313265*^9}, {
  3.6508157855586443`*^9, 3.650815817082099*^9}, {3.650816300364401*^9, 
  3.650816338601645*^9}, {3.650825796362418*^9, 3.65082583211768*^9}, {
  3.650826298274791*^9, 3.650826333610653*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ESin", " ", "=", " ", 
   RowBox[{
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", "X0"}], "+", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
     RowBox[{"(", 
      RowBox[{"1", "-", "f"}], ")"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox[
         RowBox[{"a1", "-", 
          RowBox[{"a1", " ", 
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"T", "-", 
             RowBox[{"f", " ", "T"}]}]]}]}], 
         RowBox[{"1", "-", "f"}]]}], "+", 
       FractionBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", "f"}], " ", "T"}]], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"b1", " ", 
            SuperscriptBox["\[ExponentialE]", 
             RowBox[{"f", " ", "T"}]], " ", "\[Omega]1"}], "-", 
           RowBox[{"b1", " ", 
            SuperscriptBox["\[ExponentialE]", "T"], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"\[Omega]1", " ", 
               RowBox[{"Cos", "[", 
                RowBox[{"T", " ", "\[Omega]1"}], "]"}]}], "+", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
               RowBox[{"Sin", "[", 
                RowBox[{"T", " ", "\[Omega]1"}], "]"}]}]}], ")"}]}]}], 
          ")"}]}], 
        RowBox[{
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], "+", 
         SuperscriptBox["\[Omega]1", "2"]}]]}], ")"}]}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"VarSin", " ", "=", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"2", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "f"}], ")"}], "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      FractionBox[
       RowBox[{"a2", " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          SuperscriptBox["\[ExponentialE]", 
           RowBox[{
            RowBox[{"-", "2"}], " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]]}], ")"}]}], 
       RowBox[{"2", "-", 
        RowBox[{"2", " ", "f"}]}]], "+", 
      FractionBox[
       RowBox[{"b2", " ", 
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           SuperscriptBox["\[ExponentialE]", 
            RowBox[{"2", " ", 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", "T"}]], " ", 
           "\[Omega]2"}], "-", 
          RowBox[{"\[Omega]2", " ", 
           RowBox[{"Cos", "[", 
            RowBox[{"T", " ", "\[Omega]2"}], "]"}]}], "-", 
          RowBox[{"2", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "f"}], ")"}], " ", 
           RowBox[{"Sin", "[", 
            RowBox[{"T", " ", "\[Omega]2"}], "]"}]}]}], ")"}]}], 
       RowBox[{"4", "-", 
        RowBox[{"8", " ", "f"}], "+", 
        RowBox[{"4", " ", 
         SuperscriptBox["f", "2"]}], "+", 
        SuperscriptBox["\[Omega]2", "2"]}]]}], ")"}]}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.650824530746509*^9, 3.6508245705749826`*^9}, {
  3.650824862488714*^9, 3.650824899727406*^9}, {3.650825708141775*^9, 
  3.650825714900763*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Tstart", "=", "500"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Tterm", "=", " ", "600"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Xstart", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"EVarTempPlot", "=", "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"a1", "+", 
                  RowBox[{"b1", "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a1", "\[Rule]", "A1"}], ",", 
                   RowBox[{"b1", "\[Rule]", "B1"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.05"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "Tstart", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "1"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Time\>\"", ",", "\"\<E{Z}\>\""}], "}"}]}]}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"a1", "+", 
                  RowBox[{"b1", "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a1", "\[Rule]", "A1"}], ",", 
                   RowBox[{"b1", "\[Rule]", "B1"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.1"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "Tstart", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"a1", "+", 
                  RowBox[{"b1", "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a1", "\[Rule]", "A1"}], ",", 
                   RowBox[{"b1", "\[Rule]", "B1"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.5"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "Tstart", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "3"}], "]"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"a2", "+", 
                  RowBox[{"b2", "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a2", "\[Rule]", "A2"}], ",", 
                   RowBox[{"b2", "\[Rule]", "B2"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.05"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "Tstart", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "1"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Time\>\"", ",", "\"\<Var{Z}\>\""}], "}"}]}]}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"a2", "+", 
                  RowBox[{"b2", "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a2", "\[Rule]", "A2"}], ",", 
                   RowBox[{"b2", "\[Rule]", "B2"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.1"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "Tstart", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"a2", "+", 
                  RowBox[{"b2", "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a2", "\[Rule]", "A2"}], ",", 
                   RowBox[{"b2", "\[Rule]", "B2"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.5"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "Tstart", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "3"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"PlotLegends", "\[Rule]", 
                 RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "i"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*FractionBox[\(\[Omega]\), \(\[Lambda]\)]\) = \
0.5\>\"", ",", 
                    "\"\<\!\(\*FractionBox[\(\[Omega]\), \(\[Lambda]\)]\) = \
1.0\>\"", ",", 
                    "\"\<\!\(\*FractionBox[\(\[Omega]\), \(\[Lambda]\)]\) = \
5.0\>\""}], "}"}], ",", 
                   RowBox[{"LegendFunction", "\[Rule]", "None"}], ",", 
                   RowBox[{"LegendMargins", "\[Rule]", "1"}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Column\>\"", ",", "1"}], "}"}]}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], 
                  "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "290"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"EXSin", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"X0", "\[Rule]", "Xstart"}], ",", 
                   RowBox[{"a1", "\[Rule]", "A1"}], ",", 
                   RowBox[{"b1", "\[Rule]", "B1"}], ",", 
                   RowBox[{"\[Omega]1", "\[Rule]", "0.05"}], ",", 
                   RowBox[{"f", "\[Rule]", "0.9"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"T", ",", "Tstart", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "1"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<Time\>\"", ",", 
                   "\"\<E{\!\(\*SubscriptBox[\(X\), \(c\)]\)}\>\""}], 
                  "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"EXSin", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"X0", "\[Rule]", "Xstart"}], ",", 
                   RowBox[{"a1", "\[Rule]", "A1"}], ",", 
                   RowBox[{"b1", "\[Rule]", "B1"}], ",", 
                   RowBox[{"\[Omega]1", "\[Rule]", "0.1"}], ",", 
                   RowBox[{"f", "\[Rule]", "0.9"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"T", ",", "Tstart", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"EXSin", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"X0", "\[Rule]", "Xstart"}], ",", 
                   RowBox[{"a1", "\[Rule]", "A1"}], ",", 
                   RowBox[{"b1", "\[Rule]", "B1"}], ",", 
                   RowBox[{"\[Omega]1", "\[Rule]", "0.5"}], ",", 
                   RowBox[{"f", "\[Rule]", "0.9"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"T", ",", "Tstart", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "3"}], "]"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"VarXSin", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"X0", "\[Rule]", "Xstart"}], ",", 
                   RowBox[{"a2", "\[Rule]", "A2"}], ",", 
                   RowBox[{"b2", "\[Rule]", "B2"}], ",", 
                   RowBox[{"\[Omega]2", "\[Rule]", "0.05"}], ",", 
                   RowBox[{"f", "\[Rule]", "0.9"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"T", ",", "Tstart", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "1"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<Time\>\"", ",", 
                   "\"\<Var{\!\(\*SubscriptBox[\(X\), \(c\)]\)}\>\""}], 
                  "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"VarXSin", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"X0", "\[Rule]", "Xstart"}], ",", 
                   RowBox[{"a2", "\[Rule]", "A2"}], ",", 
                   RowBox[{"b2", "\[Rule]", "B2"}], ",", 
                   RowBox[{"\[Omega]2", "\[Rule]", "0.1"}], ",", 
                   RowBox[{"f", "\[Rule]", "0.9"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"T", ",", "Tstart", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"VarXSin", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"X0", "\[Rule]", "Xstart"}], ",", 
                   RowBox[{"a2", "\[Rule]", "A2"}], ",", 
                   RowBox[{"b2", "\[Rule]", "B2"}], ",", 
                   RowBox[{"\[Omega]2", "\[Rule]", "0.5"}], ",", 
                   RowBox[{"f", "\[Rule]", "0.9"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"T", ",", "Tstart", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "3"}], "]"}]}]}], 
               RowBox[{"(*", 
                RowBox[{",", "\[IndentingNewLine]", 
                 RowBox[{"PlotLegends", "\[Rule]", 
                  RowBox[{"SwatchLegend", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "i"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*FractionBox[\(\[Omega]\), \(\[Lambda]\)]\) = \
0.5\>\"", ",", 
                    "\"\<\!\(\*FractionBox[\(\[Omega]\), \(\[Lambda]\)]\) = \
1.0\>\"", ",", 
                    "\"\<\!\(\*FractionBox[\(\[Omega]\), \(\[Lambda]\)]\) = \
2.0\>\""}], "}"}], ",", 
                    RowBox[{"LegendFunction", "\[Rule]", "None"}], ",", 
                    RowBox[{"LegendMargins", "\[Rule]", "1"}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Column\>\"", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], 
                   "]"}]}]}], "*)"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
            ",", 
            RowBox[{"ImageSize", "\[Rule]", "290"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
     "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.650815870091968*^9, 3.650815957038369*^9}, {
   3.650816012705698*^9, 3.650816208358336*^9}, {3.650816345837912*^9, 
   3.6508166493179607`*^9}, {3.650816686079576*^9, 3.650816868417404*^9}, {
   3.6508183797018967`*^9, 3.65081838101059*^9}, {3.65081857631882*^9, 
   3.65081857741803*^9}, {3.650818721928226*^9, 3.650818734270577*^9}, 
   3.650818821496377*^9, {3.650822299209936*^9, 3.650822344210103*^9}, {
   3.650823672520184*^9, 3.650823687156723*^9}, {3.650824510581674*^9, 
   3.650824524545135*^9}, {3.6508245737856903`*^9, 3.650824797571124*^9}, {
   3.6508249387773457`*^9, 3.650824950807845*^9}, {3.65082572017828*^9, 
   3.650825790074423*^9}, {3.650825840456398*^9, 3.6508258949646378`*^9}, {
   3.65082600399638*^9, 3.6508260099617243`*^9}, {3.650826417914818*^9, 
   3.650826446939855*^9}, {3.6508286279018593`*^9, 3.650828669448333*^9}, {
   3.6508287278949327`*^9, 3.650828734218541*^9}, 3.650828777803549*^9, {
   3.6508289760198936`*^9, 3.65082898853659*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1: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
AoWIFDBf7TiXBzjk8+O5d+D7jVTRfXDpmbYBkwsUWm7O7VQm6Xid43+3TgRS
6OR1T0EURsdVjjtox4IoxNRmfw1doWMB56RDOiEUevlGspEhko4ZO15foMBt
Ie+wCvjnHo5SDI7byOrtBX6+HM6pGUqhrQKjPcNgr5SAXiUS9iPVraYmio5f
Nlue20VRqDz6abNlDB1Xy6ZmOoEXBubi4sC3rr/tLABbGe9lbAJfsNZXEL1C
IYEDmRPisXS8c1pjUTCcQoEt1u/HwJclROPZIii001JzwDYe1h9t3XQEPDNr
aBcHNv11cyoCXF41de0xWLae23xdJIW2G7z+y5MA/WO8bscSmH1IvuUpeDc1
VjkRTaHs2baozdfp+MtI2bvueHj/T1MXt0Q6ds3yM+JLoJCYc6XuDfBvC42X
FuCu/c34EXip61XTMHjk4r9IhiQ65m/8UfrzGoUmWn84XAPrpkuHbUykUI3R
Ga2MZDruMP29qA8+Oab//jHYmKs24Br4d1IMSz/YLvLweYEkCg3wTmsKpNBx
oL+zxc5kWH/lyFQs+M6JQhpKhfMVXODtmArfv+n87Svgv71B9ZfBj9r2SrwA
b/xucSsV/Gz/c0HDNAppRHGrvwAP0EbXWd+kkDXBXiWRRsf23++E5ILTdt18
rwoeK/ReGAWfcmRNNAL/3cb461w69L9a9OBFMAeb6MCFDAodvJpa2Q5ObPlq
Wg/eqfjh9hBYMKzi9Qr4OG1c/Rd457xWy9VMCjn3Gynw3qRjzTGbyqQsqP+G
L3bm4OY8SaIX3OrHIe8MPmozUbQ1m0LdtZ9T/cHm74Iz88Ay/UkqSWCPZ5kR
FTkUKiYe1LeDx2JpIZPgfK3e6PdgW7Mmf1ouhf6NPlgdARt9G3W8C/74v4jR
WXDbfT/rH+CyhktGjOl0jC4xm8rcopC5p6gjO3g3p6x2CViJ0Td8O/h2b73a
GJj/h8j1XWCxvGMKknkUkqv00d4N5lH0FisAd1/my0PgmGUmoVFw8JKt/hEw
04tkLrF86C9dw2wj8F/L2tUc8LpnAio24PMSR+c+gD/1TpBnwF9+Dk4KF1DI
iXLyPge2fuQ+dgrM1xPM6gl+F7r6IQMsNqOg5wc20Lvxvh/stTly90VwC49E
p2AhhVJPBzZdBmsNVTVbgHtUmWfDwI+KdBtSwVKT9HdXwfKefQ/fg4mxacto
cLGK612+IuiXVNPIOPB2pqV8E7AdaWh9DZz2Kj4jEWygONp3A8yVsiPxDfi8
0eblJHCU7f1ormIK9QW/b0sBM0hrhxmBT/kraqSBA6feBSaAvVcJi5vg33XO
Xp3gw7/qhdLBLuHzZzlKKFQn9eXKmkeOxdjpgy1TClPWbLlF2CIG7KSybLjm
tyP3DNvBr7dOVqw972jpft2NtyGvzC7Urr3vme8bzcPg+U3pLqlgNc0zShHg
zRdNIJsgX5hn5FrAin3FTYlgojti5/o78LygJOfr4MJ0QWFt8GyjUHU8WPhM
KS8F9uVQuxsDTpbTYH8KbhqePhIJ5pjtZGIopdCG+qMJV8DhTXb/tMA7lDQu
hYKXo6amLoPTJ9s3XwIHGF/53gCuTJ3WDwBPbuP/tAg2+tFA9wYPl6t0X7wL
9e6QmXQCmwe+fFELnhbsbrMDvz5g3TQHfhy/Rd8SDA1S7l9GoXqmBF19sEoO
d3EV+Kl8U5M2uPJsQfZfsN9Ayog6OO9fa5z3PahPjooQAaZEOd3cyyE/bS46
bwCfvGVT/RB8V2X+ywKcH3nRe6sL4KN1bjMT4MEdBskRFdB/S6od78CKO2Ia
cyshD/Y9PpENZsvtZxkDV7qI2yeAP22XMZa7T6FnjCkMoeCE7W1jteBWq/w5
W/BXEWautw8o5Dld/UQI/CTbzErwIeQzzzMbFnCySFGhLdi5aCphGuYLEtFR
HQerNLeXdIIzhKnT66sp9KGp7WEQ2GDbStW+Ggq5suSoYJh/4pnHVoPBux2f
LxaD57dm6z0Hi6scPxEPLtqqMWxUS6El2aqHJ8ErQkEs5x7DvBdXMv8B8/e+
4KxlZj3Mt88fBRZgXkfdPFT4CVxmscy0Nr9tBVMmdzVQaMptMKwWzCaoeKUK
LJT3RzkA7LjFp6yzkUJmfAcjfkI+qKU9neV9Avn6UpC1Hcy1hfuAFbg258v2
InCjQOX7MfCk+4V11uDk1NUdtCbo76sGb/eBXQWMXH3BbH8UFLnBKDWn6jF4
dnaPzDjkk4DA5MoqOHn8+P1m8P8Bh8p+ZQ==
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.880722, 0.611041, 0.142051]], 
            LineBox[CompressedData["
1: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
sPQLifXtAgz8P+Y6dhc=
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            LineBox[CompressedData["
1:eJwU23c81V0cB3BEZY9UQhSF+t17fxRSGcdW2SQVRUbDDImMO7LKKitkllKy
skLJSYRCkvBQKhmJtGyq59tfz+v9uj2/cc73nPP53m6bT3hZunCwsbE1c7Gx
/ftv92tZDjZER84y5MizKBJnylXkhoAlTmWrpUeQ2DVQT3sJfLef19o4jMQL
Ui6MWW06kgof8jGhk7jh7Iy0nw4dXUvb9zQjmMQxjeH1P8BRP3LPvQgksdSZ
238mdemIPeN5SbMvicceqWad0aOjBQ/jpGRvEpcKNmt8Bvd+lUzS9SCxbuVY
8Cd9OkLzWhXIlcSn2LYt/WdIR6ytzyOabEisZFWTfsiIjlac8TFKtyTx4q19
e96AfW6d+2VuSuLYA2cCO/fRUWpXkqCLPonLUu7NPTtAR+k71/Io7iBx0Pje
a3rGdCRKuV0uQSWxnnqbagP4i4pr1IQ8iXs/Tp6rM6GjN15fp9U2kniZQpsu
N6OjVdkb2ZJWkriJ/jhRyRyuv8Z4YwEbieO6THeWgDNXp4jkL9Lw5gAvnwIL
OhoPSlywmaJhg6el33Os6Cj/IqGW1k3DVw7v/Bp7CFyRy8mWScNbI9RGTx6n
o8MfzKLsNtHwlrD3676D24NUT51aD2ZFGAY40BFvtqLaSQEalgntvhPlSEcF
xnkqaJmKpfy93e460ZH/efGys71UvN71zvcvJ+noYQI2dYmhYm4DsSUPbzo6
JFY6qDZDwav16olZsP6VnfvGJ8A6rnahZ+no00ff7twhCl6pWVEX5wPzWd41
Se2kYA5Vc0aJHx3dN95j33iPgpe2RnH9CKAjZQVPy0AXCl6UJVUDA+mo+3PB
x3k78OYeV/YLdKSzNq/4sjUFz2/c0iIcREclI8hpTJeCp9fiyztC6KiuyiEp
WZaCv3LNC/oxof7m5gV1xwjcKb1zzy8wj5mTw40PBK7Y7ensw4LxYeXpbugn
8AWP4Wrvi3T0wZ7rmFk7gVe/6XT0CKejdxPh7WMVBJ6c4o2ZBGvb/LgrUELg
l6sNq9wi6ChaWlzB/C6BU9TreM5Ewv2tOn22ZBF4S97dctdLdBSUnPlU4hJc
7/HwuxFw/UnpvZvDCDzRK73a5TIdqTjqLurSCVzGm2LnFA3jP/iBMXQOrrf1
VcQQeE9YyNtjZwkcqMV33zGGjtq8F/IX3AmMfFlcDrF0dO+YyY1oZ7hfbB35
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
za0=
             "]]}}}}, {
        ImageSize -> 300, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {500., -15.9}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox["\"E{Z}\"", TraditionalForm], None}, {
            FormBox["\"Time\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
         PlotRange -> {{500, 
           600}, {-15.799999882069345`, -13.57027039428705}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],TemplateBox[{
         GraphicsBox[{{{{}, {}, {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
              LineBox[CompressedData["
1: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
Fopgzds1ZSnw/wE/Pywc
               "]]}}}, {{{}, {}, {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0.880722, 0.611041, 0.142051]], 
              LineBox[CompressedData["
1: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
               
               "]]}}}, {{{}, {}, {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0.560181, 0.691569, 0.194885]], 
              LineBox[CompressedData["
1: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
               
               "]]}}}}, {
          ImageSize -> 290, DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, 
           AxesOrigin -> {500., 1.9100000000000001`}, DisplayFunction :> 
           Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
              FormBox["\"Var{Z}\"", TraditionalForm], None}, {
              FormBox["\"Time\"", TraditionalForm], None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
           PlotRange -> {All, All}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         FormBox[
          FormBox[
           
           TemplateBox[{
            "\"\\!\\(\\*FractionBox[\\(\[Omega]\\), \\(\[Lambda]\\)]\\) = 0.5\
\"", "\"\\!\\(\\*FractionBox[\\(\[Omega]\\), \\(\[Lambda]\\)]\\) = 1.0\"", 
             "\"\\!\\(\\*FractionBox[\\(\[Omega]\\), \\(\[Lambda]\\)]\\) = \
5.0\""}, "SwatchLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{1, 1}, {1, 1}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendFunction", "\[Rule]", "None"}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"\"Column\"", ",", "1"}], "}"}]}], ",", 
                 RowBox[{"LegendMargins", "\[Rule]", "1"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ), 
        InterpretationFunction -> (RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
        True]},
      "RowDefault"]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1: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
akuq7mPg/wHDZ03I
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.880722, 0.611041, 0.142051]], 
            LineBox[CompressedData["
1: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
Rufmwe7qa59N5BL4f78YX7k=
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            LineBox[CompressedData["
1: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
o4iiKyMSN7+He4ya/DcU4+uLn3kmcg7nfRtTSQf5pF1sVlAE/IH7ceIK5Jdn
wvKmieeRX4TiBzKQ/y2jc9Z3w/t8atgXkP8nVu5QVHRjEhGtaZ61yEfb9Fym
4+E5epNR9zn56f1M/zf4b/C/KAPkqyCH0EaZC0yyyvG8wwD8+UJeegx8+anh
b1nO83Ru4+hW+EZoR04WLH/zy3VJd8z/H8cX6SLPuSbNOhQJn4/548V5frpI
645ZE3x6yOhCIZz/QmmT+EXsO1Fa/auQF2e3mIiFwUbGlcpTcNKxtlmfYJ1Z
vV12yJu7Rs78XOSBetp0hycd/sOc3WIJd97yZ3Ahr96bH1Z5C87a3mthDG+J
VM7+AK+4t/liEPxdqShugSeTzBbwGqiG/bN2Bu2CS6PGkmfg1aTdMwg+xueW
uRr5uf7tuaNv4es/l85wnld72s+xEvDC9Z3rHezBeV7eHa5rDDduD3G8DZef
U1G9Dv8bz3dJhI/PFItXwR/anxdy8r1QoNmcuZdw/3c06nPyf7Z4x6/t8HqB
SAGO7R+5tfnC41ECCzj//bT63DcvYYkF98w4+0BCaUQetzeTBHOJ1tyCjUxU
E7bCl+4V33CHfzaWhjBhm9PrAqzhO4ctLj+HY91D36yCN/z6fnwaXt+sZ/kf
Pm/bZXebzZfRrxtWylbAvvzz9LxhsTsBG6/DKuH31xTBl/sXPdoOv5dfLTkJ
l6xuOTCF6++WTvNt8EGe+uXgngwv3Ww1ehEuL/DusYSfV3d9y4XrCn0LR3A/
D9t41IzCYwzF0Ztw2unoxPMM7EPUr4JM1IP1f2vuZMJ5uZ4WOvCkfxnzF/zI
bffJItSTfnyP/WkmzsNSse3JqLf+1V4GqXBFlKeYOHyzSHDtD3jXdfXrDOwL
zfXqgidZmL8tzYyNnH32QPnEE3h99/7FIah3xZ82Xb1wyDnHi204D2fmepce
ZeN8TC8qd8Z5maNTcebgFeSnh6veamJfMJDsfPQYfnxIf4sBzpvf9KyWfthB
6V+DOfZz3pebt5/3ZZIBU48yC5xXPtMcCd+ruJ6dh6/xYF/YsbpuVxW8SOuL
2jecd3/hX1cE/XAeFFgReTnY5z+p/rwDX/6m94/TL/gdE8oeXcP1nevqqYt9
wZiUjffBNVsGrwyi3wTItauu9sd+UXeF+w72BYGeZeG5cJKmZmkt+pXgmdsn
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
CN5l+sy9E/6X2xe79jOub4/bm+fYLxx2d8UVw37dkj+ckJ+Whn6Jr2lCP1se
7WmC/GV8YI/8omYmuRf389of2FPt80NbuFn8idAdzvPdmrqEdvirSr9tKfId
X4yFomILk5zYLjZnB/Lfepf3j47DrV//zFTD4QJvHv+G+e2lC3ORHyuad6xY
9wX5e5Gnsyzy5tiTisRL8FbdB9t8YSVPfWUa/tV3ZetX2GZHWRJPK5PMKEc7
aiDP+i0hK43gqut/b1+Gc7pLngTBzkztLzTcmbNRpRbeWs3W4ORl0asFyYvb
mORiWUzoGuRpfet1q/bCSUVfJvbA5+VznsbChzRkD3Let4n/raHaCR8R/f6G
875N7Yv0FOWvTCLUu0qT874N963VlAus+Ts8gvO+jYZTyrMM+K6ZzRRnHzi4
RmX1GBw7e6U9532bW9OJqTrtyP//Hc5Khul3imsYsMf83/yc922Gox6mvYRd
vxof8OS873NKVo3vG67nB+98zj5gvjE23RS+1LBikTLM5F+ufguWNvZx+4PP
l9YUmfEJnvNMvz2Xsx8kiWss7cB8PPRxzzlYyCMs0xHuPibYp8jZrwxF1z6E
lw65hnzE9XVZHJrVA8dxzba9AEd1LdBU/c4kVxcc0lsIv80Oyj4DR10qcOD8
fcF/VwS0cmBRYTpZHV5ldT3nL6zr/lwrF/c74JdvLruTSdgioUpJqI9Cmntd
Jcx1uChWDO67ycwT6ML82+PvfamKk6+98+/AfstLgtRQb3NPni983M0kEfeu
H9mK+hR0ejzVB7+RWyhzEfleeHfTJqqHSYosP/Y8Qj0v1dV9ngW/TlnX9BN5
X3WRQDndi328N2l0Dc6POt+WOTx9qL97MVVrkO+1/50xMITFhY+tXInzptvT
UPUOtjA70MpXgP27KP5dcz/61Y4fij7Y923SPwlJDTCJ7DL9S6bI93sf8Zkf
gIM83adEM7Ef3XSt7YFTpGpr76RR9MVDOo0jg+ininPMLZNxPQVq24WGMH8i
5lg0xVD0A645cpbwMN+Azu5oin48uu7QXXi+26u6t/dxP79Gdy0bZhIF7gmf
tHsUXZZ1vF/5F/aLqGsvt4ei/+2dNbLtD5OoXz4v894X9ZeiNvfiOPrb+wNz
VzqjH6VRr3LgS9c3W51Hv5XJVLkyAquEGq8sOYx6yFeYOTuB/OWr32p2APfj
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
5t8zo0ov3uyjXgWLyptX/8J8P5W0TF/AlUUCs39Ec8PiDJvjt2CrRJXt65GX
Xfv/XKqHXS6TdfuQl8t33wpecppFpkp9//NHnjir+jYrGo69dERnFHmjKvx4
RTu8RLGgRguWmj23Sf4Mi2SlJ7pcRj553bR1+gk8IOb5TxZ5Wmb7V+Ef8J/j
WrwM5Bv3dG95tbO4Xr82G31HHpK7lrcjFx7qcU96gbzk8dt671948of/541/
OHnut8umc+jX40knSpCvFKpvMhnw12LfYwawlyZ1uwx+FGfY2IB89iH29aM5
5/HfS0e+cIWVBJzzd8AxRg8oIc777e5z3tyAS7dPy+Yg79V9i2+tgatb3iUc
glV2kuGFbiyizZ9UJAEz81u5d8NSCbEnGzn5Wf6S2D14y9jWgihY9aa4cgt8
3yMs6TjMnszRkbqA/nhNavMW+PMRq50H4EsKnzyXwqs/Du9PgBvKVx+Y5jx/
3hR8rgeOl5cY5Tx/bk5cdVXFnUVUZae0Oc+n1RZVh7vAisnZKzh52s/naHI6
vCEpppLzPk1r3+ySP7D5v4DFXbDm7gfvtS+yiDirfNE4HEBv6fCELy1eUCrM
eT9m1ZeRYvhKYeIiDVg73HMulwe+/yN9kb1wIPeSpXpw3HmxvBtwh0u2qh8s
uvvl9Et4fZOFbjU83/hs12zOPqI/ZCHoibx6tPioCdyZFnjYDP4uWXw5EtZZ
pnIxFN4Swa34C+75dThK3ItFbhwSFczB/VA7+XaVLTx4MOfJUtxPj861RXfh
OT+6y/1gvkbuZpFL6PffX9mf47xfZX7iuAUsVHng1S84ovrjxE347cjJ0Iuo
J5XiuCXzvVkkePS8Whjq7ZwWX6IJPJfHeng16rEw9bR2AHyp8djQO86+92DL
7rmXcf5HPvhKoZ5P+X0JneWD/Tfz1gAfzkP2jJ4cgfmaI/xq4f88nmb4+HD2
nzj+eJyfoJNeH6bg9dwl9y1xvlLNxYXGGJhf1dZnJ2Yhv1YzojWZuH4RP7uG
sM9u0etRPQ8faXrRMIjz+14r12QYThrdPTyGfD281Pp6P4tFdoYK7jDmR365
UyS+ko3+3Xy/66QARTPnyycdg+V3pV0OFaTohVy/Kzrhs4X5Nj85f3/WdZPn
6xX08ynms7ZFFH0h7Q2j7iru9yglfAv9alJPz734Oq5PideHJG2KbhXR3sUV
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
+4VFWCayfM4imOD9H71yVSE=
             "]]}}}}, {
        ImageSize -> 300, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {500., -15.700000000000001`}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"E{\\!\\(\\*SubscriptBox[\\(X\\), \\(c\\)]\\)}\"", 
             TraditionalForm], None}, {
            FormBox["\"Time\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
         PlotRange -> {{500, 
           600}, {-15.635140307408465`, -13.687969874855483`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1:eJwV1nk8FV8UAHCSCFkiUbaKkBT1k9Jyr4iIiDYUyU5JIbLOm1ChlKTIljW7
LPXeM/YthbKVVBKyS7JEwu/4632+n5k3c+fcc885my5eMbJZwcLCspuVhWX5
t611ywoW7I+zr4SbHd7ARLFbC5/5gqukmt9zb2Qi2xua6vPgMncDm3bwnIQN
MaPujz9W3huxF2ciCcfUxVENfzz1Pc/hgRQT2bPIz3/SBnvvFxjcykT/tu+Y
KjDwx2q1arsydzORTNDefjsLf3zj3No2mj4TjbHP8rnR/HG6QklGYRATvfEr
jTv0zB/r1j4XES1hol096287lPvjc4IcXM2/mWitoNirvT3+uNK+s+jn9mIU
EPdQppeFwFfvKCd5XCxG+6Od1/4TIPBUQ26j6NNipMr9cHvNZgIfVDvs8eJ9
MSqdVbtxeReBW0QN/5xnoRCLPn3QToPAt3vuaC0qUahRnBGsbkxgmXGTI6vN
KPTNis307UUCs2l2lRUQFMrm36KX5krgniOyU4opFDKKLdrbDx7tNfiVBZ6V
Pyoj40Zg1cDdaQqpFDqscXkxEUx6fNWUS6NQh/urvDh3AsstRh2USKcQ2+dj
6yI9CCzC+VpwIYtCJiluXQHeBN4lW9MYWEghdrVal4s3CfyrmXGtrJJCWmJ9
KangirTXuSpVFApaZP08DBZ6ui4yE7yq6uAR1wACc+4RMo+sphCnXpFoQCCB
7f4z/GRXSyEu8+TKlFsEHlh9xvFvPYX4SFJoKITAN31J26/vKWRonaCjGEpg
vnz2pKPNFLqvVep3FeytvjeoAMzP/XdwDnyz6Ty+3UKhtRFXS7juEdiw9B5N
sY1CQqkXbLffJ/A6s66tdh8pJPrmEP1KBIGbJzW8I79SaEeLQE4+ePU23vQp
sGZnX9I0mFsi1M+oi0LOw8Fh3o8ILB5uKbXmG4WquT7a3ooksKJhxkG/bgq5
HLuyLv4JgY+rJ7036KVQbUP8taYYAr841z+cO0ihL23X7AViCfx0r9+vFUMU
mvhyxPwkuE288+kpsNjYiE4nmJBP7p0DX12zd1N/HIHXV4yrHBqB68ffv1tI
IPC3Zp5PRWMUcn3HoqiYQuDTf7sZF35TyOtHbLwT2PrSxtAkMDmvtjYDHMhh
xdsPDpd1/7M1lcAPD01sdpykUJ7/UIVUGvyfdSLYeYpCoztbTgulE3jH9W59
+xkK2dxPIuazCDzyQ/i85F8KXUrFk/uyCZy97bDEWbAb9dXGE/x54/F798EB
g+uPTYNVsn54scxTKBGHrhvPgfz9IBP4Bdz1yy2jJ4/AQbSU04ELFDpzQqut
vhDyz5HjZRRLCfpLOYetKSLwdJ2gUgM4Ru6x7gmwv3CwziL4+9JAeQd4Nue+
qSVrCXLKuZM98BLil8s7tXlFCfLnbgxiZxDYeFh/4SFbCdrsMa2uA941PuRQ
Dq7uEV8IBetb2ruPglcznV2FmAS+xjNmr7GyBD2057+wpZjANXUHKkbBaTXG
+9RLCPzBwEFJcVUJ0lX2mQoAi0rH3zIGj8Yk574GZx9V970BVnabljEsJXCG
ea5GNbh48+O1FmUE3vPI88ApjhL0zr9zxKeCwNqmsh3WnCXo2siKtHKwq6qI
YCBY6IzCxZWVBF5bzT+aDDbZ4dMRAt4uv8KzF9z7Rbwmugrim677x2x1Cfqz
zzKOXgPrt3h/T42rBIUWGH/4A25vSxszAkspavGq1sL7PL7OOIJ1pRT8isBH
jp/kjAbHrJo+n19H4DpfLtkpsDIx8GgCrK16uWM1dwmqnfvUqPSawM5hAv9J
gsdHSw/mguNbBIaPgg+33hbPqifwy4eRhk/AH/S8T42An7ZmGmeCnWov3932
hsC2PkMspeAIhtHCc/DJSy0mPeCBeLGvKW8JzOLMwy7LU4J8RPnW/QAnIWET
VTD/Q1Z96QYCi8XtOqMNVgvqpxLBemujTtiCQy/lxcQ3Ejj6QOehBLBUf2Jb
F7jVW6U3G1xk8YhHoonAZ2vvKxeDu4y8fGLAwftRQxvYteFS4WfwmO09ke9g
Ti2L0Q3voJ7Gt/OOgZX3aZ6LAl9/oznHtgbikb8nogP8V95hjBdsul2+Yf17
Avs6+4WIggMkeQ9EgrPXutcogj+wd2x82EzgtCw7JSOwk/8b4xbw6eIBV1Mw
yxwVItAC57FPz/IiWH702XwYeDGhYt9VcKlNxO534LaeJmlPsNG3ICfeVgIn
xFAMP7BPi9PnUPBZB5XvwWB+PXPBBnBAZKnrfXBKjeEx7jYCb3GRznsEVkMa
N3XBk9K2kdHgJrpK8R2w7AS5NR5stUtu8jX4goTXhSTwbOYGBc52AhewHdNM
A4fKrLHSBmewTzdngDfFL0UHgTUjPVbngA2dfTe+Bduyh0i/ABMH55/yfYB8
NnLvLADn8dwQO7nsBRWFl+DuzzMxT8DVUQ3C9OX1Z7qJfwXzNO2NZYCR1+/Y
TR8JfMbIq5QJdtZxkbAFJ0zc9yoGx4n8jMsAX7nj07zspgEnyXFw8+qDVcte
eDkUv7sD+ot7i8GytwfZSXmCz34/4LH8vHOnfiRQ4DPuPvuW3xcqbbWJ9RM8
3+lB5Ctw8WT3syPgJX6fe0Xg4UrzzcHgN9UHNi1/z4bwL4lN4G+zrcfzwLqW
plsEOwmcpXx4fTb4hlJH0hnwllW3vdLBz5dOSceA6yRTPVPAHU2tyd3gJLVY
gWdgzrgTMjKfCWwg43wkBrz38rsUB/DPclGhx+DH3G9Tf4O3ja4kQ5bzsfOo
rOoXApdEa20KBM+k16Z5g+X22pkt58fpo5XPV34lsImObsIVcNB6LK8DPufC
l2kHLuovSb8LfjlKN7QACwUyMoS7IH7ryy7pgzVPqiqYgfl5JXs1wK5bijLj
wbmDDlP7wC0VeVly3wj8I6VuQBq84sEOxctgFeuu+uXzsOtCVvYLsGXpgNby
eXmwmJaj1g35Wd8pMAPnq7xRZqc/2Gn4tcUQ+FdMUm4VeNWt/KNfwIb74/P0
vkN8u2gj5WBez8h88x6IX+1Z90DwIW2h3Ungg6yOT93Bl4XDCwaWr4+HnLMB
NxTeLXTphfmkb02eBjh4IuAl2Qf9TPxizDzUHw4nV2ZqP9SDIe27Z8E8F1Ln
h8CuMhubDoP5T306oDgA9S/tU/Z28AaEygrAA8pyuktQL7cLcleXDxL4FZ/v
TDzYqDixsXMYzlfC203voD6fzmvnlRghcP8XfeMCsFkKp6ElWGqKVfox2DrM
uWUA/CdPMOk82MNK7ePUKIEFV18W6Yd6H8Pd0s07TuB6x6y+Pugfz1jYNxuB
jxvXcVeBU6dVrR6NL8fDqSUBnPst9sfGXwQuCnM4ZAauLHAYlpuA+xX6H7yF
fjRgxjp1eBLiefXW9mh22J8sJQ6PPwSWeMZuOQ79Uz5XsaYIzLH7V0w1WCp/
280pcERwZmAUmJcuvXR1FvJbJPf8YfBQlcifS3OQD+apcvehHyd8Zhm4OE9g
atBaSQz69Rru5trjS/C9zH1qM/8otJK3KeAu2KCaS6IC/Jf/7eEG8D2DqNwQ
8KBwTakOCw2fa+X7Igmu3sx4qclKw13MY2aaMD94qT1LVWOj4en6q3995+B+
h6tBWzloWGPy2VzBNFyvnAt1BOcYyutfAfNsJB/mgIMXDdW3gXc2hCfs4aRh
BZ0C7niYd67vKGRqrabhRn2ZbQEwD62cnPlpy03DH8TYow5MUEjKx+dMGh8N
D9PtYmxHYf69d0tOToSG5bkULRK/wzw39SnTDrzKJ91WD3zBbPvONLD0uR0S
MzAP2ss1q2wVpWHOD7dij4I9KzdoSG+gYf0bc11DME8+mck+LyVGw6mzi57i
Xyj00bwtXESKhvvFLC7rfKDQqZ2bFjjlaDgowD/uFczDOcVy6trgZG28wxDM
eVQpMBC8QNa5Db6mEPMCWrNCnoYlNOy3ioAlws+Lz4OvemWLu8F83T8VdXBM
gYYdgpGjBMzj15lr/Zp30nBr3+2xAxSFIo+sXIpSpeH8VXcMU7Ip9LCS2uJ7
lIbR2ONg42AKbaRmvdBZiLfZyo+bbShkLsY1bexAw9vsu7em7KXQwIR1jIgX
DZu1K46orIb91dC4Tt2h4fFtSiyCncWo/t/MtfxoiJe2Dsfp5GK0edeOxFsZ
NJwum1aq5lKMKr7kLPIwaZivPqW+bX8xEvu50q/vDQ3rKutsFVxRjFh9unY+
7aThdWHOFn1vmSjR5e7K5BEa9sILYm4PmKjxexl36DwN76mtFaDMmOjQ6/1Y
mpvEKtotcVZyTOS47u5jXjESt5NhMqW/GWjTN8tNHQokbrx2kyZWxUARfDxN
kwdInB/tEFEQzkB6RUtpZfokrmurs/hly0BhH68XOp4ncduu/3YMqjPQ3QtV
vXbOJD5vqmxiIMFAyQm6p9LAOxLVB1rFGYjZ3VzbD64JYis5C+6/0J1uc4XE
b+4PISsxBjpkuXDFyoXEshtMU7w3MNAvS9V/5tdILG95c4khzEBGVplCp6+T
2OaHkdtlPgYStn14RNOPxKtovScLWBmIteGdBwlu8uZy0QOPKvNklIPTZe3b
frAwUNVCAO9BfxLfDmW/IQp2eXT9owpB4nVTHrsDFunoTbWJgyxJ4pO84V52
83Tku0XqLlcQiSs+czBtpunI/s65sqPguVhVUU7wyfEnE0FgtSjPqowpOtpW
LHCa7RaJ86Js535N0tEHIzbJf+DPX71Gid90pET2543dgfsn4+dzxumorzur
7f1dEpsPWYhpDtORY4ybgdA9Ejv4/2ofHKKjX2cOvDkD/nO8Y+gu+F/T27Iu
MN/+n1KfBuloXclwxmgYiUNlphpdB+hIK0qOxhlO4kvH1JSZfXSUfiJZEUeS
mHVw7FbIN3j/mkvPb4LfiJEZ+8EvX+/eUgfuemEsP9pFR5WoSuT4YxLf8B3Y
fxzcqdjDdu4J7GeQyUvhr3TEwyXV6REN+1HqwsPopCPnyqdBuXEkvpZtHK3x
gY76QxT9foJnOwdG2MDmp8rcFeNJfFNPLay6nY4MBnusM8Hvdqq/1QIr8W7T
SEuA/InrFzVoo6NJE/pSXCKJJV/1il5poSPPiTbPe6kkpnul9Y02QTyYti6N
4AhTAeIV2D5g1o4njcQPukydSbDJerEzweC7qdkaomC1g1YqQc9JHKyk0qLb
SEcLtycmfDNIfL+eEVjylo5IKV6nyzkkrsKW3t9f09HZhPNFBeBQ17hbL8A7
pLKX5sD9Bbr/aODPknoRQbkkRgtCktLg/ySDS+LzSMx8funY5To6GhBfxd+S
T2KTthotwVo6Ko09ZSpSQGJam1DXUA0dRYinJJuDvfef6yoHY3HNfSNgpfeT
oi7gaDHy4soiEoelSPi1VtOR3sbFwj2vSPxjqo8lp4qONj/VX/IBG97WUAgB
z26I1akCt0fxldmDUzYc6DKgk/hVEdcWGfCiqBeHA4PE31vUvyZW0lFbVP2J
XPClgQrjm+BMUdGYaXC5Tc9ua/BZUboSyYT1hYspy4JfiMyYPC2G8/hJRCq/
go5uPzmS/B187w/qewQ2F3n0U5aCemCkstYLzCXy381CsLVMQqYG2Hr9tazG
EhIfCuFo/1wO+/G4YkawlMTCV3YNVoL51wuom4JHtE/aZIBLhPPa+8EKeWGx
XuCIyCVJxTISH/PMP2sFdhQ2cHQF16V2+eqBcWRcIQPcmiyyZg9YWPjn4hJ4
a531Kinw/+MoRlc=
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.880722, 0.611041, 0.142051]], 
            LineBox[CompressedData["
1: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
wO/WVHYkb2UiUdGxxSVwwnJ1lbfaTPQ/n8qxfA==
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            LineBox[CompressedData["
1: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
D3kivMO3J+4pzj+NIckg5BFRC5f5D2DbtJb2al2aunjH2nxuJ5PIn+g48E+b
ph5eW8k5CS9dfOBdDfKMUs50RvQz9OvBbtNi5CFr/2Oy92GzC0UNqmrIN+v+
ZM7rQv7iL/xUjvmgv+fn+XRYWcT4zSjmAdGyYPleONbxYHcu8hZ1dCxL6TmT
HPrz7pM75oNs6c/ZpbDKgvJ2MeS1h+99F32Bn7iENk8hz/2rG8lZ0T3zeVDI
0knkPY3ofYoh8GdnW2k+2NnuXW49bCxRliWH+SBOdY8S9wvUQ8W8+xuRHznf
+/M2wZfCBCpDkS8/NLson4INuUR2NmAekEl+lf8Qvjt58oUYbObmpDL/JfaD
Z5dBMPJqqHb3hR3w3sy1rHfIt8XTdqrnYflj4zf3wt0Pnxb0w5+aVP6NIx8L
ZG9bvLgH89iWXpICr/J7dNEb9oxVTCaw19qtauWwvviLn3+Rx9Pm3i8cgy/N
fx3UCre8NP3P4BXOvwVjQhfgnyUtRWFwQEnz7ThYLdRYvRE2NBw+HwXbmzYX
8/Vi/hl/dzYejpYiS7bA3VVLKgrgK0M3SuLhmHlC79vgwSuGSzvgkqjHa7hw
PRJR10slX+P1My8WGsPGtgbLdsJdGhcXp8NBKlfKcuDY251Vk3D+mK7GIOwn
qGY88/xMR1PlJfU+JvlKHemceX6GJ0lzuR8s1ZfiGI77p+t66XIVbLZ65T0Z
3F93raWaP+HMVbzSrTO/D5kqKl/Tj3lQ8+zqSKxPY/tiLQZ85FqgohXW7+v5
CxW34HO1Eg3qWF9rw5xKizc4D2VMXs9GfTDnyOskwdObY9YLyyG/v8ioegav
GxoTVUI9iYSkVrsMYD+qbKwPQr2t3yyx4gIsXpTiU4169JNMrnkPBwSMrJxG
vT6oja898BbnfYPNrWbU89/jc1degXnm3ty+GvW+zObkld9wUlv/uRvYD6e+
RdaxB9G/5WT6PmMeoBt5DO7C63ddzs/UoKmRBObVue8wL2SOFdtp0pSpZvi1
M/CWJMGpr5jXZ/sG0YVDeP3uiIVNmOeFXAv/jMBN7qnMNuxfUbsXa5e/Z5LX
wbkX+jD/y1DUzRo491XiSY0N2A/z595uHGaSCq+28xbmmJ85+e0vP6B/6268
yEL/sa98JqLwEfupPbBvhTtN7bwoYO0GT98a0fyCfuWR4N/xHi6dzWPBRH87
smfN8/FRrNeeGLHZh9Ff53b0i3xhkkmWSWzoaZrK45qlvB1+z5QxvIj+WfjD
YM9ZOLf+9/Uu9NeKvqx3sl/x78VbN5hl0lRzjfcH9W9MorvFZ51fMfrrTu7x
Dd+Z5KPotYoA9HPdS9qzj0zgfBrVK2+aRP+qWH7nCnwk4fjR3//Qb6uXHh+H
HYbXPdXCeSFyTXX64C8muW161CNtNocauSU9sf838qpl30ULCQ6V28P13v0P
+sEdG4XFyzlU2ut/BXkw192lXZraHOr0m0n3fnj9HFdJvRUcKuz9+Otdf9Gf
e/Yc1l6NfPN9uMvhH/Lfysjqj8YcSnjukxbLaeTrtVPSm3ZyKD6Rh5HxcL/0
NzK2C+e16P0ND2CRjtM66a4caljyTsMWLhbZd8mxrX0vzlvl63XG3CzCZerD
7gnAebi4Lvg4zEz+dcYskENVq9foNsO6UY4GVcEcKkfzcjnFwyJ18T7pHqHI
x2vyCtfwsojdFt63u9mYH9Zle4TCUX0DMTGYH7xIpvI12PejcsFFzA/2Jmez
V/KxiOxn6abbyAs620+mas9ikbNCksqxyciHdtG2AfCuprXz95xBfnc4Ll4O
/2aNxmgjjwi5HDu9jJ9FRj6Vxpchrwx7H4xWm80i0gOTSxfl4nqaf8f5wMM9
r6nGPPx9WXZKOTwnP2Oe7QUOpfUgOVdfgEVudUf42xQib6nKFh2FdyeF3G1A
ntp+7MLlBrg59Ku/HOaDw5q1tIkgi9D6KZvLMR8IxKxtOgX3CpmbDVxC3u+7
ffch7LUre70A5oMbic867eewiJOVWOkS5DvLkV09GfAtxfJJVcwH/UZDb17D
dOTbL2LIh3zff372nMsix4W0oxuRH1PNGT9K4ZtC/QJs5Ev1gtl/P8Mjx5y/
6yGP0n8TeFYIsUiaE+/qF7C5nbTgEfinleFDf+TZV5dz53HgkITg4h8zz9fw
L5GcFppZryUNfsjDXLur5DYKs0hseR//czj56mqVGHjX6//CdJCnVUWbl9yH
w6RzJI7BdV5m2vNEWOTky8/t12HTpg59G5g3qj1/5vmZFwt3rkuDbxdPJczM
Az6Bbzf2wAeMbFJmnp/52+Zrtmgei0y9KimbeX7mtMq49R5YpfJzt+DMfBAe
vqMIvpYmKzfz/Ex1J5/LR1hi9qojM/OH8fJ4Dy1RFnF+6/ApGu6KWuAbBL8w
z2Wvg/e9zjp4FV5ttW7tO7yfX/pqIX/gV/G+ihEzzw8llEdQYiyy7F6gvgAs
N6wfdRzmdy2Mnsn/5eRm7F143TUPma+4n+Tc5uS54vBZyb9b4Y5vj9Kt4KGd
mgZZWA8PM4ecFDhv43/dvVivH/n9F5/DbcGRo/Pg6D9el2Tns8h+icfsFVhf
adtv1bthv3UZpaZY/7WzeBrfw24099hm5P2Hu061LJNgkTtPOlbqon5c68Tb
A2BB3xgbEeT/4/tUXk7A/R6CB86XciiJxrJ+wwUsEiEnkGmJ+iyU1nvPgHXf
bfk1hvptu2c8PlsS9bn3xiVxzAPOyu2T5vCLRaMGp1H/n4/acSfCVhttd/3F
/hDX8BSRlmIRIV4yUol52/F0jLq6NIucz7rgFJGGehp/UbYPttx1VqwG87zr
Tg2tIvjXHr4fr1Kwv9WfrFRbyCJbDzddEU2ceX5NZqOqDIs8URMN/BPDodJ/
Xt6lKMciTWc8mJMznzfs4nqzG9YZX/Q9MQj98NZ2jxx4CY/2JYWDHKo4ccJH
QZ5F5CL54xT3Yz5eahQip8AiD7ZmOzW7cajnLp3J0oosUjC0OT7fnEM53VGT
dIDLTHjiG00xLy0LPZcGD/tWHerehHnpl3yupBKL7BGIuP6T4lA/k/ddllBm
kT8dTJUx9FfJu5N3RVVZ5GL7CWsRWQ5lp6X0T0CdRYLPTDkavKepco660WbY
sX+RHPcg8pOpdlQU/G86/XdbP85TV0qYZwmLtH6Xvrf7JU0pJO+S/wMLRrvM
SWmnqaHxc+s+LWMRA9Elrma1yJesPNYyDdw/q4dRGlUzn4+W3PGe8cbUVrFy
5Du1a1uH4N9MX7ehIvz8HV27+pazSGdS5UQ9zqvDtHjEEy28v63LSjZH0tQj
E5nmedosMrtGZOlBFk2pP1Xit4TNmscyciNo6uVH7dNt8OD4m59iocgX8lbZ
t3RYRFzt/JKN/jTFz4xtuLKCRfIrXTk8TjS1WyiFZxzOXfp2Z/YOmrqWnmGi
q8cip8ru7d2A+cCnquRhOXwwc5lxgTXy8MDd10UrWSRxseP3js009V/AI+Uh
uGaKUXplE/LPny5PVX0Wyfmx4WUe5gNdiaHPufC9228V0zAPpG7imz5nwCLP
66zTfhkgr/yXFtsLr5iaU8irT1MRgkullVaxiP49wTEZzAee7VY6xXDidbF7
/pgHnCoGbnyE+coTzpYhv1gmHTLTWs0itSsNlH8g3+jbZe6pgzuNVv0oX0JT
Sw00v/6Gs9+MHlqkjvVa2BS+bg2LbDI8tiwL+Ym/d+jsbXjdi+c5jSo0NdkQ
qixgyCIbTuYneSrT1OdcoQpzmLXOREEGeeyZh25rBzxfjd5TqkBTrSZ3bCXX
Yj3MJzbHIN/Vqzu8cYSPWw3KByL/Vc756JcFe69o/+WDfFgwemyyHx6Q5Pt4
EPNC+kPRGNV12C/f+2bFzMwLlRfme8HxXhzHUuTN4OB7Gl9gAYH3w7LIo172
ztd11+N8axynfJBXnVd92XQY1lwbNvsu8q21DLvjOrwo97mZLmz8V2L3P9h3
xEPiEvLwqtdFHwmF6zUI89ODNRrXhETCxcoBLvdnnkfPb+drhXdrJH0+MJPH
I12T5hL0m1XLVRfPzBOe3+Wt4H75U3zDyO9/N0eXJsN9ZiMp1+GvSxYadMH+
h6OfzTxvPzj30q2FRqg/r7T7J+DuT+utd8ELHpsfmfl9wYNHT17lwkd027uT
4cYqD+9B+O/b9V8uw7UpEz/+24Dza2HDteczv484dIrtC3cLuuuK4nrO75Cf
VwEvVVrrMPP9gMTVlZljcORmh8WX4UjZjer6G3F9q26kiOH9hvx7VhsKl3zZ
fz4S3t/nZXQD9lTaa8CP++Xa9Kedyxj9uz1nZypse+G0kzFc3zt/Wg/32zRK
6X0M3PfiiuQAvHZfbdB9+EpZSGoW1kd7y2aueZvQbw9bHtyH9VNd9jJuO5wV
seQcNfO8vbDfwlT40eJ/U4ux/kJfpi++gMt/NCTLoD7GqxffdDVhkR0t41PL
UU/DZ66ZF8AH53hXW6DeXh02734Pb0l6uCV00czzXge/+W/G+kg3PfqD+kxp
rlc5ZsoiH0+LVF/APHC0euHyerhH7fYKCewH1/zD+n/gcz/eqCViPtBga28J
3YLzyZTJV4r5+rZRgf8hM5zfrSs+uWP/lepwh9TCZ0f/WWpgfyYqubC+wykr
xuy5Vs08fyh95qA5i9iuXvH+LuaDH42x1/0sWOTS0pKWJ9j/ryqHmy/Bg4tG
ZD+hPzTnbnrwES69/EhZ3JSmTjOnX3tvRZ7ifnYzxALzJAni87RkkTeHM/xr
0X923HSycrHG+b1R8swdb/SziqsOWfARi/MrfPfj/uZIuL+Cd53dpiUdgPqL
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
p6d9r2jK/51jQ0gz8uTBKhVpCZxv63bI1cO+ig9YR6U41O+ztkenYe67ngEv
ZJAvTKz0o29hvpuynxOnxKEyiozLU27jficOttzQ5FB3vLWyy1uQ1yRSChVN
kXebNf5+gxeW2V7UNkf+llnqtPIu+mVuX/ZqS+STNlXJejixLKNsJc6zr8tk
Tt9rZRFlhXDvxzjv5D7zRQy2sUj4kilDj0Mcytb2gYPKfeRby6hHjUc4VCyd
ssIdFqOepUocxfkXrTzSB3/7UKmTF4G8tIjY9jxgETkx1XazGA4lGj1bS6Yd
+ytlgfYunNebRx8KOsIOc+Zc3YvzvO7arptd8MXj4rUOyO9nt4Ut7XiI+stz
VL6Virx5dcMssUcsUrvvn8Nx5AU+hTn9VvC/tz33ViFPBH9IP9sO+xsd/sbO
4lCXrF0PCD1GXhryOySVw6He1v1nbg5rPZd5mIu8vv14Hdc9uIr2zkm6gHw1
cqxn9hPky4WlH34hzzRZbaozgQ/v7KuwRd7Rluv0vQ3/NOGyGylGvmdnmvB2
sMinVmlhZeSlnGF3pQ1w0Ub2F0vkKZEr37puwqrXAz9GXuZQJrLXq6bg4F09
A/HIY8dYzLh1T3E9zk6Np5DXRrfO28CBJSVdvu2uQj6u7ZKbhDfpZqivQt5z
lsmeWNWJ82DRLmE+5MH7QxqX6+ALJkIVh5EXebaOx/yAH7/OtZNHnlxTw3HX
e4Z6cRY5dhUOXHh8XRAs0Skotwl5tJRhJl0NGzYJLp15/mfgndj3r3BjvEnO
zPM/Cy1etGt1ob4FOMH5sHV1brE/3PBIteAffELa6/hl+FAdn7oF8nFjhJbL
KLxPIudPPDwx+HPVsufof2J/ZW7BmuYN833guwPv2R9hz6qoz8VwyJ8x7dnX
Z74vufXee/iDbqDKzOf9z45JFKh1s4jC6wjHmed/hAZ7IvbCN3p/dgjDxmYX
HAtgxdzwxJ8z37+t9NF7CzOljqR0wDWSuvOUX2DeLRB7nQd/CP894grPHjcM
8oCV3zbezoE1n5bYy8BOW07kvIY/jnfEzXyfIbnC6qj8Sxa5cnlMxnXm+w4L
pOyc4eL82bO/4n5xh7/WyoT5/J7uCII7DXRs+mCeVZxfvbjfhd+PH1bpYZE5
O/e/Wg2HVnSd2wefFokRicF6WfguuVEGq82qy7wzM5/9F97/BX4edTnpB9b7
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
yD2yGu45IbWsCnmN7lEK+ApbaySkdSLfvWG9d9c6RpEXEmaSZ5H/eLYVHQqD
P42r82+DFY8dsr4FZ2/7KRbNnOfPkzFZ5IE8WbKymcnvXl0vdY3hyultfEbw
+YWZmxLh6ksSS5uZ98toWCt1wyx+zl19uNdZSEbUkyLNei7seM68XyezU9AW
7mEfSwhh7offT/gtF/74t22ZCpN3Z41/vIX5nd9kf0Zedt/I+k/BC+P7uKd7
M3z28N13rjC/xjHJXCZ/F5jalMFywz6ezP18uv/R38Ownu0GLnM/v1ueo6Xo
TZEGh4d4kuDhw/2XneG0TklD5vmA2QJX6RKY3z88/B4sPDCWOATn60xVfoXX
rw6YU/DBfNyR06WG36fn8MvbEc5d2jIQDFsXRg8UwQvr+990Me/jGVhmNQgv
t+De3oTrP7U6tXX1cexX4jrRRXCmg5SmAxwxSMnJof2uFRaWFcCziR8TyuHW
gfWS/fBZr0W39dD+4w5bZ+19KdKyI/NQCvqHVdTimQ/Hso3qdqM/ZQbZb1/D
7WyBcjH0t/ER6zsHTiD/rW3T7sR4sC/q08iFm1obWpowXvwGj5T0wX+ItF2p
R14vPHI8br8frqfqMfUY462h6PtMFizI07Drixxzfi7i2EvYSjRRZxXy+o8j
Sea2/qhn96eys1GPWjpeEd0bAJe+7JZXpomjlzbFpMMvfDSKL2J+nHzXON0D
+17I/aaMerfCsb3XKhDjoYCv/jDmF6/T+wKLIOS1n349zPO9UsUewimwZarL
kw3I42pDk1HdcNpZlzABzN8DTjyue4LxfSs4NpOox+uc5FR3h1Dk6va8pq1G
NHG/uDQ/EeZlba9wMKaJ/iFVwQdwrz6fQTrqfX7n7ZOmoVifPm/4KLGHJpyd
OY3GYdgvsv9VSrLF+uOSyjY8if5oPiq5whP1xIOuQApmf3xxsQ55/ZM6f8Ut
+Ej0yCoHX5q4+ytaQDcC8yvrlVNnIOrF9IDnW07h+/4RTJyi8HtaOW5KFEV6
7J7/9mc28rSC/Fm+GIr8mSK8gOcB2uvMgZvGsK3e3lH1Loyn/y5MxMAt7yx/
d3xME79zhfbyxqLe8j4+2v4C67Mlr9wsnJI5IZ/7Hu1DDVd/PkORD2y+8myd
R/3XX9nTfZYip1qkF42pcQn3XL89okmoN/hvEyqbkVf2bb+/D87OT1vqvJVL
zHb+c/MNrGT15cg9XS6xsnm04lMyRUoqlizUwf5mlLU+csl5XE8dIXHfAfut
9fjPXbDrX3qWmU5cwlKwISAZ/uO8VrOdK5c4FLvTQywVecO4z6EDeT3I32Xf
2jTk37nHVzZh/71sUaxKZlBkybmmypXYn9WWe5RHwXSrM4dM5BJ/tWsotMF2
P3L9DyGP3yHuSphnol5QTXcJwf7eqzrIe+ACRb48Naorh3xw+MPlkxfhK1U1
fh9ykC+Kj88Mwl1SIYvKkMcnpRf+55aFvJosW/ezAPs9n3xvYDZFannpKi9h
3q9zb8SaC9vJU9Nu5VxCIrKqaw6+FudGtiDPrP2ud+90DvZ731NDusg/FddZ
ZAf8uldPxO0qfr93J82fS5GNfbccY5CXdIcPVqfCt8ObpDOZ8zSF6zY8h3m/
BdvH13AJ04OfS6TykD/0Twd7I491S9yQt4dD7SYPGCGv7e0JyymEkySezQgg
z71KNhR7D0dv19Vn8t6RXfwp6/MpUtZjq7I/8uC/rJ5lHnCk6JMiYeY8/Z2c
mCoYlWpxITycoHpyDO5sDZiXZJ43tbnpr3oR+WSBR81p+NkqC08PWG5p6PUh
eM+/g05XYHGfoXlN5Nn2Gr8Do/B4/tWUMJgMZVkrF1Bk8JpCpxtwg+GFXUdh
8pO5/wDzvKzA7wZl8JdY/tsLkKfLn3O1h+FEwym2CLy6cPemdYXIrxajPMz5
mmz3t8pOsNSj89PM+RrhzcdXXypk7k/YrZ3D58X/4pEchOtCg+JfM8/7tqUJ
ri5CfXRhYEM1c77nnOKSw/Bsr82yAHiS0zCfDwtGcFT+gD0UTKdfw7Xymql9
zPPGn/rGZC5hvgT+MAxl3mf5l+ewHbyTL2SnANwTMf86G255ZFaYhvYzM0l5
+hIOetrJEYDvCSs8lCjG+tQgFxyK9v+rxKgpAz5VGyqohv7Z6P3i+lM41jc1
NxD9WarlfkW0BPu9yvn6WvR35j9ns8/DUoIV93kxHgTT5c4/gp0Unr6SxHiJ
s685I1hKkft9ltYqII8HTfQEJcFB5q8GhDHexmkXn4ewWnfQge/I30ejv7vy
l2G/C5fofYT6kCMusy8ejq2wV2Sex33cf9W8A55R6ZYSx3g3rSCMlpRj/Ux/
cfA28ri2ruOWGLgsTFRhsohL1LKmVO7BomHc7hDk8Q3dMWsXXUb+aH2tMI16
VsaxQoSC5z4KS3bmcolfcRMT4RWYb1YJP6bTuUSAZdSHJjiyKzxeKY1LjEmv
HPgJR+/dlWSG+fvmmlZ38BWKfMrmcw7E/L7VE3HNvxL1BVcwxyqGS1DyAsc8
ryHvNbRE6vtxCduCgzeuw2rmBUXJqPc3yl+dn4EfVLtrP/biEn1yZmkxVRS5
qIz3kpYbl9gsF998sZoif+tbaHHuIJcYkWUJPq5FfZ3YpJ1niP6UnqvTrMf6
eVqk8fVy1N85u+fDYHfv6LdmfFziu1SeyV34Y0oDu5HFJUqktr/Z00CR+8au
v4/H+jonGbLYrRF5X9l8meQETdRIfOPkcLGfz9XNyvbQRNwFdvEA3FX1tDmy
G/uvRPqYUhPWSxUJqRGs93wSm6PqYLMt4nT9PZpwEvetfNiMfG0YphxUTxPa
mbe/ibQg/z59YzN+nSYExYV27IdNDWhDj2qaaBarfjoMv3P/HuRzmSbSMubl
VG9SJI/WGvZMCfKH2B73E/D0W+OBmCKaIDPy6xphy56JZMmL2N/Exubm4cAi
MrUmhyb+BzT76X4=
             "]]}}}}, {
        ImageSize -> 290, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {500., 0.096}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
            "\"Var{\\!\\(\\*SubscriptBox[\\(X\\), \\(c\\)]\\)}\"", 
             TraditionalForm], None}, {
            FormBox["\"Time\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
         PlotRange -> {All, All}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}]},
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.650824621700604*^9, 3.650824653170969*^9, 3.650824697072604*^9, {
   3.65082478369785*^9, 3.650824799508836*^9}, {3.6508249120749273`*^9, 
   3.650824951839542*^9}, {3.65082572852499*^9, 3.650825747186021*^9}, {
   3.650825880594407*^9, 3.6508258959324512`*^9}, 3.650826023072394*^9, 
   3.6508263469388647`*^9, {3.6508264198313913`*^9, 3.650826447850586*^9}, {
   3.650828648525446*^9, 3.650828670412815*^9}, 3.650828735675973*^9, 
   3.650828778810296*^9, 3.6508289896136913`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"0.5", "/", "0.1"}]], "Input",
 CellChangeTimes->{{3.650828715574822*^9, 3.650828717358864*^9}}],

Cell[BoxData["5.`"], "Output",
 CellChangeTimes->{3.650828717935655*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
  "\"\</Users/justinyeakel/Dropbox/PostDoc/2015_DynamicIsotopes/Manuscript/\
fig_EVarTemp.pdf\>\"", ",", "EVarTempPlot"}], "]"}]], "Input"],

Cell[BoxData["\<\"/Users/justinyeakel/Dropbox/PostDoc/2015_DynamicIsotopes/\
Manuscript/fig_EVarTemp.pdf\"\>"], "Output",
 CellChangeTimes->{3.650825111819541*^9, 3.650828943963971*^9, 
  3.650828993121915*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"EVarTempPlot", "=", "\[IndentingNewLine]", 
     RowBox[{"Tterm", "=", " ", "100"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Column", "[", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"a1", "+", 
                  RowBox[{"b1", "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a1", "\[Rule]", "A1"}], ",", 
                   RowBox[{"b1", "\[Rule]", "B1"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.05"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "1"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Time\>\"", ",", "\"\<E{Z}\>\""}], "}"}]}]}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"a1", "+", 
                  RowBox[{"b1", "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a1", "\[Rule]", "A1"}], ",", 
                   RowBox[{"b1", "\[Rule]", "B1"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.1"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"a1", "+", 
                  RowBox[{"b1", "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a1", "\[Rule]", "A1"}], ",", 
                   RowBox[{"b1", "\[Rule]", "B1"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.2"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "3"}], "]"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Sqrt", "[", "aa2", "]"}], "+", 
                  RowBox[{
                   RowBox[{"Sqrt", "[", "bb2", "]"}], "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"aa2", "\[Rule]", "AA2"}], ",", 
                   RowBox[{"bb2", "\[Rule]", "BB2"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.05"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "1"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Time\>\"", ",", "\"\<Var{Z}\>\""}], "}"}]}]}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Sqrt", "[", "aa2", "]"}], "+", 
                  RowBox[{
                   RowBox[{"Sqrt", "[", "bb2", "]"}], "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"aa2", "\[Rule]", "AA2"}], ",", 
                   RowBox[{"bb2", "\[Rule]", "BB2"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.1"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"Sqrt", "[", "aa2", "]"}], "+", 
                  RowBox[{
                   RowBox[{"Sqrt", "[", "bb2", "]"}], "*", 
                   RowBox[{"Sin", "[", 
                    RowBox[{"\[Omega]", " ", "t"}], "]"}]}]}], "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"aa2", "\[Rule]", "AA2"}], ",", 
                   RowBox[{"bb2", "\[Rule]", "BB2"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.2"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "3"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"PlotLegends", "\[Rule]", 
                 RowBox[{"SwatchLegend", "[", 
                  RowBox[{
                   RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "i"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*FractionBox[\(\[Omega]\), \(\[Lambda]\)]\) = \
0.5\>\"", ",", 
                    "\"\<\!\(\*FractionBox[\(\[Omega]\), \(\[Lambda]\)]\) = \
1.0\>\"", ",", 
                    "\"\<\!\(\*FractionBox[\(\[Omega]\), \(\[Lambda]\)]\) = \
2.0\>\""}], "}"}], ",", 
                   RowBox[{"LegendFunction", "\[Rule]", "None"}], ",", 
                   RowBox[{"LegendMargins", "\[Rule]", "1"}], ",", 
                   RowBox[{"LegendLayout", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Column\>\"", ",", "1"}], "}"}]}], ",", 
                   RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], 
                  "]"}]}]}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "290"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Row", "[", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"EXStationary", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a1", "\[Rule]", "A1"}], ",", 
                   RowBox[{"b1", "\[Rule]", "B1"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.05"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "1"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<Time\>\"", ",", 
                   "\"\<E{\!\(\*SubscriptBox[\(X\), \(c\)]\)}\>\""}], 
                  "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"EXStationary", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a1", "\[Rule]", "A1"}], ",", 
                   RowBox[{"b1", "\[Rule]", "B1"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.1"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"EXStationary", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"a1", "\[Rule]", "A1"}], ",", 
                   RowBox[{"b1", "\[Rule]", "B1"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.2"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "3"}], "]"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", "300"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Show", "[", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"VarXStationary", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"aa2", "\[Rule]", "AA2"}], ",", 
                   RowBox[{"bb2", "\[Rule]", "BB2"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.05"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", "0.12"}], "}"}]}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "1"}], "]"}]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Frame", "\[Rule]", "True"}], ",", 
                RowBox[{"FrameLabel", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                  "\"\<Time\>\"", ",", 
                   "\"\<Var{\!\(\*SubscriptBox[\(X\), \(c\)]\)}\>\""}], 
                  "}"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"VarXStationary", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"aa2", "\[Rule]", "AA2"}], ",", 
                   RowBox[{"bb2", "\[Rule]", "BB2"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.1"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "2"}], "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Plot", "[", 
               RowBox[{
                RowBox[{"VarXStationary", "/.", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"aa2", "\[Rule]", "AA2"}], ",", 
                   RowBox[{"bb2", "\[Rule]", "BB2"}], ",", 
                   RowBox[{"\[Omega]", "\[Rule]", "0.2"}], ",", 
                   RowBox[{"\[Lambda]", "\[Rule]", "0.1"}]}], "}"}]}], ",", 
                RowBox[{"{", 
                 RowBox[{"t", ",", "0", ",", "Tterm"}], "}"}], ",", 
                RowBox[{"PlotStyle", "\[Rule]", 
                 RowBox[{"ColorData", "[", 
                  RowBox[{"97", ",", "3"}], "]"}]}]}], 
               RowBox[{"(*", 
                RowBox[{",", "\[IndentingNewLine]", 
                 RowBox[{"PlotLegends", "\[Rule]", 
                  RowBox[{"SwatchLegend", "[", 
                   RowBox[{
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"ColorData", "[", 
                    RowBox[{"97", ",", "i"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", "3"}], "}"}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    "\"\<\!\(\*FractionBox[\(\[Omega]\), \(\[Lambda]\)]\) = \
0.5\>\"", ",", 
                    "\"\<\!\(\*FractionBox[\(\[Omega]\), \(\[Lambda]\)]\) = \
1.0\>\"", ",", 
                    "\"\<\!\(\*FractionBox[\(\[Omega]\), \(\[Lambda]\)]\) = \
2.0\>\""}], "}"}], ",", 
                    RowBox[{"LegendFunction", "\[Rule]", "None"}], ",", 
                    RowBox[{"LegendMargins", "\[Rule]", "1"}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"\"\<Column\>\"", ",", "1"}], "}"}]}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", "\"\<Bubble\>\""}]}], 
                   "]"}]}]}], "*)"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
            ",", 
            RowBox[{"ImageSize", "\[Rule]", "290"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], "]"}]}], "\[IndentingNewLine]", "}"}], 
     "]"}]}], "*)"}]}]], "Input",
 CellChangeTimes->{{3.650815870091968*^9, 3.650815957038369*^9}, {
   3.650816012705698*^9, 3.650816208358336*^9}, {3.650816345837912*^9, 
   3.6508166493179607`*^9}, {3.650816686079576*^9, 3.650816868417404*^9}, {
   3.6508183797018967`*^9, 3.65081838101059*^9}, {3.65081857631882*^9, 
   3.65081857741803*^9}, {3.650818721928226*^9, 3.650818734270577*^9}, 
   3.650818821496377*^9, {3.650822299209936*^9, 3.650822344210103*^9}, {
   3.650823672520184*^9, 3.650823687156723*^9}, 3.6508252193899307`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1: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
3ItKakvYf4p/ZgIXZW9MnUGH/J2Sj8w2gVi3Y1Rv9IbSVdN+z03gQNYN9zg0
zeSIH/OVCfTKDuxvRgd4VN5YqDYBD7eElQbeVJL3VX6KyaAJHNroTtnpQyWl
DiXqnx82geIvD58porU7g0cjR01grLponQ76yiJztaYJE5Cp8317As2tw/PJ
+B/Gf2KvzF30olpDbiMhFkTM/o1f7Ivr/9pvZUBhgVGNbnUTev25Rn4HWRbY
qP/m6karc796EryPBRcnFLYPo72lbk1XKrFA0sNFic+PSs7aKYTrAgv0jK/5
yKOnf116q32EBc/2mdy6hZ7gWbeR7sYCu3q3KiV/rBevyWPV8yxYum/7Ygaa
xXdLUdGDBbpdd+QN0IX8PIYy3iwIIe5ZHEf7CAz6r7vCgiMTcqP+aN4VL7un
IlhArjbkKkW/WDHpNBHJgpyY5ao16NPClNmRaBac8nOzbkJXrkwR6bvLAtlT
Oy/3okPEbmo1JbMgQH/dHE8A1nut2cPsXBaMPRPtoqPL1kbJPnnOgk6rKBFd
9IV1da/T8lkwuCtD/jC6db1WS3wxC64EXtY9jr6/ac/i0BJc35MvaR5oqW1/
7ewbWXDhj65xJrp5m8LkqSYWDEk7+Oagr293vmTVwoItb4ViC9D9O77FEe0s
iJNsvvce/WR39QedHhY0Zxh8aUcrUO9JS46zYNxisS7/JZwHln5vRH+z4GvO
FqNl6P6wE0Z8f1iQK8fUF0bfH97h3j/Dgr4388vWorkzn798xkUAX5hJozT6
eHvMoUQeArqq1x+XRecLeH+9zUdAi8efZgW0vR2D57wAAQO2nXE0dP22WgO1
lQQoGp21NkTvNsnpkBYlIC0q3/Eo+urVyLMbVxHgvlXQlkArfTsWwbWGAJ68
jj2W6PjEH20VmwkAG54/TmjHdVz2TCoBq9YO3wxClxv0zurIEbB5aUX0TfRm
r4oQJXkCvpU9vB2G/tQamr1WmYC2ZmciEq0avXa6i46/z9y9NQEdWTYX3Mgg
4GDoxmdJ6JHfXetKtQgoUhPblYpOOppGT9MlINmLezQdvWSlfKCTIQHOd7uK
c9DWILHG8ggBz6+1lOWhXznPPjY6SoDq7mryBdq5lqzdRxDA75x1vQhdOZdi
tc2UAFPf+CMv0ZIygePiZgTwbrkp+BrdcvOQ+KwFxrfpuDGJpr6kpg9aEdAz
S//yDh38U1T1izUBTWc3s9+j1fXbzcnTBNxSb9lQjo72fD2aY0fA2j2ZdhXo
sbTESykOBBz+zzulEp3Cb/vw+lkC6ktXDHxAN/Wkeie7EJBe9kagBs3/tufI
G1cC5q5ESHzk1OPe5p3t7vj5uhsitWg7D4v5yQsE+PukzXIcd/R+08qLBJBW
/XV16A+U9scy3gSksg5F1KP/Llt9Sd+XgFi1FkYDWrrfhLDxJ8B67HInx+al
d2QuXSJgm+lRu0ZOfyY28Dy4QoC5ue5XjkmfFe2F1wjo/mGh9Qn9i30ouymQ
gN6+uEiOJRVuXh8LJmDiwHQjx8yVVccFQwiYWuY1z/G1Yf59O8MIkN20SaKJ
069V2gLa4dhPl36s5/jHw8tfLSMI2CD7aQXHqy+TL7wjMX+yPaOc7xtYzN+M
iSbgx3Wx1xx7q6pb58USEKrm4MHxE3Ev5bq7BLiYfdvIced4wfLB+wQY/fHP
46x/Rd1kL38CATqbQIFjyNz3UjKJgLKhramc+M8FnrtNSyEgwXPPIo6TT2bZ
HntIwPxXlj4nf5/owxoX0giw1Xrkz8kv7/o9YhEZBBSXr0nh5F9h2u7n00yM
73ZOHqdep5sekVVPMb8fnXI49awKkXTiyiVgOYvpzqn3rJ2V1obnBHgu8Vep
4tRDJ36NSj4BPtO1g5x+CZtbU+5STIDE5a8SZei3bcT9kFcEuN5PvM3pt7EX
Ua7pbwgYmwyc5vSj8dmVm7pKCHgT8iH0DfqKgeHk31ICHtlsf/UK/Xx7aLVE
Bc6L5xmfi9ESX5d4GlYTcFRkZ0s+usNwUcObT7gfBJb/eooWkqaltTcTYP86
KygTTVvi4/vnMwECU95CGZz9SE7t2tuB+SyJ6kzhxCs7evlBL+63H//Fx6Jj
hGRMi/oIGOrsTIji7LcBB0pzP+4XhnBYBGf+JPf9JzhMwAvvRXIh6FGRTnmf
SQLkOrbH+qFzLRx/uU0RoLTwALzR7o9nn56ZIYDbMb/VAz3DkNhhNkdAJOPj
Zxc0zzmjNap8bHBlJK+05sRXVzI3JcYGnaVO7gx0+9ojxaPibNiSpCGhwZmv
p79e+LGaDVaSRRnK6C3zf0db1rOhLDXvAQW9R0ah54UUG4R8Prxbj6bfTCt3
k2eDG2v73wmc59yfFa6cUWRDms1c7Ai6VLKUflIZfy/w5vYBtH5xV6GxOhsq
TtULd6KPDqzJlNVmA7NMTLICbasbcmv0KBtWHTFWjkbf4jnHPuPGhuL9F1R3
orW5hx8/OM+GbXV6E5vQ04vs5+o82HBQbjpGAm01b5Us78MGuUW/U/nRcjNG
Q3NX2VD6OfTjNzwfW0aoAeHRbNi1vvLYXfTG9rG0F0Vs4HFZ4TqN53ljq+Ps
j5ds2GzenzGMDvzcf3DtGza8ZrR97EGPNXX98ithgxexrL0GXVJXr6ZXzYal
rCGeRPTpsuy69g42iKjfTNBEry2VlhT6yoaxaz/iFNF1Jenu9G42/FznH7Ab
rUwmrkn9zoY9gfYiIuilL8NPOo2wYcdTJ/0uvI+8KRLMTxjD+t3qe/gJ7VYY
tKRxnA1tLU9HytEdLwKeKk5hfPayOk/R4c//LdjNsEE6Y9w4Ea2T52l87y8b
PBQED91Bz+b8Tv04xwbRiIB919HPsl2mFhbYoLrfmP8i+n/+O/8K
             
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.880722, 0.611041, 0.142051]], 
            LineBox[CompressedData["
1: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
21LL
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            LineBox[CompressedData["
1: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
YcqXIP8H11eicQ==
             "]]}}}}, {
        ImageSize -> 300, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -16.55}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox["\"E{Z}\"", TraditionalForm], None}, {
            FormBox["\"Time\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
         PlotRange -> {{0, 
           100}, {-16.507142836112735`, -15.678676536641634`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],TemplateBox[{
         GraphicsBox[{{{{}, {}, {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0.368417, 0.506779, 0.709798]], 
              LineBox[CompressedData["
1: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
               
               "]]}}}, {{{}, {}, {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0.880722, 0.611041, 0.142051]], 
              LineBox[CompressedData["
1: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
               "]]}}}, {{{}, {}, {
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               RGBColor[0.560181, 0.691569, 0.194885]], 
              LineBox[CompressedData["
1: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
4yL8XQT3fm25zLhJxibtTw3/v6+5xc/lPXmLjFzzj6X5bVngsh0Mf2aQsfWj
unQKwcJHI4S+ZZHxbsC6l9x2LGi/+4zWkU3GYRsDjkCCkzpnat/cI2PSbDa1
kWBLLpVrL+4T/f543I9vFwu4dX0PP3tARit39kQzght9c+BRPhlP/6q3CiA4
8taPdfcLyejGtM2PI9jonfjkrYdEvO99cpIJ/r3o1JjymIw97xiGFwkuV7uS
fuEJGY/brTz2//ubY56tRyJLyfjyQRvJgWC1VO4dJ56ScVTxQYUUweOvUDLw
GRlTJfjefCXiy2Ocnj1YScbc1pyTFwj22lz5xr2ajGUnDJsVCZZ1n8tyeE5G
dsfGinIi/95E1dCddcR6TCRbaROcXutnbfKSjE8MFaNyifpRpu/L6jQQejpy
152bYGHZfubWV2T0l7T95kLUu40s8UH+NRmPbPjCcYvoT2Is5f76N2QEI9FP
74j+7XyWckroLTEuyOX0i+hvvfjKTUvvyah+/dpuHqL/Z63NFultZGx5OjL6
j9CL4ZmznRMdZFR1tlcZJvT0tH8+8ms3GWfCPX7EEHqzfHHx1sJnMi5uuiO6
AYn4MzeUS34l8pMnHSok9Mq122bM4wcZO/ZTnRIIPafrD3JG9ZOxVIqx2GvA
AhWxMJm7g8Q457UPG4j14Nyd4zREJWM+qffPUW0WcX7SP8I5StTf3dDzrCYL
zlxtS1AYJ/azX5c4T6mzIHfXQp3PNBnDw/PEjVRYQG8hK00wyXgp0VR1Qp4F
CfkjZgJ/yBg/sFs5gFi/UvFnPVT/krG35kv6V2kWkMwLU48uE/uD+vLIOXEW
pNWx/Ztf6YgVg7oq7KtYoJR5Q2wdnyN6vdNPYfCyoDZCRVNXwBFbOVvzelaw
YFjPzTdcyBEPq0yvDmBjgXbZk4+L4o7oORj2vWGOSTzPdkxKSxLzxbR9V/nF
hL1Hv68AaUfcUx/YGz/BhDiVlcbn5BzxvQQfL88wE7rz9uVxKzuio4ENCbuZ
cCJj1WlBI0estyyPTy1lAl/E/evbtjvi/f2Fk3OPmHDHzaDEARzRtW3NWvMC
4nmw7hA11dwRN5p2fim7wwTRlFp7MVtHXNT1ffsxkQkVcQEKsh6OaKhxabOE
JxN6O8mK0vsdsfezzd/e3Uxgl9PfJHHAES0fDIWkUphgW8elJHLIEdu+4sVP
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
L5lQXBLMWl52w9Z9h2rKXjHhPyhVR9E=
               "]]}}}}, {
          ImageSize -> 290, DisplayFunction -> Identity, AspectRatio -> 
           NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True},
            AxesLabel -> {None, None}, AxesOrigin -> {0, 0.64}, 
           DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}},
            FrameLabel -> {{
              FormBox["\"Var{Z}\"", TraditionalForm], None}, {
              FormBox["\"Time\"", TraditionalForm], None}}, 
           FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
           GridLines -> {None, None}, GridLinesStyle -> Directive[
             GrayLevel[0.5, 0.4]], 
           Method -> {
            "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
           PlotRange -> {All, All}, PlotRangeClipping -> True, 
           PlotRangePadding -> {{
              Scaled[0.02], 
              Scaled[0.02]}, {
              Scaled[0.05], 
              Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
         FormBox[
          FormBox[
           
           TemplateBox[{
            "\"\\!\\(\\*FractionBox[\\(\[Omega]\\), \\(\[Lambda]\\)]\\) = 0.5\
\"", "\"\\!\\(\\*FractionBox[\\(\[Omega]\\), \\(\[Lambda]\\)]\\) = 1.0\"", 
             "\"\\!\\(\\*FractionBox[\\(\[Omega]\\), \\(\[Lambda]\\)]\\) = \
2.0\""}, "SwatchLegend", DisplayFunction -> (FormBox[
              StyleBox[
               StyleBox[
                PaneBox[
                 TagBox[
                  GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.368417, 0.506779, 0.709798]], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.880722, 0.611041, 0.142051]], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    RGBColor[0.560181, 0.691569, 0.194885]], 
                    DiskBox[{5, 5}, {5, 5}]}, AspectRatio -> Full, 
                    ImageSize -> {10, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.5}}}], "Grid"]}}, 
                   GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                   False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                   GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                  "Grid"], Alignment -> Left, AppearanceElements -> None, 
                 ImageMargins -> {{1, 1}, {1, 1}}, ImageSizeAction -> 
                 "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
               FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
               False], TraditionalForm]& ), 
            InterpretationFunction :> (RowBox[{"SwatchLegend", "[", 
               RowBox[{
                 RowBox[{"{", 
                   RowBox[{
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False]}], "}"}], ",", 
                 RowBox[{"{", 
                   RowBox[{#, ",", #2, ",", #3}], "}"}], ",", 
                 RowBox[{"LabelStyle", "\[Rule]", 
                   RowBox[{"{", "}"}]}], ",", 
                 RowBox[{"LegendFunction", "\[Rule]", "None"}], ",", 
                 RowBox[{"LegendLayout", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{"\"Column\"", ",", "1"}], "}"}]}], ",", 
                 RowBox[{"LegendMargins", "\[Rule]", "1"}], ",", 
                 RowBox[{"LegendMarkers", "\[Rule]", "\"Bubble\""}]}], 
               "]"}]& ), Editable -> True], TraditionalForm], 
          TraditionalForm]}, "Legended", DisplayFunction -> (GridBox[{{
            TagBox[
             ItemBox[
              PaneBox[
               TagBox[#, "SkipImageSizeLevel"], 
               Alignment -> {Center, Baseline}, BaselinePosition -> Baseline],
               DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
            ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
          GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}},
           AutoDelete -> False, GridBoxItemSize -> Automatic, 
          BaselinePosition -> {1, 1}]& ), 
        InterpretationFunction -> (RowBox[{"Legended", "[", 
           RowBox[{#, ",", 
             RowBox[{"Placed", "[", 
               RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& ), Editable -> 
        True]},
      "RowDefault"]},
    {
     TemplateBox[{GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1:eJwd13k8VN8bB3BbhEgIIUUqSc1YZoaIp5JkKZm5Y4Qoe8iStWwhkSVtsoVk
K0Kk0HZTWlRIUpRK1FdEZCll+T3z+8vr/bqvc+6c5zz3nA/lA77Wrnw8PDwN
vDw83L8qp2Yv5yo9MCy4Ki5/p5tC7vAvEfbxyDPKvMl7PAy9p1fjlJpHpdER
AclZOpqd+XOPoMd9o73uNdLVXRSSM2mlPeneamTWK9tX+o5C2l7mLfzh/sno
XzGxILOTQu79a2s/4P7TqKq+uDi2nUJ2r47X/eY+b7R87fmUuGYKWXSUd47f
QQJM5yZMRBoopFhNXmXJbjmoGwjv7iqjkDkmM3yaYitBZqbcTDuPQuYeiOmT
2aEKWtnBxkJnKWTG7xPXetiqsOe7j3jPGQp5NjklpNBNFYK6mkar0Qk3M0S1
4lWhq+363D50gEiltmWTKuTkUqHuNIU0qX4fG7ttNZTt8Hf0TaOQI7w01VGj
NSD2w19/NIVCbr70n8szXTVg15qRmxMp5ERO454vO9XgW9DDdhn01YyLhv/2
qoH1jWL+0QQKKZPGlNsQoQaNvM/IAvRI5P3naQ/UgLNw6xVhdL79BS2O2Tqg
3lXU64mnkHxyO3j+s1OHpDcL4rLjKGSdlMrwvLc6dFUr+YeiDy2e7ZKLVAcn
qSMRBPq9YE2NWb46WPYtmViMvjGp5F7Rrw4dKiG28bEU0vX11Msgn/Xwzy9N
JCyGQj5NLc4WiNKALeZnqMHRFPLRfHPty1MasJf9o8AGTfr9bE3P1wD3R8o6
euhb1roC6xo1oExbp2YmikIWyzR7Wy7YADoyyarH0bG5w5vTkzbAywfZ77Ij
KaRhhc7ntRkbIXa6/srncAq5aYXt39HSjfClOJT3MZqeFiHdUL8RDmTVhJah
NwQ8NrV4vxEm56qagtGKdM51PyUK9NHMu8XR03ePxtQXUiDp7dSY8VHsF7f9
Z4o4VHje/Wr6aRiFvOhQWxfmRAW569KtNWgnlvAnSw8qJOvTyFz0ty3X10+F
UKHASnEqEP1LkbfJ5AIVtj1+X6WCFn2d//u/N1QIUf/gEhtKIQ2MPturMzXh
xEDfe9sQCjlP04md26sJrTnNWqboRo2EK+0HNGH35HARHW0qT506EqAJJlaT
n6XQxGTUqeenNeHCgNXV1mDcr7IVjd5tmiBkGJVsgc6TdVxbaakF6cZjeXZB
WO8Hyx012FqQrNPNtEB/9vqQfmWfFrQzrddtRquQtoKFvlpAX/hPdwW62IP1
NeO0Fvy1CBvqD6SQFfU7L8e80YJFyT55wehW54Xv53u0IHhpnI8nelTsiWTE
Ny3QrbR2sEdrHTCOCfmtBVUhygVb0bUiRvu9l2lD6sMmUgJ9x05nBdtBG4YS
5Vg1hylkz4Jx9mtXbVjFuGtYip6rvJ5qdUgbChoNzC+iQYAyZxalDfXWHc9O
oB+Vr+sxuqQNzKXZDvvQX9kD0nevaEPcRQsbFlqQt8RiU7U2vFQeCDBDmxKq
d3QeakO0Xv9iBvr5rFL2uq/aQBVV7l2C/lHS0148rA25AszBhehF1jkiqlPa
8F9a+FIe9K7iZUeUhHSAXn/n1UgAhWzfJW0rtU4HJFiKX16iu/OEZWe9daB/
PMf5DBoWigx8D9QBx/ebeZLRxX4i9Z3hOrC+KbnhODpgi6hdVbIOnEzSTQhD
i/YtynMu1wHpPV9OHOA+Nxfzs7qhA95dYpIO6Hc1Yls239GB2MaReht0YZx4
n8wLHTgh1nHAEm2wRmJt85AO9H7aumwTuiBV4s/NcR1o/o9ymoZe+Fvi2eV/
OkDEvVujie54ssQrQpQGZw0cy9TQm6iSBgelaKB/zTBLFZ2fISlmo0ADX/sP
xSvRPp5SldT1NBAcZi1bxh3/Sip6uTYN+OaoUUu54zdJ7xHRp8Ht8pd8kmhB
0aXjfWY00Fps7iyKzi2XYVw4SAPtpS6J8/4UUmCp7MK4ABo828/smUEfjJDt
8jtCAwN1od1/0fRdckfNTtJg7tHdpEl0zk05C8YZGtxnP2CPo/lWLFuumkWD
rX0njcbQrT+X3Z+9QgMRXf+Dw9zxHPm0wes02JuVWj7EHU/K739bT4P49YcX
DXLHr1PQevSABl80VpwcQHucVuC//owG8u/PrP4P3TKt0HHxFQ3WHmr5+BWt
c0Cx6GQXDWyXtdf2o7OaFYNDemlgLZp7tQ/No718h8t3rM8hrbtf0G7Zy+X2
jNHgrtup4V70C36l75unaSAhU6vPtZa3UoM6Lx1GLlwu+YzO7FBKkhWmwzl+
O02ueTavsBdYQocMr/fvPnHnK1qxYUyODh96VHO5fiG2cq5nJR2ynBnHuNYK
XtnarEYHB16pGK4zPq7Mv0WlA++tW/lcz5ko+xfq0qEuanUP1y6VyltPAx34
re0Z3Pc1y6pIRZrSoX6FfSXX1GiV/oNW+LxTdTv396YPqNTacOhg53DzD9cz
VqvijZ3okJYp0cxdr3P9KhtNDzo0emrXc+vh/eGp4ZQvHcY7TpLcegXO+6y5
HUKHDVHH+rn1jFCREo+OooOTgez/6x2/vW7S+AQ+/2Aew92PUx4OPcKn6PB5
3YqZ79z1JPE1taTTIfRH2hnufl59ZXGOU0yH8s5dS3+iaybGji6voENZcBYv
tx/uyF5w/lJLB6vwWBFuv7Q49Gp5N9GhLUwj4Df6bXS8vOZLOsQ8GWqbRn++
vJ5vqoMO8Wt2WHD78df3oFdR/XS4da4tgxf7998ihXrjH3Sgvp31FEALUMl8
4Qk6nD/dZCOElgkW8TvLz4CtRSqJYugVmZU2HFEGWC2+9UICrXaHZbRcigGv
Jfs1pNF6fHniJSoM2PVuwTYF9NbVxlNe6gyIT5j+o4Q2M/3eQ9ViQE1F7HMV
tH2q9rWGLQyYFrZ9rI6Oln9q3uLEgF9NU5IG6MTNPtpnPRjQLJZyDdBnnCQV
OH4MSK694bKde14U2w/2RjHg7Y5atd3oJ1pjCZO5DDh31E3IBd1GpPs1FDPg
a39AvCf3vAnV50RVMIASJ6Liix68d3yt8D0GdM6+rTiCFjeXf6zYg79X8bXS
WbTsofvXevsZ0HpmZUwmeuVpl/PFPxgQxPuLNx+t9bbChTrDANO3ijbX0Gzn
bfzGCrog/jnI5hn64lFv8LLVhSSVbZWCeN4KWIfrde3XhTbt/SmL0QfVkrV2
HNSFcLmZZDm07psy1VVHdUFv7NKoOvr1xqGF73N0wa4kaucetPAXz1dmn3VB
/tOsUSHary6suW5AF+KYirRKdGdq4sM1Y7pQY5ht3oAu1L9Sy8enB6Fnqj+0
oY3OD2Q2rNKDg2fFT82jg0zdD6i764F42WUtZ7y/PiiF2GX46sFJvTYDP/TW
yXiWYKge2E9s8ohASxQUm3xJ0IPAlAcqGeiyf1/Vs67qwZyN1ZpWdG+Fy7jw
iB7U79zpug3vW8ulB+K+B26CQ6EKVcZ4f/+5UiPzJHwTMLPba1noQsMFVwrj
8Pl66jsX9Ix76UvHc5vgxNmOgOPo8oYRmc6aTbAx5ej8E/Qip6NXGn9tgu9j
/w5bY154cfVcS7afPpisv3YzHPNHqNE3p7BQfcjKF7RIQ6t2MMbZ0foQqVAx
exkdPtstK5mmD+Ej3bXP0RpWyvsTKvVhdTkRpoh5Jnny2njgiD7k7xA3e4g2
hydyu7wN4DXn4r/VmJ9YCbF3OgINgOGpJ2iE3tdm5GQXYQCFGVmaHHSAU12J
R6oBfOLLGjyJzoq+Qo+tMoDQo6Jfx9ADZBKrbsIA3OmZv5swnx3fYpWmErEZ
cqbU/eMx/93f2iX0O8UQLOP0T7tj3vTevqmRSDcExy5dkQS0nGl2+I1cQ9As
jbtUig6wdBjzrzSEqnej6oNoVU5v9482Q4h2PlJ6CPNrgs/3a1+kjOBHPWNn
BOZb64xpZkumEXiOHP5dhXn519SitnZrgGOXLhb7JVFIL5uP0/VsgMf39raf
R/ffqlx1aS/A/DNJ2dvozlDrEN8DACJj9kMLkilk/d8LSosCABbk1N/LQUfP
qfhsPw0g/CJBtBXz/mJBPZG6VoBIcXtpE/x/QGOpq/FFiy0QsSspJfw8hVTO
k/qWaLcVGOe13IQLKOTdselKT8426F5u+WxjJYWUrqKXeB00hn8B10Q671HI
h40ih/1CtoO82uo/Qa0UUj5Xxt0jwASebnwsOfIJ5/8amhATswNytp1YWvQL
89OEZPupaFOoNtFf48hHJac4xqN5YTuhSeTs4wBRKtmo9kK//YQZ8C/zLvBe
SiVpD5Iqf8eag/W/gPhGJSrp3HTJyui8BXS6GR9+oUYlB5fvfpx4yRLIsVsu
IVpUUs5Ix+VJ9i4QZ3q16OpTSd4XvpS1ZbvB/uzzCZYxlXya5r9kM8sK7L9z
xg9YUMk7X4Mn3dusYO2q+jNPmVQy1W/t6CqbPeD1Jtl7vR2VrPk0HtnVsQe+
iqu3Ou+nkjfjvFRXOliDkrJwCMudSn5o37N6uaM1lBW1/PNA8yrrrpHfbw33
nswcjkBb3BVQk3a1hr7x44bF6N7Ji+sX+lhD85Mx/d/oRe5tWqPh1pD2wuVN
ugeVPLCTtoXMsYaJwy+9X3hSSTHxeQenD9ZwrYn3uIQ3vu9kqgvzozW4RagF
KaOvCil5mXzGhtkRwdFCm/BuDtXot4bXLcV/mOjIiSNn/gxZg/DO6tx09Ej3
1OO0f9bwSzM4apkPlWwpGaE8kGdC0M7DMUsPUckc1Uj6DUUmuMklvlZFH7wk
trlEiQkmhZGyOmjBbA2zFBUm9JbPh1ijDVMPutiqM+Gx0LLsVHRl4LeMMT0m
bCotcxfwpZJpWz7yqtgyYcyoTeQbmu711MLIjglTqlLvJ9Dvz1VfsHdgAjXk
dDa/H5VcMxC/4cJ+JpS+ow2vRN9JpdguOsiEBOeO9r3ogffRVVNHmPAkWq3o
ORqCVzk+z2GCos4D1iV/KvktT+zqQC4TSPXktRXopGe/JxZcYkLK5W2DDehO
xRcnoYgJ92cPGXWgvR8G3qy9xgRv1VA1wQAqmSHxWCz/HhO0qC7jbujRqx53
Aj8zgfWkwUHxMJVca3x52OcLE/S7RQLWoPf19Ci59zNhMGhFKBX9fDHzmO0A
EwZE0myN0cWBm00MR5nQE+ns74V2MJRsE+JhgVvgsfGb6OZXt/uyVqBrIxjb
ArF/vKakzymzwDcm9pg5WldA0yRlFQvOaa68y0QX0YtLo9aygC67TNgFHZ2d
5uNCYcGVwq/jsWiGq+vvDUYsmNrdKfUAXfhHXPTBPhZM+48GUoOoZLVhYXS/
Ewv8O3PCGGgyTm9KyJkF99o1fQzRPRIuvbvcWdAaJaFsgZZZV3/rgy8L2t5E
3HZDJ9g6u/yJZkG60KKGDHR63p8uhVgW3F1XVZ6LLvyastvoOAv6+dRTC9EP
/Os2xSey4OGprOVV6L+JYkukz+D4hj2HHqO9G27dpVxmgfgHRudP9BEeS21m
EQuG6HdrJ7jvM/lSGlzCggdJC+Om0UXti87dLWOBccHwD75gKvlxcP9B8xss
KC7r+imN/kH9/enQTRYYfA/evgz9NziZOFPHgny/14nL0bL8t6DrDgvK4cnH
1WgrhUWy7k0syH4VV09D79t/KfnkExbs0RY6rof2LqHzVTxjQdGfrUab0Yna
+4cnXrJA+ndflDG60fzmw5hOFuQG1Gtao9tOm+sVv2NB1cmJAAL96e3nimfd
WO/BvgIOesZZNEviEwuUKT0t+9C0cCe/3P9Y4LhF3eYg9/eP5g7d+s4CvuYg
Xh90gWuP26shFoDTkmxftMTuvQ4Co1ivPnpOIPrJw4x3y3+xoG74Pn8IOlL3
LZMxwQKdrRf2hnHnU2aZHfzDAsZqSmcE+nL6mabYvyxw/T7yNwq9V/QVXJxh
Qc2Bf+Ix6KcTlow2HgJceKYF4tGFT3ao0oUJ6NsXoZaCtjOIz9stSsCOjZlP
UtGS1x/Je4oR8EhmnkhDR2dtWZKzhAD+5aVwFs1YHJ1cK0XA8luDOefQI7H3
hFqXEsDnHDxwHm3voz/HK0/ALmEPywy01JewMAVFAvIvvHTLRDez6yZ0lAi4
4HjUNwt97PmU766VBCRo+btno3WBNuSuQsDt/opdOeifNw67HVMlwNNSZ/VF
dPG66t6sNQTgwTjEtUPuqP0NNQI+Xluan4uWlqK8e6lOwNsD/sZ56OcnfJj/
aRBQaSr9juuYmbIWHgoB+7bP7c1H6/kP7pTXJKBtC+Ul16Nf1Zq0tQnoXVey
8RK6ZK87WNIIOPDDNYrrfa1Ft90YBMge9brP9VLjfnq0HgG1zbdGuH5Rp1Kd
qU/A13YzsQJ07Ib9G2o2E2CcqqrA9aaCvNIXRgQ4/TWW43pM5uOqb1sIuCNb
LsB1aZJi3vw2Apq/237mzufIYye/zISAieBdZVzLBGWe1zIl4NzTRFeuX35/
K2FhRsDkoOhiruP2ySS7WhCwd7ijhLse/dcsoahdOL63n8L1rx1nYzKsCBjs
0S/h1uPKnVez160JYE13iXHtpCkR9pxFwObd95259ZQt3jXRzyagaHaolFvv
FvkU3zkOAUdXO/Vw98dAQMRN0wHff3iFNHf/xkNNe80cCdAbOijD3d+rw/H2
LvsJWB8xJ8Tdf7m3/MwLrgQ8qZ6rS0e3mm9tqXLH+e95hXL7J56M3tnsSUB2
rfJabn+NX5k1mvUhoIDwtD7NfV9q8qVfvgSkrzrx/RR3vQEK/AP+BLzRkw/g
9q+0vt7j9iACetZeskni9uOKp2ufhhCQFHb+RiK6iN8m8W4YAXuEePgT0PQX
gRalEQSE9ekGxnG/tyr+iotRBGTeFbrA/X4enzuz+OwxAiyHLMui0TYOVe0R
xwkI8t9SGo4OHRniMFMIqJt8OX4YTbYfaTA9RcCrdU4F/uiFt4QVDU8TEGHu
vZX7vWdGrf2kdp6Aby3jbO750CDh7DqXQ8Ca9OZXjtzzRKvb/0o5AfXBE+Km
aGNZz9e5FQR8UGS/4Z5Pyf9+65yrImBnmm7KFvTyR0v/RN7A9fcfe7UJbUjs
iWTdIUBgUKdcg/v9hjw9Of+cAKPujKti3PPAzubHxEsCRi+aJgpzzx/4ZjnY
SsAC0xjbBehLCwWWvHmN30ff+ZYZPJ8bM40uXH1PwN97VqJDaIE7Ny8TQwT4
nK5qfYRWtczfGTRMQMch0b330cYfE3+e+4n9IXP4dT06lsdBv2Mc6/3I+2wF
mm87/2vrGVzftjWmF9A8Lbv5rMTYkLHq0nFX9EpHvVLfxRiQx0x4HdEwqrLr
1BI2hAyKeHPQUZJTmS1L2VCg8kvcHD3HztG0VGJD3RXHkxT0zKcBJzMKG+6I
vuJM4n2p6N8ueFCTDRP1I4+H0QZ8d8oTtdmQx2Ok+g19VPXUn6cMNjz8EF7e
if7rQUvbAWxQXXl+/Cb6z9ix+8Z72MAL4Q6B6HF+BSWjw2wQafl29Qve94UC
xNVNQWw4/+ZXcReaveAUnR7Chvvqx8+1oesE+XdvOMqGV4Fbje+hw4WHohRi
2ZAoZDqVgRZYfLv39xk2jF1oLjJHS8vbFVVVsyH5fdTmYswrTfLnNctvsKFX
cLtPNjpYofVuyU1cf0Jjahr6neK2ztwGNmS7DxcfQeesWC+U0siG1L9aGrvQ
qqv/eXi2s+GK4MLkX5iPaNRsDZVfWO/Yy9eo6FTHyHtSE2zwEHK3UUUPpO63
WjDFBtfeK+Oy6JzhtYED02wQk63ln8d8xld243YFrw3oBMnEvEC3rW4x019i
A9MiNdMuaG8FXk8W1QaeRWz8koR58LKge1H8IRt4tzJfrBrzaceXwqMFfjYQ
oc2UvIQWvP9lz70AG1CxeyCUhvYI2Tc3GWwDwoveP/JBawwQNq5RNhAYaZug
hr75zFjYOM0GJjsZjGzMv8+SVXx4q22As+G6WZAX3heSH3XCJ23g3gkR/lnM
36f4/Tlehzlww9+O96kz9iff8NWLQRxQNgsTrUT/4fGcbQ3hwKmNY4LpaKc5
pwKdcA6EHuJrd0ZrTVv9mI3jQO01rfq5A5g3R6jRaekc2H1Esk0TrdQ9WlJb
z4GhBYVbU5yoZPs777//3ebAEs9zxwLQJ94OWMjf4wAfGVltgx7t+DwW2cgB
yhwxqIxubG3TN33OAZPt+dW1jlTSramqtfsDB8wV9K5276OS8o80VMQ+cWA0
Sl/0Prq1sTTQqJcDe/uS9l1G65L5ywq/csBbUOODF1rkdpqzzwgHckbntWcc
qOS9+kU380Y5MOW1UO0z+nBdwsL2XxywGUwUf4T+UBt9jf6bA2KFYjVJ6LQb
M/Me0xzovi/v74veXhNqnf2PA+fzbioz0X+vTxS+nOXA3/pvj+joiiq/3/Pz
OF9C1V559P8AtzzEZw==
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.880722, 0.611041, 0.142051]], 
            LineBox[CompressedData["
1:eJwd2Xk8VF8bAHAkUiqEVPZ9bQZRsj3MWFNmxja2LJV9C0VISkmypZLsSdYK
WZKtS0opWdKGioq0+SGUit5n3n/4fD93Zu4599x7nuVKeQYzDnCwsbE54h/W
f+m0pav54u0GL0IGyhPukwizg6U8gT4Fhr9E1yZqouljqmmKPlWGq9iHSkc7
SYT95f/oXD53DVOuLlzXRTPnaZrz3r2G2r1dA3MdJMLxKnvxN+93hvyzJY1h
BIlw+u3oMun9n2H9uSrKtWYSEfrgWNt59WlDp6+r65zQjWkDezSrpg1HDq0O
4EMbS0cGh1bMGG7YcqM2pgl/3+xe9XThD0P10YgS5h0ScfKco+b3lJ+Gz10t
jcRvk4ghuYQdE97/DAddn0SP3SIRS7In3wlP/zO83D7fnI3mEzC6J6PHBiFO
5fa2aA1+Qz/bTjZo/xaV+7CGRESu122sH2QHi/BdwfXVJIKTV9M2cn4FaB/4
5FJ4k0SIrpRJXtJeBUmjgcUtFSTiJmfRO6HoVdAsWHT+ONqQU0pz691VYHHG
4IMp2nOFxNBeMx7wWOFUPFBOIsrYtygSDqvh58XqW1NlJEJzWaDzRCQvzPcX
yOiUkohr0ezLK1z5INtijZdIMYk4MdeV/DSGD7xOlHd+u0oi3ANTt1zO5YP7
F49Gt6NF3bbobB3hA/OwbbP+6AxjrXCmMz+s+/CE634RiTjG4/vluqMAPAgI
/nD6ColwOUE6EnFEAFq+tvd7oHf+mec2viwApYfGN+mhF76dkHv5SgAE7y7f
nikkEQF9ue7szA1QasG91QPteKnvhZ29ICTKigvRC0iENt+lA5KHBUGtk1RJ
RguecZ37clEQFsfDc/nQfVFf+OOeC4Lz4S/p/fkkwnQv5+4KWyGYzKy854DW
lNtxb5khDDNu6zwO5eH65C/TH4UKw1CZQ60Tekr4/uj5DGEQYCx5ALpiFWNZ
cUAY7FcXDvKiJb/569jQN8KcKhd/RS6JWFtbUFVqLQIGczd+zOeQiMPCi1kD
QSLwsm8xagz99gjjxFKKCGilTTv3oKthpZ3NExHYw1yvUoJmPPX7vWy+CSrb
nf45o5vVOz8o+WyCn0/N7CzRshfFemxPbwL/E7orddDzzn0FFfc3QVq1e9hG
dNZnLRN7482QuqL5zKtsEsG2O23rcY/NwMj+Wf0I7Vs9ufF63GaonknUaEbv
jMj5wn4Xj799Qi1AXx2ae6b6djMc8kl/fg7Na7Cn1WFpM3zK7SZOot9wsqff
0N0CvhkdJf5oUx+nI6+ctsBCetoVN/TNx7WeK6K2AFE3s2CDjsvw0nJs3ALK
Sedq9NHSkk+GOLVEoUrrl5cQ+my8XCfJVhQYZYrbedFzE7E3nMJEAcYlPVeg
799Qj6uuEYX3i0cfzl4mEVv5z/oO94lC7fi3FV/RmeEfGVzTosDZuT37A9pH
95Kcy1YxKJYKe/kc3Zc/ve70bjEg/vjH9qJ1OCx/1QSIwY+j9LhH6KIDV8dG
zorBtV0Kb+6hVz/6281dKQar+6cvtKHDVO3rNLrFQJRSU3oHPZJWlef6WQxy
CvyF6tHUH6tOJ64ShzU3pN9Wo2/Ye4bUKohD3e9X7DfQwk3Njm9NxSFnND2u
HB0rJkTh8RKHhGNWTiXoT3FBqttOicNvYm3aVTTtY5eQW7E4bHd4IX4F3Wgm
9e/MPXHY0VrKU4CWqoyarHsvDg3a8dZ56KR1g/3v2CVAqs93Ogc9e1CtebWU
BBTvdfmWjXZ+nlCsBXg8zpnCcueO0RR3NwnYluM9fxmtmqsTcTZWAjTexXGw
jl/8l+HekCcBCtRSP5aXPb9ZjLVIwIukITXW73s9MNHkHZGAVr3NVrnoXqUC
0e1/JIDv+oH7rPHkmv7lUF8rCa0/mi+zxsvrFpstIi4JERl1f1nziYlg02Aj
SUKe9ePuYvS3tBOPPhlKgory8ooytEsZp0cvTRKyBi3LKtFPiIRfDR6S8KLu
5u0qtN7rVen5oZLA/CivUYe+PpOkkBAvCWvJ1RtZ6yO6eu3dwAuS4Cdi5sNa
v2TpNHu7a5Lg1f9JphP9dyf/lF6DJMQbp1p2s9bTX0iM95UkDAYMvXqJtjp5
qe7HpCQ8PnwY3qFbcjdZDS9KQuAQ54ZPrPn1iEVXbJGCMu73v36y5jdRIJCh
KgVdbbK87Hi/xixLVRzRl4LSCqOk1WgXkvxrczcpeF879UAc/cSsLIQcIgX8
LiGnlNB67sqrRI5LQf2eqpvb0KLntm7/VITH31ONrNDJ5dVPn9ZKwbnKpAom
+m+7hldDpxTI8QfEHkCPzGpfPDUhBbItIwfi0Hm2hj9klKXhip7n/5/vdYHt
SWt0pUG7NOy/bnTsKYr0j13SsGFNr/Awem+DGb0jUBr0LbSK/6LFRWhV7jXS
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
Dh/6ZnXIz3//mLDkSxwWR/8PG6KUDQ==
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            LineBox[CompressedData["
1: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
Cuxkvx6gJEclxtj1lMdpqrBK7qT8C3kqseXW4L6Xm9aBZX2IYbkalZhKq7X/
arUOkisDtTjWU4mClHTjvzvWQZqR0oQNWiLBUUojch1sDme29KHHTvz3OuHZ
OlB8IzzEq04lsnYla7Os1eApS/HlNk0qwSFlyTa4cz1kJXenZGhTiQoxxZ9L
AeuBEJG16UMHrVjokDqxHnyNlEuUdKhEF3dpqXXWesgzvXo2D/1oerVP0bf1
oCrQ7V6oSyW82mfeHgrcAM27rPmz9alE46XcVM4odbj3bnTPdgMq8WLp1eO3
l9Uh07y8IQZNHPzVnJSlDl/25b1+gi532MSpVqsOt9huFCobUolciVcB27k0
YHbWo2oaHZPxc0vSRQ3477diauwWKnFihShrd5oGNDbvzHiEPnpSP2TdfQ1o
+1qt/w0d4hmVW9mkAUlBvcqmxlTCQ1VkRY+IJtTwbR+aQxsX6fauTdEEA8mS
NHugEgZrXOfH8zVhlJNadhStnxApXvlEE4oO8rhlozVC6uk2XZqw2DPJmETL
6bMeHFxNATHluLp4Eyrxp+ZY9JMcCsh4GMbeM8XvSzMrLfoxBVY/ZkATejzz
Rdm2egpcvEaJ+YUeOiU00j1IgW0+71KpZlRi5Haz2qmVVPAebVp+H93pvefq
HRYVdITTSy5txfHo9rjiiAcVJHinp3LRHky+nu2+VDh83vb1U/R3kwcbZsKp
YHF4lcZP9IQce51FMhVe2PP9t9WcSjwWcxqRyaSC3LWt8a7oCP67Ir9yqVB7
7vVIIHpxluGeXEaFlm/TrOtogfas2cH3VPhRf37sC7rp5dSq6m4qFCUPbR5H
XyXoWxMGqLC7UkGc3YJKSBWNJ2yapgLr5YkwBXRXztZywQUquDk7zlPRGakp
3b2cWnA5fO9yQCufh/XnxbXA8UF27y70YFQiw01OC1oU4jP80AWHhw5rKWvB
4gflH+Fo6r6E5x06WtDa0K12BW1E69213lELbhqvpz9FL+npxizu0IIPedoH
G9G16ufutnlqwXmnZSptaLoMdeZoiBbE+GXqfkMLiMTK2R3VgrYLxpdH0U08
n0yVorVAwnP74Sm003TU5ddXtCCuLXCYwxI/32j748wbWkBZ2nmID/3569rP
obe0gI0/NH4FOrPjGAf9rhbs5sjRWon2bGleJ/dAC96K9e2RQas0KNmNV2iB
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
nF1aYoFedFvB5u8U4n8N7GZj
             "]]}}}}, {
        ImageSize -> 300, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, -16.5}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"E{\\!\\(\\*SubscriptBox[\\(X\\), \\(c\\)]\\)}\"", 
             TraditionalForm], None}, {
            FormBox["\"Time\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
         PlotRange -> {{0, 
           100}, {-16.463411041664827`, -15.722408330928193`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}],
       GraphicsBox[{{{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.368417, 0.506779, 0.709798]], 
            LineBox[CompressedData["
1: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
mt+SOfA/YhzAPA==
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.880722, 0.611041, 0.142051]], 
            LineBox[CompressedData["
1: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
5whwWJKhNRJNxVTNjWd+/CUgN+uI9sA5KvrNGjd9mSdgZyePbucVcv9bKaYX
uDngLD+s+zaRirsJPXTj4UBMSOvu9iQq2j+/Zqe1hAPNwul7mm9Q0XHNbMsL
Xg4cNtth0JBO6qe3rqZ8KQcuMjYa1mVScW3hRaqTAAfufuU2qs0m9VN2nF0k
+c/ZFkp1PhWdl6g67lzOAcm2auOKQirKDVKEXpBsuCnNpKyYihlCQw32KziQ
UOttWlxKxRcvZCRdBTlQKbDPrKCMioGGPxs6Se601zLPLaeifFvlASshDszn
i1tkVZJ8U3DoPslbfnFZpldTsTez0Ev2/+9nDb5ZprCoWDKm2nGB5ICrr6xu
EVRMPr1f/QvJhErq/qQHVDQx3pMVv4oDvaeirRPqqZh5LaLiDck8z71sLjVQ
McoCi9YLc0BR1Ioa10j2W4VlpB3JVh7baeeeULFSxlcrgeTgyg22Z59RkaXs
2VRPMpOLyy7yORWHzqzcMUJy3b5Bu9MvqLht+e7Tq1ZzoD+92f5kMxWT/jxm
qJMs8L3SIbSFimXVFy7uJVltVwo9uI2s/5eHxQGSqXFRjkHtpL4cykcvkk++
9Tzg30FFziFh+P/72gwZS6cj78h+yGP5/Z8bj2k6e3VSUS9N+bA3yUMPxVzc
u6jo2ewu5USy0MpFF7ceKl5Rdc3///vbnkuJHrSPVDy3/+yJrSSXLN3kZ9JH
xRy+aPM1/9/v3N1ju/qpqH4reuM4WY8J956TqgNUrDt1d+gxySKRzZGbB6k4
enBH+XWS++eczq8ZoqLqDoujLiSXn/h+mW+EijGK8grSJEdOhSf/+U5Fwwru
Nx9JvS2PLU/5PkbFVzckg2+RLD6ekvXxB5n/aB2PKclDvkqFr39SUUxZJfYX
eX6sb0Tpk19UXC5V+ZNJ8jkP0yr2byoG8+Zb6pBM/fyeUzJDRZmT9smvyf4Y
75p+lvSXilrPjrz/SfbTA4cLr2Lnyf5QvPLmJMmXOtZ1hC1SsWbHZNUs2Y/y
LVqfnZfQ0H1hz8Zhsl+nzJ98289Hwxshy7IcSG5soo0bLqXh2XUDXA3LOOD6
KPiv4goaTvc+oUeS/a+qz8MjIUTD3Ny3Fh3kvMzVXhNYtYqGSu+Xr5cl+VZ1
+brfa2iYba6ytYKPAy1F4xqPxGnY+Mjc5Cw5j+mykdrVEjQ0rPR4U0DOq2+O
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
GtY525EK/wMsVZod
             "]]}}}, {{{}, {}, {
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             RGBColor[0.560181, 0.691569, 0.194885]], 
            LineBox[CompressedData["
1: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
             "]]}}}}, {
        ImageSize -> 290, DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
         Identity, Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
            "\"Var{\\!\\(\\*SubscriptBox[\\(X\\), \\(c\\)]\\)}\"", 
             TraditionalForm], None}, {
            FormBox["\"Time\"", TraditionalForm], None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
         PlotRange -> {{0., 99.99999795918367}, {0, 0.12}}, PlotRangeClipping -> 
         True, PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {0, 0}}, Ticks -> {Automatic, Automatic}}]},
      "RowDefault"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.650816039240732*^9, 3.650816080853739*^9}, 
   3.6508161219395943`*^9, 3.65081616046434*^9, 3.650816210106596*^9, {
   3.6508163585179367`*^9, 3.650816511482525*^9}, {3.650816578658154*^9, 
   3.650816616012601*^9}, 3.650816651109223*^9, {3.650816694974482*^9, 
   3.650816743610717*^9}, {3.6508167847128487`*^9, 3.650816831792676*^9}, 
   3.650816873548121*^9, 3.65081857886242*^9, 3.650818738526194*^9, 
   3.65081882402951*^9, {3.650822323870441*^9, 3.650822345253611*^9}, 
   3.6508224789285297`*^9, 3.650822648026229*^9, 3.650823215621633*^9, 
   3.650823356888947*^9, {3.650823676306826*^9, 3.650823688433399*^9}}]
}, Open  ]]
},
WindowSize->{1666, 1244},
WindowMargins->{{409, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 189, 3, 28, "Input"],
Cell[592, 18, 3911, 106, 131, "Input"],
Cell[4506, 126, 211, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[4742, 134, 1728, 48, 35, "Input"],
Cell[6473, 184, 5022, 149, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11532, 338, 5287, 144, 125, "Input"],
Cell[16822, 484, 5062, 146, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21921, 635, 1025, 30, 28, "Input"],
Cell[22949, 667, 982, 29, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23968, 701, 289, 6, 28, "Input"],
Cell[24260, 709, 1579, 46, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25876, 760, 375, 7, 28, "Input"],
Cell[26254, 769, 1032, 27, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27323, 801, 137, 1, 46, "Input"],
Cell[27463, 804, 1476, 45, 48, "Output"],
Cell[28942, 851, 839, 25, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29818, 881, 159, 3, 28, "Input"],
Cell[29980, 886, 2269, 69, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32286, 960, 330, 5, 28, "Input"],
Cell[32619, 967, 1088, 29, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33744, 1001, 752, 23, 47, "Input"],
Cell[34499, 1026, 775, 26, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35311, 1057, 1591, 43, 80, "Input"],
Cell[36905, 1102, 1744, 51, 54, "Output"],
Cell[38652, 1155, 1511, 45, 54, "Output"],
Cell[40166, 1202, 110912, 1829, 230, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151115, 3036, 1121, 29, 46, "Input"],
Cell[152239, 3067, 4324, 106, 60, "Output"],
Cell[156566, 3175, 71778, 1189, 216, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[228381, 4369, 630, 18, 28, "Input"],
Cell[229014, 4389, 963, 27, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230014, 4421, 181, 3, 28, "Input"],
Cell[230198, 4426, 460, 12, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230695, 4443, 130, 1, 46, "Input"],
Cell[230828, 4446, 860, 27, 47, "Output"],
Cell[231691, 4475, 800, 25, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232528, 4505, 1323, 39, 126, "Input"],
Cell[233854, 4546, 14142, 244, 253, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248033, 4795, 2958, 86, 129, "Input"],
Cell[250994, 4883, 3990, 104, 97, "Output"],
Cell[254987, 4989, 3814, 107, 76, "Output"],
Cell[258804, 5098, 3225, 93, 62, "Output"],
Cell[262032, 5193, 345, 5, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262414, 5203, 1646, 34, 46, "Input"],
Cell[264063, 5239, 13755, 245, 358, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[277855, 5489, 3612, 98, 226, "Input"],
Cell[281470, 5589, 13372, 358, 252, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[294879, 5952, 594, 15, 28, "Input"],
Cell[295476, 5969, 13945, 240, 237, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[309458, 6214, 580, 16, 28, "Input"],
Cell[310041, 6232, 4473, 112, 78, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314551, 6349, 1213, 36, 63, "Input"],
Cell[315767, 6387, 1876, 58, 56, "Output"],
Cell[317646, 6447, 1892, 59, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[319575, 6511, 728, 21, 28, "Input"],
Cell[320306, 6534, 83833, 1385, 743, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[404176, 7924, 209, 3, 46, "Input"],
Cell[404388, 7929, 1988, 59, 56, "Output"],
Cell[406379, 7990, 3467, 109, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409883, 8104, 376, 10, 28, "Input"],
Cell[410262, 8116, 2005, 59, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412304, 8180, 3192, 95, 98, "Input"],
Cell[415499, 8277, 772, 25, 51, "Output"],
Cell[416274, 8304, 2069, 66, 54, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[418380, 8375, 1517, 37, 80, "Input"],
Cell[419900, 8414, 2570, 49, 368, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[422507, 8468, 977, 27, 63, "Input"],
Cell[423487, 8497, 2118, 42, 364, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[425642, 8544, 247, 8, 28, "Input"],
Cell[425892, 8554, 225, 7, 32, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426154, 8566, 408, 12, 35, "Input"],
Cell[426565, 8580, 368, 12, 40, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[426970, 8597, 576, 19, 61, "Input"],
Cell[427549, 8618, 522, 19, 61, "Output"]
}, Open  ]],
Cell[428086, 8640, 2589, 74, 140, "Text"],
Cell[430678, 8716, 2452, 69, 118, "Input"],
Cell[CellGroupData[{
Cell[433155, 8789, 3239, 73, 97, "Input"],
Cell[436397, 8864, 69323, 1393, 227, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[505757, 10262, 253, 5, 28, "Input"],
Cell[506013, 10269, 161, 2, 86, "Output"]
}, Open  ]],
Cell[506189, 10274, 663, 12, 87, "Text"],
Cell[CellGroupData[{
Cell[506877, 10290, 750, 18, 28, "Input"],
Cell[507630, 10310, 2809, 57, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[510476, 10372, 253, 5, 28, "Input"],
Cell[510732, 10379, 161, 2, 28, "Output"]
}, Open  ]],
Cell[510908, 10384, 219, 5, 49, "Text"],
Cell[511130, 10391, 7956, 230, 380, "Input"],
Cell[519089, 10623, 3983, 119, 107, "Input"],
Cell[CellGroupData[{
Cell[523097, 10746, 16468, 343, 790, "Input"],
Cell[539568, 11091, 201076, 3385, 405, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[740681, 14481, 119, 2, 28, "Input"],
Cell[740803, 14485, 72, 1, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[740912, 14491, 189, 4, 28, "Input"],
Cell[741104, 14497, 210, 3, 86, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[741351, 14505, 15864, 334, 670, "Input"],
Cell[757218, 14841, 174248, 2941, 407, "Output"]
}, Open  ]]
}
]
*)

