#include <iostream>
#include <cmath>
using namespace std;
double E(double a[], int i, size_t N);
double var(double a[], int i, size_t N);
double cov(double a[], int i, int j, size_t N);

main()
	{
	const int N=2;
	double EX[N]={15.L,15.L};
	double VX[N]={1.L,1.L};
	double a[N]={1.L, 1.L};
	for(double a1=1.L; a1<100.L; a1+=0.01L)
		{
		a[1]=a1;
		double VZ=0.L;
		for(int i=0; i<N; i++)
			{
			VZ += var(a,i,N)*VX[i] + var(a,i,N)*EX[i]*EX[i] + E(a,i,N)*E(a,i,N)*VX[i];
			for(int j=0; j<N; j++) if(j!=i) VZ += cov(a,i,j,N)*EX[i]*EX[j];
			}
		cout << E(a,1,N) << '\t' << VZ << endl;
		}
	
	
	
	
	
	}
double E(double a[], int i, size_t N)
	{
	double a0=0.L; for(int k=0; k<N; k++) a0+=a[k];
	return a[i]/a0;
	}
	

double var(double a[], int i, size_t N)
	{
	double a0=0.L; for(int k=0; k<N; k++) a0+=a[k];
	return a[i]*(a0-a[i])/(a0*a0*(a0+1.L));
	}

double cov(double a[], int i, int j, size_t N)
	{
	double a0=0.L; for(int k=0; k<N; k++) a0+=a[k];
	return -a[i]*a[j]/(a0*a0*(a0+1.L));
	}
